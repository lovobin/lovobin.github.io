<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语学习</title>
      <link href="2021/03/16/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/03/16/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><blockquote><div class="row">    <embed src="https://cdn.jsdelivr.net/gh/lovobin/hiddenContent@v1.0.7/PDF/learnEnglish.pdf" width="100%" height="550" type="application/pdf"></div><p><a href="javascript:;">后续补充中····</a></p></blockquote><h1 id="时态使用总结"><a href="#时态使用总结" class="headerlink" title="时态使用总结"></a>时态使用总结</h1><h2 id="一般现在时"><a href="#一般现在时" class="headerlink" title="一般现在时"></a>一般现在时</h2><h2 id="现在完成时"><a href="#现在完成时" class="headerlink" title="现在完成时"></a>现在完成时</h2><blockquote><p><code>have/has done</code></p></blockquote><ol><li><p>标志性时间状语</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">标志词:</span><br><span class="line"></span><br><span class="line">already recently/lately 已经</span><br><span class="line"></span><br><span class="line">到现在: by/up to + now,so far ,yet</span><br><span class="line">    </span><br><span class="line">    一段时间: <span class="keyword">for</span> + 一段时间， <span class="keyword">in</span> the past sew years</span><br><span class="line">    </span><br><span class="line">    over the past few years</span><br><span class="line">    </span><br><span class="line">    自从: since + 过去时间</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>固定句式</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This / It is + 序数词 + that + 现在完成时(have/has down) 翻译: 这是某人第几次做某事</span><br><span class="line"></span><br><span class="line">This/It is + 最高级 + that + 现在完成时(have/has down)  翻译: 这是某人做过的最···的事</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>Eg</code></p><blockquote><p>This is the <code>first time that</code> I  <code>have visited</code>  The Great Wall.</p><p>This is the <code>most interesting</code> file  <code>that</code> I <code>have seen</code>.</p></blockquote></li></ol><h2 id="现在完成进行时"><a href="#现在完成进行时" class="headerlink" title="现在完成进行时"></a>现在完成进行时</h2><blockquote><p><code>have/has benn doing</code></p><p>总体思维:  <code>过去发生,持续到现,继续持续</code></p><p>现在完成时的替补用法</p><p>Eg:   Since graduated from the university,he<code>has been working</code> in an accounting company in Beijing.</p></blockquote><h2 id="过去完成时"><a href="#过去完成时" class="headerlink" title="过去完成时"></a>过去完成时</h2><blockquote><p><code>had done</code></p></blockquote><ol><li><p>过去的过去</p></li><li><p>标志性时间状语</p><blockquote><ol><li>by/until/up to + 过去时间</li><li>By the time + 一般过去时的句子 (did)</li><li>before + 过去时间</li></ol></blockquote></li><li><p>固定句型</p><blockquote><p>This/It was + <code>序数词</code> + that + 过去完成时  翻译: 这是某人第几次做某事</p><p>This/It was + <code>最高级</code> + that + 过去完成时 翻译:  这是某人做过的最···的事  </p></blockquote></li><li><p>三胞胎</p><blockquote><p>hardly/scarcely    ·  [<code>时态: had done</code>] ·    <code>when</code> ·[一般过去时 <code>did</code>]·</p><p>no sooner   ·  [<code>时态: had done</code>] ·   <code>than</code>   ·[一般过去时 <code>did</code>]·</p><p>翻译:  一  ··· 就 ···</p></blockquote></li></ol><h2 id="将来完成时"><a href="#将来完成时" class="headerlink" title="将来完成时"></a>将来完成时</h2><blockquote><p><code>will/shall have + done</code></p></blockquote><ol><li><p> by/until/up to + 将来的时间</p></li><li><p>by the time + 一般现在时的句子<code>(do/does)</code></p></li><li><p>差异比较</p><blockquote><p>By  the time I <code>arrived</code> in Beijing, he <code>had finished</code> his novel.   [arrived: did  一般过去时  <code>had finished</code>]</p><p>By the time I <code>arrive</code> in Beijing, he <code>will have finished</code> his novel. [arrive: do 一般现在时 , 将来完成时]</p></blockquote></li></ol><h2 id="过去将来时"><a href="#过去将来时" class="headerlink" title="过去将来时"></a>过去将来时</h2><blockquote><p>结构: <code>would do </code> , <code>was/ were going to do</code></p></blockquote><ul><li><p>含义</p><blockquote><p>站在过去,展望未来。</p><p>Eg: <code>她曾经说要和我在一起</code></p></blockquote></li></ul><h1 id="语态使用总结"><a href="#语态使用总结" class="headerlink" title="语态使用总结"></a>语态使用总结</h1><h2 id="被动语态的构成"><a href="#被动语态的构成" class="headerlink" title="被动语态的构成"></a>被动语态的构成</h2><blockquote><p><code>be + done</code></p></blockquote><table><thead><tr><th align="center">语态被动</th><th align="center">结构</th></tr></thead><tbody><tr><td align="center">一般现在时被动</td><td align="center"><code>am/is/are done</code></td></tr><tr><td align="center">一般过去时被动</td><td align="center"><code>was/were done</code></td></tr><tr><td align="center">一般将来时被动</td><td align="center"><code>will be done </code></td></tr><tr><td align="center">现在进行时被动</td><td align="center"><code>am/is/are being done </code></td></tr><tr><td align="center">过去进行时时被动</td><td align="center"><code>was/were being done </code></td></tr><tr><td align="center">现在完成时被动</td><td align="center"><code>have/has been done</code></td></tr><tr><td align="center">过去完成时被动</td><td align="center"><code>had been done</code></td></tr><tr><td align="center">将来完成时被动</td><td align="center"><code>will have been done</code></td></tr></tbody></table><ul><li><p>分析</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">C</th><th align="center">D</th></tr></thead><tbody><tr><td align="center"><code>tell</code>[原型: 一般现在时]</td><td align="center"><code>are told</code>[be done ： 被动 一般现在时被动]</td><td align="center"><code>is telling</code>[be doing 现在进行时]</td><td align="center"><code>tells</code>[单三: 一般现在时]</td></tr><tr><td align="center"><code>are arguing</code></td><td align="center"><code>was being argued</code>[过去进行时被动]</td><td align="center"><code>have argued</code></td><td align="center"><code>has been argued</code>[现在完成时被动]</td></tr><tr><td align="center"><code>had been taken</code>[过去完成时被动]</td><td align="center"><code>was took</code>【错误形式】</td><td align="center"><code>was taken</code></td><td align="center"><code>took</code></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>Eg. The water will be much more polluted unless some measures <code> are taken</code> right now.</p><p><code>unless </code>= <code>if not</code></p><p>【if】： 主将从先</p></blockquote></li></ul><h1 id="虚拟语气"><a href="#虚拟语气" class="headerlink" title="虚拟语气"></a>虚拟语气</h1><h2 id="if-条件虚拟"><a href="#if-条件虚拟" class="headerlink" title="if 条件虚拟"></a>if 条件虚拟</h2><ul><li><p>对过去虚拟</p><table><thead><tr><th align="center">if从句</th><th align="center">主句</th></tr></thead><tbody><tr><td align="center"><code>had done </code></td><td align="center"><code>would/could/should/might + have done</code></td></tr></tbody></table></li><li><p>对现在虚拟</p><table><thead><tr><th align="center">if从句</th><th align="center">主句</th></tr></thead><tbody><tr><td align="center"><code>did</code>(<code>be 用 were</code>)</td><td align="center"><code>would/could/should/might + do</code></td></tr></tbody></table></li><li><p>对将来虚拟</p><table><thead><tr><th align="center">if从句</th><th align="center">主句</th></tr></thead><tbody><tr><td align="center"><code>did(be 用 were)</code></td><td align="center"><code>w/c/s/m + do</code></td></tr><tr><td align="center"><code>were to do</code></td><td align="center"><code>w/c/s/m + do</code></td></tr><tr><td align="center"><code>should do</code></td><td align="center"><code>w/c/s/m + do</code></td></tr></tbody></table></li></ul><h2 id="省略-if-的虚拟"><a href="#省略-if-的虚拟" class="headerlink" title="省略 if 的虚拟"></a>省略 if 的虚拟</h2><blockquote></blockquote><h2 id="错综虚拟"><a href="#错综虚拟" class="headerlink" title="错综虚拟"></a>错综虚拟</h2><blockquote></blockquote><h1 id="定语从句"><a href="#定语从句" class="headerlink" title="定语从句"></a>定语从句</h1><blockquote><p>定义：在一个复合句中，跟在主句后修饰某一名词或代词（统称为先行词）的从句叫做<strong>定语从句</strong>被定语从句所修饰的词叫做<a href="https://zh.m.wikibooks.org/w/index.php?title=%E5%85%88%E8%A1%8C%E8%AF%8D&action=edit&redlink=1">先行词</a>(Antecedent).定语从句通常跟在先行词之后,由<a href="https://zh.m.wikibooks.org/w/index.php?title=%E5%85%B3%E7%B3%BB%E8%AF%8D&action=edit&redlink=1">关系词</a>(Relatives)引出.因此,定语从句又可称为关系分句. 定语从句主要分为非限制性定语从句和限制性定语从句。</p></blockquote><ul><li><p>关系代词的基本用法</p><table><thead><tr><th align="center"></th><th align="center">人</th><th align="center">物</th><th align="center">人&amp;物</th></tr></thead><tbody><tr><td align="center">主干成分(主宾表)</td><td align="center"><code>who/that</code></td><td align="center"><code>which/that</code></td><td align="center"><code>taht</code></td></tr></tbody></table></li><li><p>非限制性定定语从句</p><blockquote><p>特点: 逗号分开   非限制    没有   <code>that</code></p></blockquote></li><li><p><code>whoose</code>的用法</p><table><thead><tr><th align="center">成分</th><th align="center">主宾表</th><th align="center">定语</th><th align="center">时间状语</th><th align="center">地点状语</th><th align="center">原因状语</th></tr></thead><tbody><tr><td align="center">先行词</td><td align="center">who/what/which</td><td align="center">whose</td><td align="center">when</td><td align="center">where</td><td align="center">why</td></tr></tbody></table></li></ul><h1 id="状语从句"><a href="#状语从句" class="headerlink" title="状语从句"></a>状语从句</h1>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-后台管理配置</title>
      <link href="2021/03/16/Hexo-%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE/"/>
      <url>2021/03/16/Hexo-%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-后台管理配置"><a href="#Hexo-后台管理配置" class="headerlink" title="Hexo-后台管理配置"></a>Hexo-后台管理配置</h3><h4 id="后台管理系统效果预览"><a href="#后台管理系统效果预览" class="headerlink" title="后台管理系统效果预览"></a>后台管理系统效果预览</h4><ul><li><p>查看地址<a href="https://tiny-block-7b78.lovobin.workers.dev/hpp/admin/login">登录后台管理系统</a></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210316143430727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="博客后台管理系统"></p></li><li><p>整体效果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210316143559692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="后台"></p></li></ul><h4 id="配置注意点"><a href="#配置注意点" class="headerlink" title="配置注意点"></a>配置注意点</h4><ul><li>需集成部署</li><li>源代码仓库需配置<code>tocken</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Github-Actions-自动化部署总结</title>
      <link href="2021/03/11/Github-Actions-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E6%80%BB%E7%BB%93/"/>
      <url>2021/03/11/Github-Actions-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h3><blockquote><p>感谢<code>小冰啵啰鸽</code>提供的帮助</p><p>自动化部署带来的便利: <code>由于时间积累下来,该站点添加的资源越来越多</code>，在经过<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><p>之后花费的时间越来越长,引起的不便,于是看到了关于自动化部署.只需要对文件进行传统提交即可,<code>actions</code>自动进行<code>hexo</code>任务操作,</p><p>解决了不足问题。</p></blockquote><h4 id="创建github私有仓库"><a href="#创建github私有仓库" class="headerlink" title="创建github私有仓库"></a>创建<code>github</code>私有仓库</h4><ol><li><p>请备份博客原有内容 </p></li><li><p>创建仓库流程</p><ul><li><p>点击<code>github</code>头像左侧<code>加号</code>，也可以访问该链接进入: <a href="https://github.com/new">点击进入创建仓库</a></p></li><li><p>勾选<code>private</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/privateRepo.png" width="300"></li></ul></li><li><p>私有仓库的作用: <code>存储博客源文件</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/pricvate.png" width="600"></li><li><p>创建<code>git</code>密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新配置 密钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;github 的邮箱地址&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原有密钥在 C:\Users\computer-name\.ssh</span></span><br><span class="line">公钥: id_rsa.pub</span><br><span class="line">密钥: id_rsa</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>在<code>github</code>私有仓库添加密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 进入创建的私有仓库 </span><br><span class="line">2. 点击 Settings</span><br><span class="line">3. 在左侧导航栏目最低测有: Secrets</span><br><span class="line">4. 添加已有 git 私钥</span><br></pre></td></tr></table></figure></li></ul></li><li><p> 创建<code>tocken</code></p></li></ol><ul><li><a href="https://github.com/settings/tokens">Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;</li><li>勾选<code>repo</code></li><li>复制生成的<code>tocken</code>，保存,<code>后续操作如果个人失误会导致tocken不可用,只需重新生成即可</code></li></ul><h3 id="创建actions"><a href="#创建actions" class="headerlink" title="创建actions"></a>创建<code>actions</code></h3><ul><li><p>在私有仓库的博客根目录下创建一下结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- .github(文件夹)</span><br><span class="line">-- workflows(文件夹)</span><br><span class="line">-- xxx.yml (文件：名称随意 )</span><br></pre></td></tr></table></figure></li><li><p>个人<code>xxx.yml</code>文件内容</p><blockquote><p>说明: 个人使用两个仓库进行自动化部署</p><ol><li>仓库一: <code>github账户名.github.io 使用 master 分支,只用于生成类似于public下的静态文件</code></li><li>仓库二: <code>私有仓库源码存放 main 分支</code></li></ol></blockquote><div class="hide-block"><button type="button" class="hide-button button--animated" style="">Actions    </button><div class="hide-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line">name: 自动部署</span><br><span class="line"></span><br><span class="line">on: [push, repository_dispatch]</span><br><span class="line"></span><br><span class="line"><span class="built_in">jobs</span>:</span><br><span class="line">  deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: 检查分支</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">      with:</span><br><span class="line">        ref: main <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改 私有仓库提交 main 分支</span></span><br><span class="line">        </span><br><span class="line">    - name: 安装 Node</span><br><span class="line">      uses: actions/setup-node@v1</span><br><span class="line">      with:</span><br><span class="line">        node-version: <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    - name: 安装 Hexo</span><br><span class="line">      run: |</span><br><span class="line">        <span class="built_in">export</span> TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">        npm install hexo-cli gulp-cli -g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    - name: 缓存 Hexo</span><br><span class="line">      uses: actions/cache@v1</span><br><span class="line">      id: cache</span><br><span class="line">      with:</span><br><span class="line">        path: node_modules</span><br><span class="line">        key: <span class="variable">$&#123;&#123;runner.OS&#125;</span>&#125;-<span class="variable">$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;</span>&#125;</span><br><span class="line"></span><br><span class="line">    - name: 安装依赖</span><br><span class="line">      <span class="keyword">if</span>: steps.cache.outputs.cache-hit != <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      run: |</span><br><span class="line">        npm install --save</span><br><span class="line"></span><br><span class="line">    - name: 生成静态文件</span><br><span class="line">      run: |</span><br><span class="line">        gulp</span><br><span class="line"></span><br><span class="line">    - name: 部署</span><br><span class="line">      run: |</span><br><span class="line">        git config --global user.name <span class="string">&quot;lovobin&quot;</span> <span class="comment"># 需要修改处: lovobin </span></span><br><span class="line">        git config --global user.email <span class="string">&quot;3327511395@qq.com&quot;</span> <span class="comment"># 邮箱修改: </span></span><br><span class="line">        hexo deploy</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></li><li><p>注意<code>gulp</code>任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">需要在根目录下有文件: gulpfile.js</span><br><span class="line"></span><br><span class="line">可参考 `akilar.top/`中的静态资源有关的一篇文章</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="修改博客根目录下的配置文件"><a href="#修改博客根目录下的配置文件" class="headerlink" title="修改博客根目录下的配置文件"></a>修改博客根目录下的配置文件</h3><ul><li><p>修改<code>repo</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line">repo: https://账户名称:tocken@github.com/账户名称/账户名称.github.io.git</span><br><span class="line"><span class="comment"># repo: https://lovobin:[修改为tocken]@github.com/lovobin/lovobin.github.io.git </span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>个人遇到其他事项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">魔改主题时切勿为了方便对下载内容进行覆盖操作</span><br></pre></td></tr></table></figure></li></ul><h3 id="验证actions"><a href="#验证actions" class="headerlink" title="验证actions"></a>验证<code>actions</code></h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210311232135692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> Github-Actions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写接口文档</title>
      <link href="2021/02/25/%E7%BC%96%E5%86%99%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
      <url>2021/02/25/%E7%BC%96%E5%86%99%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="Node-接口文档"><a href="#Node-接口文档" class="headerlink" title="Node-接口文档"></a>Node-接口文档</h3><h4 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h4><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install apidoc -g</span><br></pre></td></tr></table></figure></li><li><p>接口源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; Router &#125; = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 User 对象</span></span><br><span class="line"><span class="keyword">const</span> UserIn = <span class="built_in">require</span>(<span class="string">&quot;../module/userModule&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@api <span class="type">&#123;post&#125;</span> </span>/user/register 用户注册</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiName </span>用户注册</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiGroup <span class="variable">User</span></span></span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiParam <span class="type">&#123;String&#125;</span> </span>us 用户名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiParam <span class="type">&#123;String&#125;</span> </span>ps 用户密码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>firstname Firstname of the User.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>lastname  Lastname of the User.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册接口</span></span><br><span class="line">router.post(<span class="string">&quot;/register&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取数据 body-parse</span></span><br><span class="line">  <span class="keyword">let</span> &#123; us, ps &#125; = req.body;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (us &amp;&amp; ps) &#123;</span><br><span class="line">    <span class="comment">// 唯一性判断 用户名查询</span></span><br><span class="line">    UserIn.find(&#123; us &#125;)</span><br><span class="line">      .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 如果用户名的长度为 0 则进行用户注册</span></span><br><span class="line">        <span class="keyword">if</span> (data.length === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">// 不存在用户可以注册</span></span><br><span class="line">          <span class="keyword">return</span> UserIn.insertMany(&#123; <span class="attr">us</span>: us, <span class="attr">ps</span>: ps &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 用户名已经存在 不能进行注册</span></span><br><span class="line">          res.send(&#123; <span class="attr">error</span>: -<span class="number">3</span>, <span class="attr">msg</span>: <span class="string">&quot;用户名重复,请重新输入&quot;</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">// 暂不理解</span></span><br><span class="line">      .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        res.send(&#123;</span><br><span class="line">          error: <span class="number">0</span>,</span><br><span class="line">          msg: <span class="string">&quot;注册成功&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        res.send(&#123;</span><br><span class="line">          error: <span class="number">2</span>,</span><br><span class="line">          msg: <span class="string">&quot;注册失败&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.send(&#123; <span class="attr">error</span>: -<span class="number">1</span>, <span class="attr">msg</span>: <span class="string">&quot;参数错误&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@api <span class="type">&#123;post&#125;</span> </span>/user/login 用户登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiName </span>用户登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiGroup <span class="variable">User</span></span></span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiParam <span class="type">&#123;String&#125;</span> </span>us 用户名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiParam <span class="type">&#123;String&#125;</span> </span>ps 用户密码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>firstname Firstname of the User.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>lastname  Lastname of the User.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line">router.post(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; us, ps &#125; = req.body;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!us || !ps) &#123;</span><br><span class="line">    res.send(&#123; <span class="attr">err</span>: -<span class="number">1</span>, <span class="attr">msg</span>: <span class="string">&quot;参数错误&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//  UserIn.find(&#123;us:us,ps:ps&#125;);</span></span><br><span class="line">  UserIn.find(&#123; us, ps &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 成功: 响应出查询数据</span></span><br><span class="line">      <span class="keyword">if</span> (data.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        res.send(&#123; <span class="attr">error</span>: <span class="number">0</span>, <span class="attr">msg</span>: <span class="string">&quot;right login&quot;</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.send(&#123;</span><br><span class="line">          error: -<span class="number">2</span>,</span><br><span class="line">          msg: <span class="string">&quot;用户名或密码错误&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 失败: 给出失败信息</span></span><br><span class="line">      <span class="keyword">return</span> res.send(&#123; <span class="attr">error</span>: -<span class="number">1</span>, <span class="attr">msg</span>: <span class="string">&quot;内部错误&quot;</span> &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用<code>apidoc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apidoc -i ./ -o ./apidoc/ [文件添加注释改动后继续执行]</span><br><span class="line"></span><br><span class="line">参数:</span><br><span class="line">-i</span><br><span class="line">-o 指定生成文件路径</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加配置文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">新建文件命名为: apidoc.json [必须是该名称]</span><br><span class="line"></span><br><span class="line">接口文档添加注释: </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@api <span class="type">&#123;get&#125;</span> </span>/user/:id Request User information  【请求类型+参数】</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@apiName </span>GetUser 【api 名称】</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@apiGroup </span>User </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@apiParam <span class="type">&#123;Number&#125;</span> </span>id Users unique ID. 【参数】</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>firstname Firstname of the User. </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@apiSuccess <span class="type">&#123;String&#125;</span> </span>lastname  Lastname of the User.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>其他信息添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://apidocjs.com/</span><br></pre></td></tr></table></figure></li><li><p>个人接口文档最终效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/registerNode.png" alt="接口文档"></li><li><p>上传<code>github</code></p></li><li><p>访问地址: <a href="https://lovobin.github.io/Node-Api/index.html"> 等待更新 ····</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap-框架</title>
      <link href="2021/02/18/Bootstrap-%E6%A1%86%E6%9E%B6/"/>
      <url>2021/02/18/Bootstrap-%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="Bootstrap-框架"><a href="#Bootstrap-框架" class="headerlink" title="Bootstrap-框架"></a>Bootstrap-框架</h3><h4 id="响应式开发原理"><a href="#响应式开发原理" class="headerlink" title="响应式开发原理"></a>响应式开发原理</h4><blockquote><p>就是使用媒体查询针对不同宽度的设备进行布局和样式的设置,从而适配不同设备的目的</p></blockquote><table><thead><tr><th align="center">设备划分</th><th align="center">尺寸区间</th><th align="center">划分</th><th align="center">类前缀</th></tr></thead><tbody><tr><td align="center">超小屏幕(<code>手机</code>)</td><td align="center"><code>&lt;768px</code></td><td align="center"><code>100%</code></td><td align="center"><code>.col-xs-</code></td></tr><tr><td align="center">小屏设备(<code>平板</code>)</td><td align="center"><code>&gt;=768px ~ &lt;992px</code></td><td align="center"><code>750px</code></td><td align="center"><code>.col-sm-</code></td></tr><tr><td align="center">中等屏幕(<code>桌面显示器</code>)</td><td align="center"><code>&gt;=992px ~ &gt;1200px</code></td><td align="center"><code>970px</code></td><td align="center"><code>.col-md-</code></td></tr><tr><td align="center">宽屏设备(<code>大桌面显示器</code>)</td><td align="center"><code>&gt;=1200px</code></td><td align="center"><code>1170</code></td><td align="center"><code>.col-lg-</code></td></tr></tbody></table><h4 id="响应式布局容器"><a href="#响应式布局容器" class="headerlink" title="响应式布局容器"></a>响应式布局容器</h4><blockquote><p>响应式需要一个父级作为布局容器,来配合子级元素来实现变化效果</p><p>原理: 就是在不同屏幕下,通过媒体查询来改变这个布局容器的大小，在改变里面子元素的排列方式和大小,从而实现不同屏幕下,看到不同的页面布局和样式变化。</p></blockquote><h4 id="布局容器"><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h4><blockquote><p>Bootstrap 需要为页面内容和栅格系统包裹一个 <code>.container</code>容器,Bootstrap 预先定义好了这个类,叫<code>.container</code>，它提供了两个做此用处的类。</p></blockquote><h4 id="栅格选项参数"><a href="#栅格选项参数" class="headerlink" title="栅格选项参数"></a>栅格选项参数</h4><ul><li><p>参数</p><blockquote><p>栅格系统用于通过一系列的行于列的组合来创建页面布局,你的内容就可以放入这些创建好的布局中</p></blockquote></li><li><p>按照不同屏幕划分为<code>1~12</code>等份</p></li><li><p>行可以去除父容器作用 <code>15px</code>的边距</p></li><li><p><code>xs-extra small</code>：超小,<code>sm-small</code>：小，<code>ms-medium</code>:中等，<code>lg-large</code>:大</p></li><li><p>列大于 <code>12</code>，多余的列所在的元素将最为一个整体另起一行排列</p></li><li><p>每一列默认有左右 <code>15px</code>的<code>padding</code></p></li><li><p>可以同时为一列指定多个设备的类名，以便于不同份数</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/bootstrap.png"></li></ul><h4 id="列嵌套"><a href="#列嵌套" class="headerlink" title="列嵌套"></a>列嵌套</h4><blockquote><p>栅格系统内置的栅格系统将内容再次嵌套</p><p>就是一个列内再分成若干份小列，可以通过添加一个新的 <code>.row</code>元素和一系列 <code>.col-sm-</code>元素到已经存在的<code>.col-sm-</code>元素内</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">嵌套列最好加一个行 <span class="string">`row`</span>，这样可以取消父元素的 padding 值,而且高度自动和父级一样高</span><br></pre></td></tr></table></figure><h4 id="列偏移"><a href="#列偏移" class="headerlink" title="列偏移"></a>列偏移</h4><blockquote><p>使用<code>.col-md-offset-</code>类可以将列向右偏移。这些类实际是通过<code>*</code>选择器为当前元素增加了左侧的边距<code>margin</code></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src='https://gitee.com/wang_hong_bin/repo-bin/raw/master/offset.png'><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/writeOffset.png"><ul><li><p>中间偏移–居中显示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/centerOffset.png"></li></ul><h4 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h4><blockquote><p>通过使用 <code>.col-md-push-*</code>和<code>.col-md-pull-*</code>类就可以容易的改变列的顺序</p></blockquote><h4 id="响应式工具"><a href="#响应式工具" class="headerlink" title="响应式工具"></a>响应式工具</h4><blockquote><p>为了加快对移动设备友好的页面开发工作,利用媒体查询功能,并使用这些工具可以方便的针对不同设备展示或隐藏页面内容</p></blockquote><table><thead><tr><th align="center">隐藏类</th><th align="center">超小屏</th><th align="center">小屏</th><th align="center">中屏</th><th align="center">大屏</th><th align="center">可见类</th></tr></thead><tbody><tr><td align="center"><code>.hidden-xs</code></td><td align="center">隐藏</td><td align="center">可见</td><td align="center">可见</td><td align="center">可见</td><td align="center"><code>.visible-xs</code></td></tr><tr><td align="center"><code>.hidden-sm</code></td><td align="center">可见</td><td align="center">隐藏</td><td align="center">可见</td><td align="center">可见</td><td align="center"><code>.visible-sm</code></td></tr><tr><td align="center"><code>.hidden-md</code></td><td align="center">可见</td><td align="center">可见</td><td align="center">隐藏</td><td align="center">可见</td><td align="center"><code>.visible-md</code></td></tr><tr><td align="center"><code>.hidden-lg</code></td><td align="center">可见</td><td align="center">可见</td><td align="center">可见</td><td align="center">隐藏</td><td align="center"><code>.visible-lg</code></td></tr></tbody></table><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210218181445529.gif"><h3 id="案例实战"><a href="#案例实战" class="headerlink" title="案例实战"></a>案例实战</h3><ul><li><p><code>bootstrap</code>中的内边距</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/alibaixiu.png"></li><li><p>清除浮动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类: clearfix</span><br></pre></td></tr></table></figure></li><li><p>响应式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要通过媒体查询进行屏幕尺寸控制 </span><br></pre></td></tr></table></figure></li><li><p>总结</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">移动端布局:</span><br><span class="line">流式布局(百分比)</span><br><span class="line">flex</span><br><span class="line">rem</span><br><span class="line">媒体查询</span><br><span class="line"></span><br><span class="line">主要需要选择一套主方案,其余为辅, 配合完成响应式布局</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="效果案例"><a href="#效果案例" class="headerlink" title="效果案例"></a>效果案例</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210221103806743.gif#pic_center" alt="BootStrap响应式布局"></p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><ol><li>文件进行<code>git</code>上传</li><li> 开启<code>git pages</code></li><li> 文件进行<code>cdn</code>加速处理</li><li> 项目预览: <a href="https://lovobin.github.io/AliBaixiu/index.html">Bootstrap-响应式</a></li></ol><h3 id="整体回顾"><a href="#整体回顾" class="headerlink" title="整体回顾"></a>整体回顾</h3><ol><li>先进行<code>PC</code>整体端布局<ul><li>划分区块</li><li>将整个页面划分为 <code>左(2) 中(7) 右(3)</code></li></ul></li><li> 左侧导航布局</li></ol><ul><li><code>logo</code>和<code>nav</code></li><li><code>logo</code>中使用<code>hidden-xs</code>在小屏对图片隐藏处理</li><li><code>nav</code>由原来的 <code>100%</code>改为<code>width: 20%</code>并进行浮动处理</li></ul><ol start="3"><li> 中间部分</li></ol><ul><li>图片不需要设置宽度,将会根据<code>7等比占据大小</code></li><li>当我们处于超小屏幕 <code>news</code> 第一个<code>li</code>宽度为 <code>100% </code>剩下的各占 <code>50% </code></li><li>当处于超小屏下对文字大小和图片进行隐藏处理</li></ul><ol start="4"><li> 右侧区域</li></ol><ul><li>仅对样式添加,未进行其他操作</li></ul>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node-多人博客项目</title>
      <link href="2021/02/18/Node-%E5%A4%9A%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
      <url>2021/02/18/Node-%E5%A4%9A%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Node-多人博客项目"><a href="#Node-多人博客项目" class="headerlink" title="Node-多人博客项目"></a>Node-多人博客项目</h3><h4 id="day01-案例初始化"><a href="#day01-案例初始化" class="headerlink" title="day01-案例初始化"></a>day01-案例初始化</h4><ol><li><p>建立项目所需的文件夹</p><ul><li><code>public</code>静态资源存放目录</li><li><code>model</code> 数据库操作存放目录</li><li><code>route</code>路由存放目录</li><li><code>views</code>模板</li></ul></li><li><p>初始化项目描述文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure></li><li><p> 下载项目所需的第三方模块</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express mongoose art-template express-art-template</span><br></pre></td></tr></table></figure><ol start="4"><li> 创建网站服务器</li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nodeBlog.png"><ol start="5"><li> 模块化路由</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************** home *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************/</span></span><br><span class="line"><span class="comment">// home.js: 首页展示路由</span></span><br><span class="line"><span class="comment">/****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现模块化路由</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> home = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建二级路由</span></span><br><span class="line">home.get(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(<span class="string">&quot;欢迎来到博客首页&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = home;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***************** admin *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************/</span></span><br><span class="line"><span class="comment">// admin.js 用户管理路由</span></span><br><span class="line"><span class="comment">/****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现模块化路由</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> admin = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建二级路由</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建登录路由</span></span><br><span class="line">admin.get(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.render(<span class="string">&quot;admin/login&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将路由对象作为模块成员进行导出</span></span><br><span class="line"><span class="built_in">module</span>.exports = admin;</span><br><span class="line"></span><br></pre></td></tr></table></figure>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.js: </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 引入路由</span></span><br><span class="line">    <span class="keyword">const</span> home = <span class="built_in">require</span>(<span class="string">&quot;./Node-Blog/route/home&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> admin = <span class="built_in">require</span>(<span class="string">&quot;./Node-Blog/route/admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为路由匹配请求路径</span></span><br><span class="line">    app.use(<span class="string">&quot;/home&quot;</span>, home);</span><br><span class="line">    app.use(<span class="string">&quot;/admin&quot;</span>, admin);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><code>模板中的文件的相对路径是相对于浏览器的请求路径的,外联资源使用绝对路径 /</code></p></blockquote><ol start="6"><li><p>模板引擎配置使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.js:</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***************************/</span></span><br><span class="line">    <span class="comment">// 配置模板引擎</span></span><br><span class="line">    <span class="comment">/***************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 告诉 express 框架模板所在的位置 &#x27;views 默认参数&#x27;</span></span><br><span class="line">    app.set(<span class="string">&quot;views&quot;</span>, path.join(__dirname, <span class="string">&quot;Node-Blog&quot;</span>, <span class="string">&quot;views&quot;</span>));</span><br><span class="line">    <span class="comment">// 告诉 express 框架模板的默认后缀是什么 &#x27;view engine 默认参数&#x27;</span></span><br><span class="line">    app.set(<span class="string">&quot;view engine&quot;</span>, <span class="string">&quot;art&quot;</span>);</span><br><span class="line">    <span class="comment">// 当渲染后缀为 art 的模板时,所使用的模板引擎是什么</span></span><br><span class="line">    app.engine(<span class="string">&quot;art&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;express-art-template&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>开放静态资源文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.js:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开放静态资源文件</span></span><br><span class="line">    <span class="keyword">const</span> pathname = path.join(__dirname, <span class="string">&quot;Node-Blog&quot;</span>, <span class="string">&quot;public&quot;</span>);</span><br><span class="line">    app.use(express.static(pathname));</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
            <tag> Node实战案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB-使用</title>
      <link href="2021/02/15/MongoDB-%E4%BD%BF%E7%94%A8/"/>
      <url>2021/02/15/MongoDB-%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Mongodb-数据库"><a href="#Mongodb-数据库" class="headerlink" title="Mongodb-数据库"></a>Mongodb-数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">说明描述:</span><br><span class="line"></span><br><span class="line">collection-name 自定义集合名</span><br><span class="line"></span><br><span class="line">    [ ]  可选参数</span><br><span class="line"></span><br><span class="line">    db.collection-name.find().pretty(); <span class="comment"># 命令行中格式化显示某集合</span></span><br><span class="line"></span><br><span class="line">    bin:  安装 mongodb 的 bin 目录下</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">windows+r: mongo [进入交互式命令行模式]</span><br><span class="line"></span><br><span class="line">退出: <span class="built_in">exit</span> / ctrl + D</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h4><ul><li><p>查询数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line">    admin   <span class="number">0.</span>000GB</span><br><span class="line">    config  <span class="number">0.</span>000GB</span><br><span class="line">    local   <span class="number">0.</span>000GB</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use database-name;</span><br><span class="line"></span><br><span class="line">&gt; use admin;</span><br><span class="line">switched to db admin</span><br><span class="line"></span><br><span class="line">注意: 在 mongodb 中使用不存在的数据库时不会报错,会自动隐式创建不存在的数据库</span><br></pre></td></tr></table></figure></li><li><p>查看集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections;</span><br></pre></td></tr></table></figure></li><li><p>创建集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">db.createCollection(<span class="string">&#x27;collection-name&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&gt; db.createCollection(<span class="string">&#x27;student&#x27;</span>);</span><br><span class="line">&#123; <span class="string">&quot;ok&quot;</span> : <span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">注意: createCollection 没有 s</span><br></pre></td></tr></table></figure></li><li><p>删除集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">db.collection-name.drop();</span><br><span class="line"></span><br><span class="line">-- 创建集合 c2</span><br><span class="line">&gt; db.createCollection(<span class="string">&#x27;c2&#x27;</span>);</span><br><span class="line">&#123; <span class="string">&quot;ok&quot;</span> : <span class="number">1</span> &#125;</span><br><span class="line">-- 查看集合 </span><br><span class="line">&gt; show collections;</span><br><span class="line">c2</span><br><span class="line">student</span><br><span class="line">-- 删除集合 c2</span><br><span class="line">&gt; db.c2.drop();</span><br><span class="line"><span class="literal">true</span> -- 返回结果为布尔值</span><br></pre></td></tr></table></figure></li><li><p>查看当前使用数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 隐式创建的数据库没有内容查看不会被显示</span><br><span class="line">db</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use drop-database-name;</span><br><span class="line">db.dropDatabase();</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/monfo.png"></li></ul><h4 id="集合的增删改查"><a href="#集合的增删改查" class="headerlink" title="集合的增删改查"></a>集合的增删改查</h4><ul><li><p>集合增加数据</p><ul><li><p>插入一条数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法: db.collection-name.insert(json-data);</span><br><span class="line">注意: 集合存在则直接插入数据,集合不存在则隐式创建</span><br><span class="line"></span><br><span class="line">-- 显示可用集合</span><br><span class="line">show collections;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">db.test.insert(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;zahngsan&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result: WriteResult(&#123; <span class="string">&quot;nInserted&quot;</span> : <span class="number">1</span> &#125;)</span><br><span class="line"></span><br><span class="line">注意: 数据库和集合不存都会隐式创建，对象的键统一不加引号方便看，但是查看集合数据时系统会自动添加双引号</span><br></pre></td></tr></table></figure></li><li><p>插入多条数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 集合插入多条数据 db.collection-name.insert(&#123;&#125;)</span></span><br><span class="line">db.emp.insert([</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">        age: <span class="number">20</span>,</span><br><span class="line">        gender: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">        age: <span class="number">18</span>,</span><br><span class="line">        gender: <span class="string">&quot;女&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&quot;王五&quot;</span>,</span><br><span class="line">        age: <span class="number">10</span>,</span><br><span class="line">        gender: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&quot;王麻子&quot;</span>,</span><br><span class="line">        age: <span class="number">38</span>,</span><br><span class="line">        gender: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/insertMore.png" width="600"></li><li><p>快速输出<code>n</code>条数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 快速插入 10 条数据 支持 js 语法</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    print(i); <span class="comment">// 测试输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/mongojs.png" width="400"></li><li><p>快速在指定集合插入<code>n </code>条数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在指定集合中快速插入 n 条数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    db.dept.insert(&#123;</span><br><span class="line">        deptno: <span class="string">&quot;deptno&quot;</span> + i, <span class="comment">// 字符拼接的形式</span></span><br><span class="line">        age: i + <span class="number">1</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询结果集</span></span><br><span class="line">db.dept.find();</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/jsMon.png"></li><li><p>查看集合内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.find();</span><br><span class="line"></span><br><span class="line">&gt; db.test.find();</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;602380e157486fb18cef5489&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;zhangsan&quot;</span> &#125;</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;6023839257486fb18cef548a&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lisi&quot;</span>, <span class="string">&quot;age&quot;</span> : <span class="number">18</span>, <span class="string">&quot;gender&quot;</span> : <span class="string">&quot;男&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">_id: 可以被覆盖,进行自定义 _id: value (不推荐修改) </span><br><span class="line">_id: </span><br><span class="line">组成原理: 时间戳 机器 PID 计数器</span><br></pre></td></tr></table></figure></li><li><p>条件查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法: db.collection-name.find(条件,[查询的列])</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查询所有数据:  &#123;&#125; 可省略</span><br><span class="line">查询特定条件的值:  &#123;条件: value&#125;</span><br><span class="line">多条件查询: &#123;条件<span class="number">1</span>:value,条件<span class="number">2</span>:value,····&#125;</span><br><span class="line"></span><br><span class="line">查询列:</span><br><span class="line">[</span><br><span class="line">    不写列 查询全部</span><br><span class="line">    &#123;某列名称: <span class="number">1</span>&#125; 只显示 该列</span><br><span class="line">    &#123;某列名称: <span class="number">0</span>&#125; 除了该列,显示其他列</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>查询所有数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dept.find(&#123;&#125;);</span><br></pre></td></tr></table></figure></li><li><p>只显示 <code>age</code> 列数据</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.dept.find(&#123;&#125;, &#123;</span><br><span class="line">    age: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>显示所有非 <code>age</code>列数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.dept.find(&#123;&#125;, &#123;</span><br><span class="line">    age: <span class="number">0</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>条件列</p><table><thead><tr><th align="center">运算符</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>$gt</code></td><td align="center">大于</td></tr><tr><td align="center"><code>$gte</code></td><td align="center">大于等于</td></tr><tr><td align="center"><code>$lt</code></td><td align="center">小于</td></tr><tr><td align="center"><code>$lte</code></td><td align="center">小于等于</td></tr><tr><td align="center"><code>$ne</code></td><td align="center">不等于</td></tr><tr><td align="center"><code>$in</code></td><td align="center"><code>in</code></td></tr><tr><td align="center"><code>$nin</code></td><td align="center"><code>not in</code></td></tr></tbody></table> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.find(</span><br><span class="line">键: &#123;运算符: 值&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>查询年龄大于<code>8</code>的列数据<code>$gt</code>运算符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.dept.find(&#123;</span><br><span class="line">    age: &#123;</span><br><span class="line">        $gt: <span class="number">8</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/$gt.png"></li></ul></li><li><p>特定范围<code>&amp;in</code> 运算符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 特定范围内 Eg. 7, 8, 9</span></span><br><span class="line">db.dept.find(&#123;</span><br><span class="line">    age: &#123;</span><br><span class="line">        $in: [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/$in.png"></li></ol></li><li><p>修改集合</p><blockquote><p>基础语法: <code>db.collection-name.update(条件,新数据[，是否新增,是否修改多条])</code></p><p>是否新增: 指条件匹配不到数据则插入(<code>true</code>是插入,<code>false</code>不插入 默认)</p><p>是否修改多条：指将匹配成功的数据都修改(<code>true</code>是,<code>false</code>否 默认)</p></blockquote><ul><li><p>准备测试数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建新集合</span></span><br><span class="line">db.createCollection(<span class="string">&#x27;testInfo&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 for 循环插入 n 条测试数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    db.testInfo.insert(&#123;</span><br><span class="line">        name: <span class="string">&quot;name&quot;</span> + i,</span><br><span class="line">        age: i + <span class="number">1</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>数据更新<code>update</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 name: &quot;name0&quot; 改为 name: &quot;name11&quot;</span></span><br><span class="line"><span class="comment">// 替换操作 并不能实现数据修改</span></span><br><span class="line">db.testInfo.update(&#123;</span><br><span class="line">    name: <span class="string">&quot;name0&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: <span class="string">&quot;name11&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/changeMon.png" width="600"><ul><li><p>数据修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.update(&#123;条件&#125;，&#123;</span><br><span class="line">                          </span><br><span class="line">                          新数据【修改器】:&#123;键: 值&#125;&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 name: &quot;name9&quot; 改为 name: &quot;name01&quot;</span></span><br><span class="line"></span><br><span class="line">db.testInfo.update(&#123;<span class="attr">name</span>:<span class="string">&quot;name9&quot;</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="attr">name</span>:<span class="string">&quot;name01&quot;</span>&#125;&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/updateMon.png"></li><li><p>多列数据更新</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改 name:name4 age:5 修改为 name:&quot;name04&quot;,age:40</span></span><br><span class="line">db.testInfo.update(&#123;</span><br><span class="line">    name: <span class="string">&quot;name4&quot;</span>,</span><br><span class="line">    age: <span class="number">5</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    $set: &#123;</span><br><span class="line">        name: <span class="string">&quot;name04&quot;</span>,</span><br><span class="line">        age: <span class="number">40</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">--------------------------------------- S: 输出 -------------------------------------------------------</span><br><span class="line"></span><br><span class="line">&gt; db.testInfo.find(&#123;<span class="attr">name</span>:<span class="string">&quot;name04&quot;</span>&#125;);</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;6023a1de167e00002a003d48&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;name04&quot;</span>, <span class="string">&quot;age&quot;</span> : <span class="number">40</span> &#125;</span><br><span class="line">&gt;</span><br><span class="line">--------------------------------------- E: 输出 ------------------------------------------------------</span><br></pre></td></tr></table></figure></li><li><p>根据条件,对数据进行 <code>+5/-5</code>  <code>$inc</code>操作符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.testInfo.find(&#123;</span><br><span class="line">    name: <span class="string">&quot;name01&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    $inc: &#123;</span><br><span class="line">        age: <span class="number">5</span>/ [  -<span class="number">5</span> 原基础减 <span class="number">5</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/update$inc.png" width="600"></li></ul><table><thead><tr><th align="center">修改器</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>$inc</code></td><td align="center">递增</td></tr><tr><td align="center"><code>$rename</code></td><td align="center">重命名列</td></tr><tr><td align="center"><code>$set</code></td><td align="center">修改列值</td></tr><tr><td align="center"><code>$unset</code></td><td align="center">删除字段</td></tr></tbody></table><ul><li><p>所有操作符进行练习</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">      </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/optionA.png"></li><li><p><code>true</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.testInfo.update(&#123;</span><br><span class="line">    name: <span class="string">&quot;name20&quot;</span>,</span><br><span class="line">    age: <span class="number">5</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    $set: &#123;</span><br><span class="line">        name: <span class="string">&quot;name04&quot;</span>,</span><br><span class="line">        age: <span class="number">40</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">// 第三个条件 true: 没有找到则进行添加</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/updateTrue.png" width="600"></li><li><p>第四个参数<code>true/false</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.testInfo.update(&#123;<span class="attr">name</span>:<span class="string">&quot;name2&quot;</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="attr">age</span>:<span class="number">22</span>&#125;&#125;,<span class="literal">false</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span>: 没有不添加</span><br><span class="line"><span class="literal">true</span>: 允许修改多条</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/trueOrFalse.png" width="600"></li></ul></li></ul></li><li><p>删除数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法: db.collection-name.remove();</span><br><span class="line"></span><br><span class="line">    db.testInfo.remove(&#123;<span class="attr">name</span>:<span class="string">&quot;name2&quot;</span>&#125;,<span class="literal">true</span>); <span class="comment">// 只删除一条数据</span></span><br><span class="line">    db.testInfo.remove(&#123;<span class="attr">name</span>:<span class="string">&quot;name2&quot;</span>&#125;); <span class="comment">// 删除多条数据</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/removeMon.png" width="600"></li><li><p>删除集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除集合语法 </span></span><br><span class="line">db.collection-name.drop();</span><br><span class="line"><span class="comment">// 删除成功显示 true</span></span><br><span class="line">db.testInfo.drop(); </span><br></pre></td></tr></table></figure></li></ul><h4 id="排序分页"><a href="#排序分页" class="headerlink" title="排序分页"></a>排序分页</h4><ul><li><p>基础语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法: db.collectipon-name.find().sort(<span class="built_in">JSON</span>数据)</span><br><span class="line"></span><br><span class="line"><span class="built_in">JSON</span>数据: 键就是要排序的列/字段 值: <span class="number">1</span>-升序 -<span class="number">1</span>-降序</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>排序练习</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 准备测试数据</span></span><br><span class="line">use test3;</span><br><span class="line">db.c1.insert(&#123;<span class="attr">_id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&quot;a&quot;</span>,<span class="attr">sex</span>:<span class="number">1</span>,<span class="attr">age</span>:<span class="number">1</span>&#125;);</span><br><span class="line">db.c1.insert(&#123;<span class="attr">_id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&quot;a&quot;</span>,<span class="attr">sex</span>:<span class="number">1</span>,<span class="attr">age</span>:<span class="number">2</span>&#125;);</span><br><span class="line">db.c1.insert(&#123;<span class="attr">_id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&quot;b&quot;</span>,<span class="attr">sex</span>:<span class="number">2</span>,<span class="attr">age</span>:<span class="number">3</span>&#125;);</span><br><span class="line">db.c1.insert(&#123;<span class="attr">_id</span>:<span class="number">4</span>,<span class="attr">name</span>:<span class="string">&quot;c&quot;</span>,<span class="attr">sex</span>:<span class="number">2</span>,<span class="attr">age</span>:<span class="number">4</span>&#125;);</span><br><span class="line">db.c1.insert(&#123;<span class="attr">_id</span>:<span class="number">5</span>,<span class="attr">name</span>:<span class="string">&quot;d&quot;</span>,<span class="attr">sex</span>:<span class="number">2</span>,<span class="attr">age</span>:<span class="number">5</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询</span></span><br><span class="line">db.c1.find();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序  -1降 1升</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对 age 列进行降序输出</span></span><br><span class="line">db.c1.find().sort(&#123;<span class="attr">age</span>: -<span class="number">1</span>&#125;);</span><br><span class="line">db.c1.find().sort(&#123;<span class="attr">age</span>: <span class="number">1</span>&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>limit &amp; skip</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">limit(n): 查看 n 条</span><br><span class="line">skip(n): 跳过 n 条</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳过skip(2) 条查 limit(2) </span></span><br><span class="line">db.c1.find().skip(<span class="number">2</span>).limit(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">注意: skip() </span><br><span class="line"></span><br><span class="line">db.c1.find().limit(<span class="number">2</span>); == db.c1.find().skip(<span class="number">0</span>).limit(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/limitSkip.png" width="400"><blockquote><p><code>skip 计算公式: (当前页-1) * 每页显示条数</code></p><p>​    </p><p><code>当前页: 第一页  1 ,  第二页  2 ····</code></p><p>练习: 某集合中有 10 条数据, 每页只显示两条数据</p><p><code>db.collection-name.skip(当前页 - 1).limit(2);</code></p><table><thead><tr><th align="center">第一页</th><th align="center"><code>skip()</code></th></tr></thead><tbody><tr><td align="center"><code>1</code></td><td align="center"><code>db.collection-name.find().skip(1-1).limit(2)</code></td></tr><tr><td align="center"><code>2</code></td><td align="center"><code>db.collection-name.find().skip(2-1).limit(2)</code></td></tr><tr><td align="center"><code>3</code></td><td align="center"><code>db.collection-name.find().skip(3-1).limit(2)</code></td></tr></tbody></table></blockquote></li></ul><h4 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h4><ul><li><p>基本语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.aggregate(</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        管道: &#123;表达式&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>常用管道</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$group</span> 将及合中的文档分组,用于统计结果</span><br><span class="line"><span class="variable">$match</span> 过滤数据,只要输出符合条件的文档</span><br><span class="line"><span class="variable">$sort</span>  聚合数据进一步排序</span><br><span class="line"><span class="variable">$skip</span> 跳过指定文档数</span><br><span class="line"><span class="variable">$limit</span> 限制集合数据返回文档数</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>常用表达式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sum 总和 $sum:<span class="number">1</span> 同 count 表示统计</span><br><span class="line">$avg 平均</span><br><span class="line">$min 最小值</span><br><span class="line">$max 最大值</span><br></pre></td></tr></table></figure></li><li><p>练习聚合函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">集合结构:</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="string">&quot;name&quot;</span> : <span class="string">&quot;a&quot;</span>, <span class="string">&quot;sex&quot;</span> : <span class="number">1</span>, <span class="string">&quot;age&quot;</span> : <span class="number">1</span> &#125;</span><br><span class="line">    &#123; <span class="string">&quot;_id&quot;</span> : <span class="number">2</span>, <span class="string">&quot;name&quot;</span> : <span class="string">&quot;a&quot;</span>, <span class="string">&quot;sex&quot;</span> : <span class="number">1</span>, <span class="string">&quot;age&quot;</span> : <span class="number">2</span> &#125;</span><br><span class="line">    &#123; <span class="string">&quot;_id&quot;</span> : <span class="number">3</span>, <span class="string">&quot;name&quot;</span> : <span class="string">&quot;b&quot;</span>, <span class="string">&quot;sex&quot;</span> : <span class="number">2</span>, <span class="string">&quot;age&quot;</span> : <span class="number">3</span> &#125;</span><br><span class="line">    &#123; <span class="string">&quot;_id&quot;</span> : <span class="number">4</span>, <span class="string">&quot;name&quot;</span> : <span class="string">&quot;c&quot;</span>, <span class="string">&quot;sex&quot;</span> : <span class="number">2</span>, <span class="string">&quot;age&quot;</span> : <span class="number">4</span> &#125;</span><br><span class="line">    &#123; <span class="string">&quot;_id&quot;</span> : <span class="number">5</span>, <span class="string">&quot;name&quot;</span> : <span class="string">&quot;d&quot;</span>, <span class="string">&quot;sex&quot;</span> : <span class="number">2</span>, <span class="string">&quot;age&quot;</span> : <span class="number">5</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.aggregate([</span><br><span class="line"></span><br><span class="line">&#123;管道1:&#123;&#125;&#125;,</span><br><span class="line"></span><br><span class="line">&#123;管道2: &#123;&#125;&#125;,   </span><br><span class="line"></span><br><span class="line">····</span><br><span class="line">]);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><ol><li><p>统计男生人数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 统计男女生人数</span></span><br><span class="line">db.c1.aggregate([&#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">        _id: <span class="string">&quot;$sex&quot;</span>,</span><br><span class="line">        rs: &#123;</span><br><span class="line">            $sum: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></li><li><p>查询女生的总年龄</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">      </span><br></pre></td></tr></table></figure></li><li><p>根据 性别分组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据 性别分组</span></span><br><span class="line">db.c1.aggregate([&#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">        _id: <span class="string">&quot;$sex&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></li><li><p>根据性别分组 统计 总: age</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.c1.aggregate([&#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">        _id: <span class="string">&quot;$sex&quot;</span>, <span class="comment">// 分组</span></span><br><span class="line">        total_age: &#123;</span><br><span class="line">            $sum: <span class="string">&quot;$age&quot;</span></span><br><span class="line">        &#125; <span class="comment">// 分组后条件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></li><li><p>求学生的总人数和平均年龄</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 求学生的总人数和平均年龄</span></span><br><span class="line">db.c1.aggregate([&#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">        _id: <span class="literal">null</span>, <span class="comment">//  不分组,全部数据</span></span><br><span class="line">        totalStudent: &#123;</span><br><span class="line">            $sum: <span class="number">1</span> <span class="comment">// $sum:1 == 其他数据库中的 count(*)</span></span><br><span class="line">        &#125;, </span><br><span class="line">        avg: &#123;</span><br><span class="line">            $avg: <span class="string">&quot;$age&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></li><li><p>查询男生,女生人数 按人数升序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">db.c1.aggregate([</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// 分组管道</span></span><br><span class="line">        $group: &#123;</span><br><span class="line">            _id: <span class="string">&quot;$sex&quot;</span>,</span><br><span class="line">            toolS: &#123;</span><br><span class="line">                $sum: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分组后排序 </span></span><br><span class="line">    &#123;</span><br><span class="line">        $sort: &#123;</span><br><span class="line">            toolS: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/aggrgate.png" width="600"><ul><li><p>验证</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/toolS.png" width="600"></li></ul></li></ol></li></ul><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><ul><li><p>数据库中的索引</p><ol><li>说明: <code>索引是一种排序好的便于快速查询的数据结构</code></li><li>作用: <code>帮助数据库高效的查询数据</code></li></ol></li><li><p>索引的优缺点</p><ul><li><p>优点</p><blockquote><p>提高数据查询的效率,降低数据库的 IO 成本</p><p>通过索引对数据进行排序，降低数据排序的成本，降低 CPU 的消耗</p></blockquote></li><li><p>缺点</p><blockquote><p>占用磁盘空间</p><p>大量索引影响 SQL 语句效率，因为每次插入和修改数据都需要更新索引</p></blockquote></li></ul></li><li><p>基本语法</p><ul><li><p>测试数据准备</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择数据库</span></span><br><span class="line">use test4;</span><br><span class="line"><span class="comment">// 向数据库中添加数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    db.c1.insert(&#123;</span><br><span class="line">        name: <span class="string">&quot;name&quot;</span> + i,</span><br><span class="line">        age: i</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 统计插入的数据条数</span></span><br><span class="line">db.c1.find().count();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol><li><p>创建语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.createIndex(待创建索引的列[,额外选项])</span><br><span class="line"></span><br><span class="line">参数:</span><br><span class="line">待创建索引的列: <span class="number">1</span>-升序 -<span class="number">1</span>-降序</span><br><span class="line">额外选项: 设置索引的名称或者唯一索引</span><br></pre></td></tr></table></figure><ul><li><p>创建普通索引</p><ol><li><p>给<code> name</code> 列添加普通索引升序: <code>db.c1.createIndex(&#123;name: 1&#125;)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections;</span><br><span class="line">c1</span><br><span class="line">&gt; db.c1.createIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;); <span class="comment">// name 列创建索引</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;createdCollectionAutomatically&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;numIndexesBefore&quot;</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;numIndexesAfter&quot;</span> : <span class="number">2</span>,</span><br><span class="line">        <span class="string">&quot;ok&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>查看创建的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.getIndexes(); <span class="comment">// 查询已创建索引</span></span><br><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;_id&quot;</span> : <span class="number">1</span> <span class="comment">// 索引升序排列</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;_id_&quot;</span>, <span class="comment">// 默认索引名称</span></span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span> <span class="comment">// test4数据库下的 C1 集合</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123; <span class="comment">// key: 设置索引列</span></span><br><span class="line">                        <span class="string">&quot;name&quot;</span> : <span class="number">1</span> <span class="comment">// 自定义索引升序排列</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;name_1&quot;</span>, <span class="comment">// 索引默认名称</span></span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span> <span class="comment">// test4数据库下的 C1 集合</span></span><br><span class="line">        &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>给 <code>name</code>创建索引并起名<code>asIndexName</code></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.c1.createIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;asIndexName&quot;</span>&#125;); <span class="comment">// name 列创建索引升序 起名: asIndexName</span></span><br></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.getIndexes();</span><br><span class="line">[</span><br><span class="line">        ···</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;name&quot;</span> : <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;asIndexName&quot;</span>, <span class="comment">// 起名成功</span></span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>删除语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">全部删除: db.collection-name.dropIndexes();</span><br><span class="line"></span><br><span class="line">删除指定索引: db.collection-name.dropIndex(index-name)</span><br></pre></td></tr></table></figure><ul><li><p>删除<code>name</code>建立的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.dropIndex(<span class="string">&#x27;name_1&#x27;</span>);</span><br><span class="line">&#123; <span class="string">&quot;nIndexesWas&quot;</span> : <span class="number">2</span>, <span class="string">&quot;ok&quot;</span> : <span class="number">1</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查看索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.getIndexex();</span><br></pre></td></tr></table></figure></li><li><p>创建符合索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">就是一次性给多个字段建立索引</span><br><span class="line"></span><br><span class="line">test4.c1: name,age 添加组合索引</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line"></span><br><span class="line">db.c1.createIndex(&#123;键<span class="number">1</span>: 存储方式,键<span class="number">2</span>: 存储方式&#125;);</span><br><span class="line"></span><br><span class="line">注意: 存储方式为升序或降序 <span class="number">1</span>、-<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li><p>查看建立的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#125;</span><br><span class="line">&gt; db.c1.getIndexes();</span><br><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;_id&quot;</span> : <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;_id_&quot;</span>,</span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;name&quot;</span> : <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;asIndexName&quot;</span>,</span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">&quot;v&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                <span class="string">&quot;key&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;name&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;age&quot;</span> : <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> : <span class="string">&quot;name_1_age_1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;ns&quot;</span> : <span class="string">&quot;test4.c1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建唯一索引</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">给 name 添加普通索引</span><br><span class="line">语法: db.collection-name.createIndex(待添加索引的列,&#123;<span class="attr">unique</span>:”列名“&#125;)</span><br></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.createIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;,&#123;<span class="attr">unique</span>:<span class="string">&quot;name&quot;</span>&#125;);</span><br></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除索引</span></span><br><span class="line">db.c1.dropIndexes();</span><br><span class="line"><span class="comment">// 创建唯一索引并起名为 uniqueIndex</span></span><br><span class="line">db.c1.createIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;uniqueIndex&quot;</span>&#125;,&#123;<span class="attr">unique</span>:<span class="string">&quot;name&quot;</span>&#125;);</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="分析索引"><a href="#分析索引" class="headerlink" title="分析索引"></a>分析索引</h4><ul><li><p>基本语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection-name.find().explain(<span class="string">&#x27;executionStats&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>练习</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除所有索引</span></span><br><span class="line">db.c1.dropIndexes();</span><br></pre></td></tr></table></figure><ol><li><p>对未添加索引的数据进行查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.c1.find(&#123;<span class="attr">age</span>:<span class="number">1000</span>&#125;).explain(<span class="string">&#x27;executionStats&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.find(&#123;<span class="attr">age</span>:<span class="number">1000</span>&#125;).explain(<span class="string">&#x27;executionStats&#x27;</span>);</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;queryPlanner&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;plannerVersion&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;namespace&quot;</span> : <span class="string">&quot;test4.c1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;indexFilterSet&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&quot;parsedQuery&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;age&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;$eq&quot;</span> : <span class="number">1000</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;queryHash&quot;</span> : <span class="string">&quot;3838C5F3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;planCacheKey&quot;</span> : <span class="string">&quot;3838C5F3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;winningPlan&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;COLLSCAN&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;filter&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;age&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;$eq&quot;</span> : <span class="number">1000</span></span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;direction&quot;</span> : <span class="string">&quot;forward&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;rejectedPlans&quot;</span> : [ ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 执行计划相关统计信息</span></span><br><span class="line">        <span class="string">&quot;executionStats&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;executionSuccess&quot;</span> : <span class="literal">true</span>, <span class="comment">// 执行成功的状态</span></span><br><span class="line">                <span class="string">&quot;nReturned&quot;</span> : <span class="number">1</span>, <span class="comment">// 返回结果集数目</span></span><br><span class="line">                <span class="string">&quot;executionTimeMillis&quot;</span> : <span class="number">8</span>, <span class="comment">// 执行所需的事件,单位: 毫秒</span></span><br><span class="line">                <span class="string">&quot;totalKeysExamined&quot;</span> : <span class="number">0</span>, <span class="comment">// 索引检查的的时间</span></span><br><span class="line">                <span class="string">&quot;totalDocsExamined&quot;</span> : <span class="number">10000</span>, <span class="comment">// 检查文档总数 (某集合插入的所有数据)</span></span><br><span class="line">                <span class="string">&quot;executionStages&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;COLLSCAN&quot;</span>, <span class="comment">// 索引扫描方式</span></span><br><span class="line">                        <span class="string">&quot;filter&quot;</span> : &#123; <span class="comment">// 过滤条件</span></span><br><span class="line">                                <span class="string">&quot;age&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;$eq&quot;</span> : <span class="number">1000</span></span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;nReturned&quot;</span> : <span class="number">1</span>, <span class="comment">// 返回结果集数目</span></span><br><span class="line">                        <span class="string">&quot;executionTimeMillisEstimate&quot;</span> : <span class="number">0</span>, <span class="comment">// 预估的执行时间,毫秒</span></span><br><span class="line">                        <span class="string">&quot;works&quot;</span> : <span class="number">10002</span>, <span class="comment">// 工作单元数,一个查询会被派生一些小的工作单元</span></span><br><span class="line">                        <span class="string">&quot;advanced&quot;</span> : <span class="number">1</span>, <span class="comment">// 优先返回的结果数目</span></span><br><span class="line">                        <span class="string">&quot;needTime&quot;</span> : <span class="number">10000</span>,</span><br><span class="line">                        <span class="string">&quot;needYield&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;saveState&quot;</span> : <span class="number">78</span>,</span><br><span class="line">                        <span class="string">&quot;restoreState&quot;</span> : <span class="number">78</span>,</span><br><span class="line">                        <span class="string">&quot;isEOF&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;direction&quot;</span> : <span class="string">&quot;forward&quot;</span>, <span class="comment">// 方向</span></span><br><span class="line">                        <span class="string">&quot;docsExamined&quot;</span> : <span class="number">10000</span> <span class="comment">// 文档检查数目</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;serverInfo&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;host&quot;</span> : <span class="string">&quot;DESKTOP-BSVSU4F&quot;</span>,</span><br><span class="line">                <span class="string">&quot;port&quot;</span> : <span class="number">27017</span>,</span><br><span class="line">                <span class="string">&quot;version&quot;</span> : <span class="string">&quot;4.1.6&quot;</span>,</span><br><span class="line">                <span class="string">&quot;gitVersion&quot;</span> : <span class="string">&quot;55e72b015e2aa7297c00db29e4d93451ea61a7ca&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;ok&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">扫描方式:</span><br><span class="line">collscan 全表扫描</span><br><span class="line">    ixscan 索引扫描</span><br><span class="line">    fetch 根据索引去检索指定 <span class="built_in">document</span></span><br></pre></td></tr></table></figure></li><li><p>添加索引后查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加普通索引:</span><br><span class="line">db.c1.createIndex(&#123;<span class="attr">age</span>:<span class="number">1</span>&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.c1.find(&#123;<span class="attr">age</span>:<span class="number">1000</span>&#125;).explain(<span class="string">&#x27;executionStats&#x27;</span>);</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;queryPlanner&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;plannerVersion&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;namespace&quot;</span> : <span class="string">&quot;test4.c1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;indexFilterSet&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&quot;parsedQuery&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;age&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;$eq&quot;</span> : <span class="number">1000</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;queryHash&quot;</span> : <span class="string">&quot;3838C5F3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;planCacheKey&quot;</span> : <span class="string">&quot;041C5DE3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;winningPlan&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;FETCH&quot;</span>, <span class="comment">// </span></span><br><span class="line">                        <span class="string">&quot;inputStage&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;IXSCAN&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;keyPattern&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : <span class="number">1</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="string">&quot;indexName&quot;</span> : <span class="string">&quot;age_1&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;isMultiKey&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;multiKeyPaths&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : [ ]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="string">&quot;isUnique&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;isSparse&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;isPartial&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;indexVersion&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                                <span class="string">&quot;direction&quot;</span> : <span class="string">&quot;forward&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;indexBounds&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : [</span><br><span class="line">                                                <span class="string">&quot;[1000.0, 1000.0]&quot;</span></span><br><span class="line">                                        ]</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;rejectedPlans&quot;</span> : [ ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;executionStats&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;executionSuccess&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;nReturned&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;executionTimeMillis&quot;</span> : <span class="number">5</span>,</span><br><span class="line">                <span class="string">&quot;totalKeysExamined&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;totalDocsExamined&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;executionStages&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;FETCH&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;nReturned&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;executionTimeMillisEstimate&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;works&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                        <span class="string">&quot;advanced&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;needTime&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;needYield&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;saveState&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;restoreState&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;isEOF&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;docsExamined&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">&quot;alreadyHasObj&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">&quot;inputStage&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;stage&quot;</span> : <span class="string">&quot;IXSCAN&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;nReturned&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                                <span class="string">&quot;executionTimeMillisEstimate&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;works&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                                <span class="string">&quot;advanced&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                                <span class="string">&quot;needTime&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;needYield&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;saveState&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;restoreState&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;isEOF&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                                <span class="string">&quot;keyPattern&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : <span class="number">1</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="string">&quot;indexName&quot;</span> : <span class="string">&quot;age_1&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;isMultiKey&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;multiKeyPaths&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : [ ]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="string">&quot;isUnique&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;isSparse&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;isPartial&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">                                <span class="string">&quot;indexVersion&quot;</span> : <span class="number">2</span>,</span><br><span class="line">                                <span class="string">&quot;direction&quot;</span> : <span class="string">&quot;forward&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;indexBounds&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;age&quot;</span> : [</span><br><span class="line">                                                <span class="string">&quot;[1000.0, 1000.0]&quot;</span></span><br><span class="line">                                        ]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="string">&quot;keysExamined&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                                <span class="string">&quot;seeks&quot;</span> : <span class="number">1</span>,</span><br><span class="line">                                <span class="string">&quot;dupsTested&quot;</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="string">&quot;dupsDropped&quot;</span> : <span class="number">0</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;serverInfo&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;host&quot;</span> : <span class="string">&quot;DESKTOP-BSVSU4F&quot;</span>,</span><br><span class="line">                <span class="string">&quot;port&quot;</span> : <span class="number">27017</span>,</span><br><span class="line">                <span class="string">&quot;version&quot;</span> : <span class="string">&quot;4.1.6&quot;</span>,</span><br><span class="line">                <span class="string">&quot;gitVersion&quot;</span> : <span class="string">&quot;55e72b015e2aa7297c00db29e4d93451ea61a7ca&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;ok&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li><li><p>索引建立规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为常做条件、排序、分组的字段建立索引</span><br><span class="line">选择唯一性索引</span><br><span class="line">选择较小的数据列，为较长的字符串使用前缀索引</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="权限机制"><a href="#权限机制" class="headerlink" title="权限机制"></a>权限机制</h4><h5 id="开启验证服务"><a href="#开启验证服务" class="headerlink" title="开启验证服务"></a>开启验证服务</h5><ul><li><p>什么是验证服务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">名词,指用户需要输入账号密码才能登录使用</span><br></pre></td></tr></table></figure></li><li><p>操作步骤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 添加超级管理员</span><br><span class="line"><span class="number">2.</span> 退出卸载服务</span><br><span class="line"><span class="number">3.</span> 重新安装需要的输入账号密码的服务(在原安装命令基础上加上 --auth 即可)</span><br><span class="line"><span class="number">4.</span> 启动服务 </span><br><span class="line"><span class="number">5.</span> 登录测试</span><br></pre></td></tr></table></figure><ol><li><p>添加超级管理员</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">(windows+r后:)命令行: mongo</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 admin 数据库</span></span><br><span class="line">use admin;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 User 语法</span></span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    user: <span class="string">&quot;账号&quot;</span>,</span><br><span class="line">    pwd: <span class="string">&quot;密码&quot;</span>,</span><br><span class="line">    roles: [&#123;</span><br><span class="line">        role: <span class="string">&quot;角色&quot;</span>,</span><br><span class="line">        db: <span class="string">&quot;所属数据库&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">---------------------------------- 失败 ----------------------------------------</span><br><span class="line"> db.createUser(</span><br><span class="line">    &#123;</span><br><span class="line">  user: <span class="string">&quot;admisnbin&quot;</span>,</span><br><span class="line">    pwd: <span class="string">&quot;scott&quot;</span>,</span><br><span class="line">    roles: [&#123;</span><br><span class="line">        role: <span class="string">&quot;scott&quot;</span>, <span class="comment">// role 有特定选择, 自定会出错, role 第一次选择 root 切记</span></span><br><span class="line">      db: <span class="string">&quot;school&quot;</span> </span><br><span class="line">    &#125;]</span><br><span class="line"> &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">erroInfomation:  [js] <span class="built_in">Error</span>: couldn<span class="string">&#x27;t add user: No role named scott@school</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">---------------------------------- 成功 ----------------------------------------</span></span><br><span class="line"><span class="string"> db.createUser(</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      user: &quot;xttblog&quot;,</span></span><br><span class="line"><span class="string">        pwd: &quot;test&quot;,</span></span><br><span class="line"><span class="string">        roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出信息:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Successfully added user: &#123;</span></span><br><span class="line"><span class="string">            &quot;user&quot; : &quot;xttblog&quot;,</span></span><br><span class="line"><span class="string">            &quot;roles&quot; : [</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                            &quot;role&quot; : &quot;userAdminAnyDatabase&quot;,</span></span><br><span class="line"><span class="string">                            &quot;db&quot; : &quot;admin&quot;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">            ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><ul><li><p>角色</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据库用户角色：read、readWrite;</span><br><span class="line">数据库管理角色：dbAdmin、dbOwner、userAdmin；</span><br><span class="line">集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；</span><br><span class="line">备份恢复角色：backup、restore；</span><br><span class="line">所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase</span><br><span class="line">超级用户角色：root；这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）</span><br><span class="line">内部角色：__system</span><br></pre></td></tr></table></figure></li><li><p>对应作用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Read：允许用户读取指定数据库</span><br><span class="line">readWrite：允许用户读写指定数据库</span><br><span class="line">dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</span><br><span class="line">userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户</span><br><span class="line">clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。</span><br><span class="line">readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限</span><br><span class="line">readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限</span><br><span class="line">userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限</span><br><span class="line">dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。</span><br><span class="line">root：只在admin数据库中可用。超级账号，超级权限</span><br></pre></td></tr></table></figure></li><li><p>查看已创建用户角色信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">use admin;</span><br><span class="line">show collections; <span class="comment">// 可能无显示</span></span><br><span class="line"><span class="comment">// 上一步无显示信息无所谓直接执行下面的信息  admisnbin: replace your create user </span></span><br><span class="line">db.system.users.find(&#123;<span class="attr">user</span>: <span class="string">&quot;admisnbin&quot;</span>&#125;).pretty()</span><br><span class="line"></span><br><span class="line">输出信息分析:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;admin.admisnbin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;user&quot;</span> : <span class="string">&quot;admisnbin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;db&quot;</span> : <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;credentials&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;SCRAM-SHA-1&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;iterationCount&quot;</span> : <span class="number">10000</span>,</span><br><span class="line">                        <span class="string">&quot;salt&quot;</span> : <span class="string">&quot;G49EQwU5NnZ1aEZhPWNEJw==&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;storedKey&quot;</span> : <span class="string">&quot;pxop//BnuC8/lZ4ipPFwu2B1oQQ=&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;serverKey&quot;</span> : <span class="string">&quot;6zFNfZ8piyhjeHo4Q+jpIXvYNyY=&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;SCRAM-SHA-256&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;iterationCount&quot;</span> : <span class="number">15000</span>,</span><br><span class="line">                        <span class="string">&quot;salt&quot;</span> : <span class="string">&quot;k7C6yyGI70stIDG86Ia61aQIWwm2lEYJydnZ6w==&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;storedKey&quot;</span> : <span class="string">&quot;zYqBWVBjgZVIwoR0ysiE1xWhwM08jIGa+VX2n+Bw3yg=&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;serverKey&quot;</span> : <span class="string">&quot;IEVA9fZ1xGcBbEThhxRDjE2ECo4dNQ0P5Tca7t4HcTo=&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;roles&quot;</span> : [</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">&quot;role&quot;</span> : <span class="string">&quot;dbAdmin&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;db&quot;</span> : <span class="string">&quot;school&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>退出卸载服务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows+x: 超级管理员权限</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/powershell.png"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin: mongod --remove</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/windowsPowershell.png"></li><li><p>安装需要身份验证的 <code>MongDB 服务</code></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bin目录下:  </span><br><span class="line">mongod --install --dbpath  </span><br><span class="line"><span class="string">&quot;D:\Program Files\MongoDB\Server\4.1\data“ --logpath </span></span><br><span class="line"><span class="string">&quot;</span>D:\ProgramFiles\MongoDB\Server\<span class="number">4.1</span>\log\newMongodb<span class="string">&quot; --auth</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">解释: </span></span><br><span class="line"><span class="string">D:\Program Files\MongoDB\Server\4.1\data  # 安装 data 文件路径</span></span><br><span class="line"><span class="string">D:\Program Files\MongoDB\Server\4.1\log\newMongodb # 安装日志文件路径</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">启动服务:</span></span><br><span class="line"><span class="string">net start mongodb</span></span><br></pre></td></tr></table></figure></li><li><p>验证安装</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs;</span><br><span class="line">2021-02-13T14:52:17.110+0800 E QUERY    [js] Error: listDatabases failed:&#123;</span><br><span class="line">        <span class="string">&quot;ok&quot;</span> : 0,</span><br><span class="line">        <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;command listDatabases requires authentication&quot;</span>,</span><br><span class="line">        <span class="string">&quot;code&quot;</span> : 13,</span><br><span class="line">        <span class="string">&quot;codeName&quot;</span> : <span class="string">&quot;Unauthorized&quot;</span></span><br><span class="line">&#125; :</span><br><span class="line">_getErrorWithCode@src/mongo/shell/utils.js:25:13</span><br><span class="line">Mongo.prototype.getDBs@src/mongo/shell/mongo.js:124:1</span><br><span class="line">shellHelper.show@src/mongo/shell/utils.js:914:19</span><br><span class="line">shellHelper@src/mongo/shell/utils.js:804:15</span><br><span class="line">@(shellhelp2):1:1</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 【重新安装后:添加权限机制】不能直接显示 mongodb 下的数据库信息</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ul><ol start="5"><li><p>访问</p><ul><li><p>方法一</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo 服务器ip地址:端口/数据库 -u 用户名 -p 密码</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 之前创建的用户</span><br><span class="line">mongo <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">27017</span>/admin -u xttblog -p test</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/createRole.png"></li><li><p>方法二</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 先登录</span><br><span class="line">2. 选择数据库</span><br><span class="line">3. 输入 db.auth(用户名,密码)</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/useadmin.png"></li></ul></li></ol><h5 id="权限使用练习"><a href="#权限使用练习" class="headerlink" title="权限使用练习"></a>权限使用练习</h5><ul><li><p>超级管理员权限用户</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// userAdminAnyDatabase</span></span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    user: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    pwd: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    roles: [&#123;</span><br><span class="line">        role: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">        db: <span class="string">&quot;admin&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line">        </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use school;</span><br><span class="line"></span><br><span class="line"># 准本测试数据</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    db.stu.insert(&#123;</span><br><span class="line">        stuname: <span class="string">&quot;stu&quot;</span> + i,</span><br><span class="line">        stuno: <span class="string">&quot;stuno&quot;</span> + i,</span><br><span class="line">        sex: <span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol><li><p>添加用户 <code>teacher1</code> 可以读取 <code>school </code>数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">role:  read <span class="comment">// 读取指定数据库</span></span><br><span class="line"></span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    user: <span class="string">&quot;teacher1&quot;</span>,</span><br><span class="line">    pwd: <span class="string">&quot;teacher1&quot;</span>,</span><br><span class="line">    roles: [&#123;</span><br><span class="line">        role: <span class="string">&quot;read&quot;</span>,</span><br><span class="line">        db: <span class="string">&quot;school&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加用户 <code>teacher2</code> 可以读写 <code>school</code> 数据库</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">role: readWrite <span class="comment">// 允许用户读写指定数据库</span></span><br><span class="line"></span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    user: <span class="string">&quot;teacher2&quot;</span>,</span><br><span class="line">    pwd: <span class="string">&quot;teacher2&quot;</span>,</span><br><span class="line">    roles: [&#123;</span><br><span class="line">        role: <span class="string">&quot;readWrite&quot;</span>,</span><br><span class="line">        db: <span class="string">&quot;school&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h4 id="备份还原"><a href="#备份还原" class="headerlink" title="备份还原"></a>备份还原</h4><h5 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h5><ul><li><p>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h -proot -u -p -d -o</span><br><span class="line"></span><br><span class="line">参数解释:</span><br><span class="line">-h host 服务器 IP 地址(一般不写,默认本机)</span><br><span class="line">-port 端口 (一般不写,默认 27017)</span><br><span class="line">-u user 账号</span><br><span class="line">-p <span class="built_in">pwd</span> 密码</span><br><span class="line">-d database 数据库(数据库不写则全局)</span><br><span class="line">-o open 备份到指定目录下</span><br></pre></td></tr></table></figure><ol><li><p>备份<code>root</code>用户下所有数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongodump -u root -p root -o  <span class="string">&quot;D:\Program Files\MongoDB\Server\4.1\backupData&quot;</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/backupAll.png"></li><li><p>备份指定数据库<code>school</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除备份 一 数据 D:\Program Files\MongoDB\Server\4.1\backupData --&gt; D:\Program Files\MongoDB\Server\4.1\stuBackup</span></span><br><span class="line">mongodump -u teacher1 -p teacher1 -d school -o  <span class="string">&quot;D:\Program Files\MongoDB\Server\4.1\backupData&quot;</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/backupSchool.png"></li></ol></li></ul><h5 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h5><ul><li><p>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -h -port -u -p -d --drop 备份数据目录</span><br><span class="line"></span><br><span class="line">-d 不写则还原全部数据</span><br><span class="line">--drop 先删除数据库在导入</span><br></pre></td></tr></table></figure></li><li><p>先备份数据库,在删除一些普通数据库, <strong><code>admin</code>一定要保留</strong></p></li><li><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">switched to db school</span><br><span class="line">&gt; db.dropDatabase();</span><br><span class="line">&#123; <span class="string">&quot;dropped&quot;</span> : <span class="string">&quot;school&quot;</span>, <span class="string">&quot;ok&quot;</span> : 1 &#125;</span><br><span class="line">&gt; show dbs;</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line"><span class="built_in">local</span>   0.000GB</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/databaseInfo.png"></li><li><p>数据库还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -u root -p root --drop <span class="string">&quot;D:\Program Files\MongoDB\Server\4.1\backupData&quot;</span></span><br><span class="line"></span><br><span class="line">path: 必须放在最后</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/restore.png"><ul><li><p>查看是否还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line"></span><br><span class="line">&gt; use admin;</span><br><span class="line">switched to db admin</span><br><span class="line">&gt; db.auth(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">1</span><br><span class="line">&gt; show dbs;</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line"><span class="built_in">local</span>   0.000GB</span><br><span class="line">school  0.000GB</span><br><span class="line">&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>指定<code>school</code>数据库还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -u teacher1 -p teacher1 -d school --drop <span class="string">&quot;D:\Program Files\MongoDB\Server\4.1\stuBackup&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="Mongoose-简介"><a href="#Mongoose-简介" class="headerlink" title="Mongoose 简介"></a>Mongoose 简介</h4><h5 id="mongoose基础使用"><a href="#mongoose基础使用" class="headerlink" title="mongoose基础使用"></a>mongoose基础使用</h5><ul><li><p><code>mongoose</code>是什么？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是 node 中提供操作 MongoDB 的模块</span><br></pre></td></tr></table></figure></li><li><p>能干什么?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">能够通过 node 语法实现 MongoDB 数据库增删改查,从而实现用 node 写程序来管理 MongoDB 数据库</span><br></pre></td></tr></table></figure></li><li><p>schema</p><blockquote><p>中文网: <a href="http://mongoosejs.com">schema 官网</a></p><p>作用: 用来约束 MongoDB 文档数据(那些字段必须,那些字段可选)</p></blockquote></li><li><p>使用报错</p><ul><li><p><code>dos</code>窗口认证成功</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/mongoVs.png"></li><li><p><code>vscode</code>使用报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 导入模块</span><br><span class="line">const mongoose = require(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">// 连接数据库</span><br><span class="line">const db = mongoose.createConnection(</span><br><span class="line">  <span class="string">&quot;mongodb://root:root@127.0.0.1:27017/school&quot;</span>,</span><br><span class="line">  // mongodb[协议]://user:password@host:port/database-name</span><br><span class="line">  &#123; useNewUrlParser: <span class="literal">true</span>, useUnifiedTopology: <span class="literal">true</span> &#125;,</span><br><span class="line">  (err) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      console.log(<span class="string">&quot;-------------------------------------&quot;</span>);</span><br><span class="line">      console.log(<span class="string">&quot;数据库连接失败: &quot;</span>, err);</span><br><span class="line">      console.log(<span class="string">&quot;-------------------------------------&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      console.log(<span class="string">&quot;数据库连接成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/authError.png"><ul><li><p>解决方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongodb://user:pwd@host/database-name?authSource=admin</span></span><br><span class="line"></span><br><span class="line">mongodb://root:root@127.0.0.1:27017/school?authSource=admin</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>最终结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入模块</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">mongoose</span><br><span class="line">  .connect(</span><br><span class="line">    <span class="comment">// mongodb[协议]://user:password@host:port/database-name</span></span><br><span class="line">    <span class="string">&quot;mongodb://root:root@127.0.0.1:27017/school?authSource=admin&quot;</span>,</span><br><span class="line">    &#123; <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>, <span class="attr">useNewUrlParser</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  )</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据库连接成功&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据库连接失败: &quot;</span>, error);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建集合规则</span></span><br><span class="line"><span class="keyword">const</span> teacherSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  <span class="comment">// 教师: 课程 班级 上课周期 是否休假</span></span><br><span class="line">  course: <span class="built_in">String</span>,</span><br><span class="line">  classroom: <span class="built_in">String</span>,</span><br><span class="line">  ontime: <span class="built_in">String</span>,</span><br><span class="line">  isSleep: <span class="built_in">Boolean</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用规则创建集合 创建集合 Teacher，使用 teacherSchema 规则</span></span><br><span class="line"><span class="keyword">const</span> Teacher = mongoose.model(<span class="string">&quot;Teacher&quot;</span>, teacherSchema);</span><br><span class="line"><span class="comment">// 创建集合实例</span></span><br><span class="line"><span class="keyword">const</span> teacher = <span class="keyword">new</span> Teacher(&#123;</span><br><span class="line">  course: <span class="string">&quot;node.js&quot;</span>,</span><br><span class="line">  classroom: <span class="string">&quot;1801&quot;</span>,</span><br><span class="line">  ontime: <span class="string">&quot;12:00&quot;</span>,</span><br><span class="line">  isSleep: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 保存才能添加成功</span></span><br><span class="line">teacher.save();</span><br></pre></td></tr></table></figure><ul><li><p>添加数据前</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/noCreateT.png"></li><li><p>添加数据后</p> <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/TrueInsert.png">#####  mongoDB数据库导入数据</li></ul></li></ul></li></ul></li><li><p>语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoimport -d 数据库名称 -c 集合名称 --file 要导入的数据文件【json】</span><br></pre></td></tr></table></figure></li></ul><h5 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h5><ul><li><p>前提条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************/</span></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 连接mongoose和查询数据</span></span><br><span class="line"><span class="comment">/***************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入模块</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">mongoose</span><br><span class="line">  .connect(</span><br><span class="line">    <span class="comment">// mongodb[协议]://user:password@host:port/database-name</span></span><br><span class="line">    <span class="string">&quot;mongodb://root:root@127.0.0.1:27017/school?authSource=admin&quot;</span>,</span><br><span class="line">    &#123; <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>, <span class="attr">useNewUrlParser</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  )</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据库连接成功&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据库连接失败: &quot;</span>, error);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建集合规则</span></span><br><span class="line"><span class="keyword">const</span> teacherSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  <span class="comment">// 教师: 课程 班级 上课周期 是否休假</span></span><br><span class="line">  course: <span class="built_in">String</span>,</span><br><span class="line">  classroom: <span class="built_in">String</span>,</span><br><span class="line">  ontime: <span class="built_in">String</span>,</span><br><span class="line">  isSleep: <span class="built_in">Boolean</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>查询<code>find</code></p><ul><li><p><code>find</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用规则创建集合 创建集合 Teacher，使用 teacherSchema 规则</span></span><br><span class="line"><span class="keyword">const</span> Teacher = mongoose.model(<span class="string">&quot;Teacher&quot;</span>, teacherSchema);</span><br><span class="line"><span class="comment">// 查询集合的所有数据</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Teacher.find().then((result) =&gt; &#123;</span></span><br><span class="line"><span class="comment">  console.log(result);</span></span><br><span class="line"><span class="comment">&#125;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 根据条件查询 某一条数据</span></span><br><span class="line">Teacher.find(&#123; <span class="attr">_id</span>: <span class="string">&quot;6029d92dc0749738e8df4d62&quot;</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><code>findOne</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// findOne 查找为第一条数据</span></span><br><span class="line">Teacher.findOne().then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>区别</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> find 和 finOne 的区别: find 返回一组 [],findOne 返回一个</span></span><br><span class="line"></span><br><span class="line">********************** find **************************</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: 6029d92dc0749738e8df4d62,</span><br><span class="line">    course: <span class="string">&#x27;node.js&#x27;</span>,</span><br><span class="line">    classroom: <span class="string">&#x27;1801&#x27;</span>,</span><br><span class="line">    ontime: <span class="string">&#x27;12:00&#x27;</span>,</span><br><span class="line">    isSleep: <span class="literal">true</span>,</span><br><span class="line">    __v: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">********************** findOne **************************</span><br><span class="line">&#123;</span><br><span class="line">  _id: 6029d5297f11ef1e1c60bb6f,</span><br><span class="line">  course: <span class="string">&#x27;node.js&#x27;</span>,</span><br><span class="line">  classroom: <span class="string">&#x27;1801&#x27;</span>,</span><br><span class="line">  ontime: <span class="string">&#x27;12:00&#x27;</span>,</span><br><span class="line">  isSleep: <span class="literal">true</span>,</span><br><span class="line">  __v: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>范围查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用集合规则</span></span><br><span class="line"><span class="keyword">const</span> Book = mongoose.model(<span class="string">&quot;Book&quot;</span>, Books);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 范围查询 查询价格大于 8 的书籍信息</span></span><br><span class="line">Book.find(&#123; <span class="attr">price</span>: &#123; <span class="attr">$gt</span>: <span class="number">8</span> &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;price大于8: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 范围查询 查询价格大于等于 8 的书籍信息</span></span><br><span class="line">Book.find(&#123; <span class="attr">price</span>: &#123; <span class="attr">$gte</span>: <span class="number">8</span> &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;price大于等于8: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 范围查询 查询价格小于等于 8 的书籍信息</span></span><br><span class="line">Book.find(&#123; <span class="attr">price</span>: &#123; <span class="attr">$lte</span>: <span class="number">8</span> &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;price小于等于8: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 大于 5 小于 8 的书籍信息</span></span><br><span class="line">Book.find(&#123; <span class="attr">price</span>: &#123; <span class="attr">$gt</span>: <span class="number">5</span>, <span class="attr">$lt</span>: <span class="number">8</span> &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;price大于5小于8: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> in [1,5,8] 的书籍信息 类似其他数据库的模块查询</span></span><br><span class="line">Book.find(&#123; <span class="attr">price</span>: &#123; <span class="attr">$in</span>: [<span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>] &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;price 1 5 8: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>字段查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// select(&#x27;字段名称一  字段名称二  -id[不查询 id 字段]&#x27;) 字段名前面添加 “-”为不查询该字段</span></span><br><span class="line"></span><br><span class="line">Book.find().select(<span class="string">&#x27;auth price -_id&#x27;</span>).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;查询字段: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">结果输出:</span><br><span class="line"></span><br><span class="line">    查询字段:  [</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling0&#x27;</span>, <span class="attr">price</span>: <span class="number">0</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling1&#x27;</span>, <span class="attr">price</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling2&#x27;</span>, <span class="attr">price</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling3&#x27;</span>, <span class="attr">price</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling4&#x27;</span>, <span class="attr">price</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling5&#x27;</span>, <span class="attr">price</span>: <span class="number">5</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling6&#x27;</span>, <span class="attr">price</span>: <span class="number">6</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling7&#x27;</span>, <span class="attr">price</span>: <span class="number">7</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling8&#x27;</span>, <span class="attr">price</span>: <span class="number">8</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">auth</span>: <span class="string">&#x27;tuling9&#x27;</span>, <span class="attr">price</span>: <span class="number">9</span> &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除文档</p><ul><li><p>删除一条</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span>查找到一条文档并且删除</span></span><br><span class="line"><span class="comment">// 返回删除的文档 如果查询条件匹配了多个文档 那么将会删除第一个匹配的文档</span></span><br><span class="line">Book.findOneAndDelete(&#123; <span class="attr">price</span>: <span class="number">1</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;删除数据: &quot;</span>, result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>删除多条</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 删除多个文档 删除价格大于 7 书籍信息</span></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 传递空对象会将整个文档删除，执行完毕返回结果为对象， &#123; n: 2, ok: 1, deletedCount: 2 &#125; n: 删除文档树 ok: 删除成功</span></span><br><span class="line">Book.deleteMany(&#123; <span class="attr">price</span>: &#123; <span class="attr">$gt</span>: <span class="number">7</span> &#125; &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>更新文档</p><ul><li><p>更新一条文档</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据条件更新一条文档 将价格为 2 的书籍价格更新为 22</span></span><br><span class="line">Book.updateOne(&#123; <span class="attr">price</span>: <span class="number">2</span> &#125;, &#123; <span class="attr">price</span>: <span class="number">22</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result); <span class="comment">// &#123; n: 1, nModified: 1, ok: 1 &#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>更新多条</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新多条 所有价格更改为 22</span></span><br><span class="line">Book.updateMany(&#123;&#125;, &#123; <span class="attr">price</span>: <span class="number">22</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>更新多值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多值更新</span></span><br><span class="line">Book.updateOne(&#123; <span class="attr">price</span>: <span class="number">2</span>,<span class="attr">auth</span>:<span class="string">&quot;value&quot;</span> &#125;, &#123; <span class="attr">price</span>: <span class="number">22</span>,<span class="attr">auth</span>: <span class="string">&quot;new-value&quot;</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result); </span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="Mongoose-验证"><a href="#Mongoose-验证" class="headerlink" title="Mongoose 验证"></a>Mongoose 验证</h5><ul><li><p>验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在创建集合规则,可以设置当前字段的验证规则,验证失败则就输出插入失败</span><br></pre></td></tr></table></figure></li><li><p>验证规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">------------------------- message: system infomation ------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> CSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  auth: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: <span class="literal">true</span>, <span class="comment">// 必填项，错误信息不友好</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">------------------------- message: self infomation ------------------------</span><br><span class="line"> <span class="keyword">const</span> CSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  auth: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>, <span class="comment">// 字符串应用规则</span></span><br><span class="line">    required: [<span class="literal">true</span>, <span class="string">&quot;请输入作者&quot;</span>], <span class="comment">// [true,&#x27;message&#x27;] 自定义错误信息</span></span><br><span class="line">minlength: <span class="number">2</span>, <span class="comment">// 最小长度[2,&#x27;最小长度: 2&#x27;]</span></span><br><span class="line">    maxKength: <span class="number">5</span>, <span class="comment">// 最大长度 [5,&#x27;最大长度为: 5&#x27;]</span></span><br><span class="line">    trim: <span class="literal">true</span> <span class="comment">// 去除空格</span></span><br><span class="line">  &#125;,</span><br><span class="line">  age: &#123;</span><br><span class="line">    type: <span class="built_in">Number</span>, <span class="comment">// 数值类型应用规则</span></span><br><span class="line">    min: <span class="number">18</span>, <span class="comment">// 最小 18</span></span><br><span class="line">    max: <span class="number">100</span>, <span class="comment">// 最大 100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  publishDate: &#123;</span><br><span class="line">    type: <span class="built_in">Date</span>,</span><br><span class="line">    <span class="keyword">default</span>: <span class="built_in">Date</span>.now, <span class="comment">// 获取默认值 当前时间 命令行不可见,compass 工具可见</span></span><br><span class="line">  &#125;,</span><br><span class="line">  categories: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    enum: [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;javascript&quot;</span>, <span class="string">&quot;javac&quot;</span>], <span class="comment">// 自定义规则</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rFn: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    validate: &#123;</span><br><span class="line">      validator: <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 返回布尔值</span></span><br><span class="line">        <span class="comment">// true 验证成功</span></span><br><span class="line">        <span class="comment">// false 验证失败</span></span><br><span class="line">        <span class="comment">// value 要验证的值</span></span><br><span class="line">        <span class="keyword">return</span> value &amp;&amp; value.lenght &gt; <span class="number">2</span>; <span class="comment">// 自定义规则</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 自定义错误信息</span></span><br><span class="line">      message: <span class="string">&quot;错误信息不符合验证规则&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>获取验证错误信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用集合规则</span></span><br><span class="line"><span class="keyword">const</span> Cschema = mongoose.model(<span class="string">&quot;Schma&quot;</span>, CSchema);</span><br><span class="line">Cschema.create(&#123; <span class="attr">auth</span>: <span class="string">&quot;Nodejs&quot;</span>, <span class="attr">age</span>: <span class="number">23</span>, <span class="attr">categories</span>: <span class="string">&quot;javac&quot;</span>, <span class="attr">rFn</span>: <span class="string">&quot;bbc&quot;</span> &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;成功: &quot;</span>, result);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 获取错误对象</span></span><br><span class="line">    <span class="keyword">const</span> err = error.errors;</span><br><span class="line">    <span class="comment">// 循环错误信息对象</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> attr <span class="keyword">in</span> err) &#123;</span><br><span class="line">      <span class="comment">// 将错误信息打印到控制台</span></span><br><span class="line">      <span class="built_in">console</span>.log(err[attr][<span class="string">&quot;message&quot;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h5 id="集合关联"><a href="#集合关联" class="headerlink" title="集合关联"></a>集合关联</h5><ul><li><p>集合关联</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">不同集合的数据之间是有关系的，例如文章信息和用户信息存储在不同集合中,但文章是某个用户发表的，要查询文章的所有信息包括发表用户,就需要用到集合关联。</span><br><span class="line"></span><br><span class="line"><span class="comment">//外键？</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>关联</p><ol><li>使用 <code>_id</code>对集合进行关联</li><li> 使用 <code>populate</code>方法进行关联集合查询</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 创建 User 规则</span></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  name: &#123; <span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">required</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 创建 POST 规则</span></span><br><span class="line"><span class="keyword">const</span> postSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  title: &#123; <span class="attr">type</span>: <span class="built_in">String</span> &#125;,</span><br><span class="line">  author: &#123; <span class="attr">type</span>: mongoose.Schema.Types.ObjectId, <span class="attr">ref</span>: <span class="string">&quot;User&quot;</span> &#125;, <span class="comment">// 将 id 作为 关联字段</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用规则 集合名称</span></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>, userSchema);</span><br><span class="line"><span class="keyword">const</span> Post = mongoose.model(<span class="string">&quot;Post&quot;</span>, postSchema);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">User.create(&#123; <span class="attr">name</span>: <span class="string">&quot;Node-User&quot;</span> &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Post.create(&#123; <span class="attr">title</span>: <span class="string">&quot;Node-Post&quot;</span>, <span class="attr">author</span>: <span class="string">&quot;602a0b486925a224fcecf235&quot;</span> &#125;).then(</span><br><span class="line">  (result) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>关联查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Post.find()</span><br><span class="line">  .populate(<span class="string">&quot;author&quot;</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">    [</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    _id: 602a0b624e405f43d860083a,</span></span><br><span class="line"><span class="comment">    title: &#x27;Node-Post&#x27;,</span></span><br><span class="line"><span class="comment">    author: &#123; _id: 602a0b486925a224fcecf235, name: &#x27;Node-User&#x27;, __v: 0 &#125;,</span></span><br><span class="line"><span class="comment">    __v: 0</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB-安装</title>
      <link href="2021/02/10/MongoDB-%E5%AE%89%E8%A3%85/"/>
      <url>2021/02/10/MongoDB-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="Mongodb-安装与使用"><a href="#Mongodb-安装与使用" class="headerlink" title="Mongodb-安装与使用"></a>Mongodb-安装与使用</h3><h4 id="Mongodb-安装"><a href="#Mongodb-安装" class="headerlink" title="Mongodb 安装"></a>Mongodb 安装</h4><ol><li><p>下载<code>Mongodb</code>和<code>Mongodn Compass</code></p><blockquote><p><a href="https://www.mongodb.com/try/download/community">点击前往 Mongodb  官网</a></p><p><a href="https://www.mongodb.com/try/download/compass">点击前往 Mongodb-compass  官网</a></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/downloadMongodb.png" width="300"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/mongodbins.png"></li><li><p> 请使用管理员权限安装</p></li></ol><ul><li><code>accept</code></li><li><code>custom</code> 自定义安装路径,无中文特殊符号的路径下</li></ul>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/custorm.png" width="400"><ul><li><p>默认</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/mongbinstall.png" width="400"></li><li><p><code>compass</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/compass.png" width="400s"></li></ul><h4 id="Compass-安装"><a href="#Compass-安装" class="headerlink" title="Compass 安装"></a>Compass 安装</h4><ul><li><p>双击 安装包安装即可</p></li><li><p>完成后进入 点击<code>Start Using Compass</code>,注意留意用户名以便于其他软件使用</p></li><li><p>连接</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/connectMongdb.png" width="600"></li><li><p>成功后的标志</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/rightMongodb.png" width="600"></li><li><p>使用<code>Navicat Premium 15</code>连接<code>Mongodb</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/navMongodb.png" width="600"></li><li><p>启动停止<code>mongodb</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置环境变量: path: bin目录下</span><br><span class="line"></span><br><span class="line">使用管理员权限启动: net start mongodb</span><br><span class="line">停止服务: net stop mongodb</span><br></pre></td></tr></table></figure></li><li><p>检测是否正确安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongo --version</span><br><span class="line"></span><br><span class="line">输出版本信息即为正确安装</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="开启验证后使用-Navcat"><a href="#开启验证后使用-Navcat" class="headerlink" title="开启验证后使用 Navcat"></a>开启验证后使用 <code>Navcat</code></h4><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/monPassword.png" width="400">]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Node </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Xpath详解</title>
      <link href="2021/02/09/Python-Xpath%E8%AF%A6%E8%A7%A3/"/>
      <url>2021/02/09/Python-Xpath%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-Xpath详解"><a href="#Python-Xpath详解" class="headerlink" title="Python-Xpath详解"></a>Python-Xpath详解</h3><blockquote><p>网页插件: <code>XPath Helper</code></p><p>视频推荐: 慕课网 <code>web端功能自动化定位元素</code></p></blockquote><ol><li><p>认识浏览器默认<code>xpath</code>,<code>ctrl+f</code>调出浏览器输入<code>xpath</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/chromeXpath.png" width="600"></li><li><p> <code>xpath</code>语法</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;nav-bar&quot;</span> class=<span class="string">&quot;nav-bar&quot;</span>&gt; 导航 &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">//tag-name[@attribute=<span class="string">&#x27;value&#x27;</span>]</span><br><span class="line"></span><br><span class="line">Eg.</span><br><span class="line"></span><br><span class="line">//div[@id=<span class="string">&#x27;nav-bar&#x27;</span>] <span class="comment"># id 选择器</span></span><br><span class="line">//div[@class=<span class="string">&#x27;nav-bar&#x27;</span>] <span class="comment"># 类选择器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/xpathbaidu.png" width="600"><ol start="3"><li> <code>/</code>和<code>//</code>的区别</li></ol><blockquote><p><code>/</code> : 元素是上一级节点的子节点中的一个，不能跳级</p><p><code>//</code>:  下级任何子节点或者任何嵌套子节点中的一个，可以跳级</p></blockquote><ol start="4"><li> 如何构建一个有效的<code>xpath</code></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">灵活使用 / 和 //</span><br></pre></td></tr></table></figure><ol start="5"><li> 使用<code>text</code>定位</li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//tag-name[text()=<span class="string">&#x27;value&#x27;</span>]</span><br></pre></td></tr></table></figure><ol start="6"><li><p>平级节点或父级节点定位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//tag-name[text()=<span class="string">&#x27;value&#x27;</span>]//parent::parent-tag-name//preceding-sibling::tag-name/ </span><br></pre></td></tr></table></figure></li><li><p> 获取<code>xpath</code>时注意源码获取 目标<code>xpath</code>，因为渲染问题导致查找出错</p></li><li><p>获取 <code>a</code>的<code>href</code>值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">···a/@href <span class="comment"># 获取 a 的 href 值</span></span><br><span class="line">···a/text()  <span class="comment"># 获取 a 的文本值</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Xpath </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitcalendar 挂掉新修复</title>
      <link href="2021/02/06/gitcalendar-%E6%8C%82%E6%8E%89%E6%96%B0%E4%BF%AE%E5%A4%8D/"/>
      <url>2021/02/06/gitcalendar-%E6%8C%82%E6%8E%89%E6%96%B0%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="gitcalendar-挂掉新修复"><a href="#gitcalendar-挂掉新修复" class="headerlink" title="gitcalendar 挂掉新修复"></a>gitcalendar 挂掉新修复</h3><ul><li><p>异常 - 数据不显示 报错</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/gitcalendar.png"></li></ul><h3 id="Vercel-使用"><a href="#Vercel-使用" class="headerlink" title="Vercel 使用"></a>Vercel 使用</h3><blockquote><p><a href="https://vercel.com/dashboard">点击前往 Vercel 官网</a></p></blockquote><ol><li>注册账号（<code>github</code>）</li><li>使用 Vercel 新建 <code>API</code></li><li> 部署错误删除该部署</li></ol><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/deleteProj.png" width="400"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/20210206172348.png" width="600"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/deleteV.png" width="600"><ol start="4"><li> 使用小冰老师提供的<code>API</code>导入,获取链接</li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/other.png" width="400"><ol start="5"><li><p> 获取部署后的 此格式地址<code>python-github-calendar-api-zeta.vercel.app</code></p></li><li><p>  主题配置文件中添加如下</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gitcalendar:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  simplemode: <span class="literal">true</span></span><br><span class="line">  user: lovobin</span><br><span class="line">  apiurl: python-github-calendar-api-zeta.vercel.app</span><br><span class="line">  color: <span class="string">&quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure><ol start="7"><li><p>个人修改了<code>js  api</code>前缀</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var githubapiurl = <span class="string">&quot;https://python-github-calendar-api-zeta.vercel.app/api?/&quot;</span> + calendar.user;</span><br></pre></td></tr></table></figure></li><li><p>修复后 数据丢失</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/newG.png"  width="400"></li><li><p> 使用 Vercel  进行博客部署</p></li></ol><blockquote><p><a href="https://learnmore.vercel.app/">Vercel 博客部署地址</a></p></blockquote><ol start="10"><li><p>更新部署</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/vercel.png" width="600"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/updateVercel.png" width="600"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> hexo </tag>
            
            <tag> gitcalendar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node基础</title>
      <link href="2021/02/04/Node%E5%9F%BA%E7%A1%80/"/>
      <url>2021/02/04/Node%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="Node基础"><a href="#Node基础" class="headerlink" title="Node基础"></a>Node基础</h3><h4 id="命令行基础"><a href="#命令行基础" class="headerlink" title="命令行基础"></a>命令行基础</h4><ul><li><p>常用指令</p><ol><li><p><code>Win+r</code>调出<code>DOS</code>窗口</p></li><li><p><code>cd</code>目录名 进入指定目录</p></li><li><p><code>md</code>目录名 创建一个文件夹</p></li><li><p><code>rd</code> 目录名 删除一个文件夹</p></li></ol></li><li><p>目录</p><ol><li><code>.</code>表示当前目录</li><li><code>..</code>表示上一级目录</li></ol></li><li><p>环境变量</p></li></ul><h4 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h4><blockquote><p>进程: 进程负责为程序的运行提供必备的环境</p><p>线程: 线程计算机中的最小的计算单位，线程负责执行进程中的程序</p><p>Node的服务器是单线程的: Node 处理请求时是单线程,但是在后台拥有一个I/O线程池</p></blockquote><h4 id="Node-简介"><a href="#Node-简介" class="headerlink" title="Node 简介"></a>Node 简介</h4><ul><li><p>简介</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> Node.js 是一个能够在服务器端运行 Javascript 的开放源代码、跨平台 Javascript 运行环境。</span><br><span class="line"><span class="number">2.</span> Node 采用Google开发的 V8 引擎运行 js 代码，使用事件驱动、非阻塞和异步I/O模型等技术来提高性能、可优化应用程序的传输量和规模。</span><br></pre></td></tr></table></figure></li></ul><h4 id="Node-安装使用"><a href="#Node-安装使用" class="headerlink" title="Node 安装使用"></a>Node 安装使用</h4><ul><li><p>安装  <a href="https://nodejs.org/en/">点击前往 Node 官网</a></p></li><li><p>检测</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure><ul><li><p>成功显示版本号</p></li><li><p>安装失败错误代码<code>2502,2503</code></p><ol><li><p>安装权限不足</p><ul><li>以管理员身份运行<code>powershell: windows+x </code></li><li>输入运行安装包命令<code>msiexec/package [ D:\Program Files\nodejs\replace-your-node-path  node-v10.13.0-x64.msi your-node-version</code></li></ul></li><li><p>安装验证失败</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">添加系统环境变量</span><br><span class="line"></span><br><span class="line">找到系统中的 node.exe 的路径添加系统环境变量后退出执行:</span><br><span class="line"></span><br><span class="line">windows+r: cmd  node -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nodepath.png" width="600"></li></ol></li></ul></li><li><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node 文件名.js</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/helloNode.png" width="400"></li><li><p>模块化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- 在 Node 中 一个 js 文件就是一个模块</span><br><span class="line">- 在 Node 中,每一个 js 文件中的 js 代码都是独立运行在一个函数中</span><br><span class="line"></span><br><span class="line">模块分成两大类:</span><br><span class="line">    核心模块:</span><br><span class="line">        <span class="number">1.</span> 由 Node 引擎提供的模块</span><br><span class="line">        <span class="number">2.</span> 核心模块的标识就是模块的名称</span><br><span class="line">    文件模块:</span><br><span class="line"><span class="number">1.</span> 由用户自己创建的模块</span><br><span class="line">        <span class="number">2.</span> 文件模块的标识就是文件的路径(绝对路径、相对路径)</span><br><span class="line"></span><br><span class="line">相对路径使用  . 或 .. 开头</span><br></pre></td></tr></table></figure></li><li><p>外部模块引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在 node 模块中,通过 require() 函数来引入外部的模块</span><br><span class="line">    </span><br><span class="line">    require() 可以传递一个文件的路径作为参数, node 将会自动根据该路径来引入外部模块</span><br><span class="line"></span><br><span class="line">    使用 require() 引入模块以后,该函数会返回一个对象，这个对象代表是引入的模块</span><br><span class="line">    </span><br><span class="line">    exports 向外部暴露变量和方法</span><br><span class="line">只需要将需要暴露给外部的变量或方法设置为 exports 的属性</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>exports</code>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A.js: <span class="built_in">exports</span>.x = <span class="string">&#x27;Hello World 模块的 x &#x27;</span></span><br><span class="line"></span><br><span class="line">B.js: </span><br><span class="line"></span><br><span class="line">引入 A 模块: <span class="keyword">var</span> md = <span class="built_in">require</span>(<span class="string">&#x27;file-path/A&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(md.x) <span class="comment">// B模块输出: Hello World 模块的 x</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span> 是 <span class="built_in">module</span>.exports 的别名(地址引用关系),导出对象最终以 <span class="built_in">module</span>.exports 为准。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>global</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在 node 中有一个全局对象 <span class="built_in">global</span> 它的作用和网页中 <span class="built_in">window</span> 类似</span><br><span class="line"></span><br><span class="line">在全局中创建的变量都会作为 <span class="built_in">global</span> 的属性保存</span><br><span class="line"></span><br><span class="line">在全局中创建的函数都会作为 <span class="built_in">global</span> 的方法保存</span><br><span class="line"></span><br><span class="line">当 node 执行模块中的代码时,它会首先在代码的最顶端,添加如下代码</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">exports</span>,<span class="built_in">require</span>,modelm__filename,__dirname&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">          </span></span></span><br><span class="line"><span class="function"><span class="params">          在代码最底部,添加如下代码</span></span></span><br><span class="line"><span class="function"><span class="params">          &#125;</span></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="包（package）"><a href="#包（package）" class="headerlink" title="包（package）"></a>包（package）</h4><ul><li><p><code>package</code></p><ol><li><code>CommonJS</code> 的包规范允许我i们将一组相关的模块泽合到一起，形成一组完整的工具</li><li> <code>CommonJS</code> 的包规范由包结构和包描述文件两个部分组成</li></ol></li><li><p>包结构: 用于组织包中的各种文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">包实际上就是一个压缩文件,解压后还原为目录。符合规范的目录,应该包含如下文件:</span><br><span class="line"></span><br><span class="line">    - package.json 描述文件</span><br><span class="line">    - bin 可执行二进制文件</span><br><span class="line">    - doc 文档</span><br><span class="line">    - test 单元测试</span><br><span class="line">     </span><br></pre></td></tr></table></figure></li><li><p>包描述文件: 描述包的相关信息，以供外部读取分析</p></li><li><p><code>npm(Node Package Manager)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm search package-name <span class="comment">// 搜索</span></span><br><span class="line"></span><br><span class="line">npm install package-name <span class="comment">// 下载</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>配置<code>cnpm</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装 cnpm</span></span><br><span class="line">npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org || npm install --global cnpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常用命令</span></span><br><span class="line">安装包</span><br><span class="line">cnpm i &lt;pkg&gt;  或者 cnpminstall &lt;pkg&gt;  或者  cnpm i &lt;pkg&gt;@&lt;version&gt;  或者  cnpminstall &lt;pkg&gt;@&lt;version&gt;</span><br><span class="line"></span><br><span class="line">卸载包</span><br><span class="line">cnpm uninstall &lt;name&gt; 或者 cnpm uninstall &lt;name&gt;@[&lt;version&gt;]</span><br><span class="line"></span><br><span class="line">查看当前项目下的包列表</span><br><span class="line">cnpm ls</span><br><span class="line"></span><br><span class="line">查看全局包列表</span><br><span class="line">cnpm ls －g</span><br><span class="line"></span><br><span class="line">清理缓存</span><br><span class="line">cnpm cache clean</span><br><span class="line">                                                </span><br></pre></td></tr></table></figure></li></ul><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><h4 id="系统模块"><a href="#系统模块" class="headerlink" title="系统模块"></a>系统模块</h4><h5 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h5><ul><li><p><code>fs</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">fs 是 file-system 的简写 就是文件系统的意思</span><br><span class="line"></span><br><span class="line">在 node 中如果想要进行文件操作，就必须引入 fs 这个核心模块</span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">&#x27;文件路径/文件名称&#x27;</span>,[<span class="string">&#x27;文件编码&#x27;</span>],callback)</span><br></pre></td></tr></table></figure></li><li><p>文件读取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一个参数就是要读取的文件路径</span><br><span class="line">第二个参数就是回调函数</span><br><span class="line">      成功</span><br><span class="line">          data 数据</span><br><span class="line">          error <span class="literal">null</span></span><br><span class="line">      失败</span><br><span class="line">          data <span class="literal">null</span></span><br><span class="line">          error 错误对象</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 fs 模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">// 文件读取</span></span><br><span class="line">fs.readFile(<span class="string">&quot;./b.txt&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;读取文件失败&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>写文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第一个参数: 文件路径</span><br><span class="line">第二个参数: 文件内容</span><br><span class="line">第三个参数: 回调函数</span><br><span class="line"></span><br><span class="line">error</span><br><span class="line">成功: </span><br><span class="line">文件写入成功</span><br><span class="line">        error --&gt; <span class="literal">null</span></span><br><span class="line">失败: </span><br><span class="line">文件写入失败</span><br><span class="line">        error 就是错误对象</span><br><span class="line">   </span><br><span class="line"> fs.writeFile(<span class="string">&#x27;文件路径/文件名称&#x27;</span>,<span class="string">&#x27;数据&#x27;</span>,callback);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">  fs.writeFile(<span class="string">&#x27;./file-name&#x27;</span>,<span class="string">&#x27;write-content&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(error)&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;写入失败&#x27;</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;文件写入成功···&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>系统模块<code>path</code>路径操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.join(<span class="string">&#x27;路径&#x27;</span>,<span class="string">&#x27;路径&#x27;</span>,····)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主要是由于系统不同使用的路径分隔符不同</span></span><br><span class="line"><span class="comment">// 拼接如下路径 public/img/avatar</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> filepath = path.join(<span class="string">&quot;public&quot;</span>, <span class="string">&quot;img&quot;</span>, <span class="string">&quot;avatar&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(filepath);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>相对路径、绝对路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 大多数情况下使用绝对路径,因为相对路径有时候相对的是命令行工具的当前工作目录</span><br><span class="line"><span class="number">2.</span> 在读取文件或者设置文件路径时都会选择绝对路径</span><br><span class="line"><span class="number">3.</span> 使用 __dirname 获取当前文件所在的绝对路径</span><br></pre></td></tr></table></figure></li><li><p>第三方模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">别人写好的m具有特定功能,我们能直接使用的模块即第三方模块，由于第三方模块都是由多个文件组成并且被放置在一个文件夹中,所以又名包名。</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//www.npmjs.com/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="第三方模块"><a href="#第三方模块" class="headerlink" title="第三方模块"></a>第三方模块</h4><ul><li><p>第三方模块<code>nodemon</code>,很有必要安装使用,修改内容将会实时刷新,无需重新启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 </span></span><br><span class="line">npm install nodemon --global</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测安装</span></span><br><span class="line">nodemon -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">nodemon node-fils-name.js</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nodemon.png" width="600"></li><li><p>第三方模块<code>nrm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nrm(npm registry manager): npm 下载地址切换工具 npm 默认下载地址在国外,国内下载速度慢</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 nrm</span></span><br><span class="line">npm install nrm -g</span><br><span class="line"><span class="comment"># 显示可用下载列表</span></span><br><span class="line">nrm list</span><br><span class="line"><span class="comment"># 使用可用 镜像</span></span><br><span class="line">nrm use taobao</span><br><span class="line"><span class="comment">#  * 代表当前在用镜像</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nrm.png" alt="下载失败" width="600"><ul><li><p>解决方案(未尝试)</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nrmresult.png"></li></ul></li><li><p>第三方模块<code>gulp</code></p><ol><li><p><code>gulp</code>能做什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">项目上线 HTML CSS JS 文件压缩</span><br><span class="line">语法转换(es6,less)</span><br><span class="line">公共文件抽离</span><br></pre></td></tr></table></figure></li><li><p><code>gulp</code>使用步骤</p><ul><li><p>项目中下载<code>gulp</code>库文件,要使用项目中根目录下执行<code>npm install gulp</code></p></li><li><p>在项目根目录下新建<code>gulpfile.js</code>文件，只能是这个文件名</p></li><li><p>重构项目的文件夹结构 <code>src</code> 目录放置源代码文件 <code>dist</code>目录放置构建后文件</p></li><li><p>在 <code>gulpfile.js</code>文件中编写任务</p></li><li><p>在命令行工具中执行<code>gulp</code>任务</p></li></ul></li><li><p> <code>gulp</code>中提供的方法</p></li></ol><ul><li><p><code>gulp.src()</code>获取任务要处理的文件</p></li><li><p><code>gulp.desc()</code>输出文件</p></li><li><p><code>gulp.task()</code>建立gulp任务</p></li><li><p><code>gulp.watch()</code>监控文件的变化</p></li><li><p>使用<code>gulp</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src='https://gitee.com/wang_hong_bin/repo-bin/raw/master/gulp.png'><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; npm install gulp &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 gulp</span></span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="comment">// 使用 gulp.task() 方法建立任务</span></span><br><span class="line"><span class="comment">// 参数: 1.任务的名称</span></span><br><span class="line"><span class="comment">// 参数: 2. 任务的回调 </span></span><br><span class="line">gulp.task(<span class="string">&quot;first&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取要处理的文件</span></span><br><span class="line">  gulp</span><br><span class="line">    .src(<span class="string">&quot;./src/css/index/style.css&quot;</span>) <span class="comment">// src: 目录自定义 自动会生成</span></span><br><span class="line">    <span class="comment">// 将处理后的文件输出到 dist 目录，dest输出</span></span><br><span class="line">    .pipe(gulp.dest(<span class="string">&quot;./dist/css/index&quot;</span>)); <span class="comment">// dist: 目录自定义 自动会生成</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 全局安装命令工具 npm install gulp-cli -g</span></span><br></pre></td></tr></table></figure><ul><li><p>下载命令工具,全局安装(全局安装: 多个项目都会使用, 库文件则不同)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install gulp-cli -g</span><br><span class="line"><span class="comment"># 检测</span></span><br><span class="line">gulp -v</span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">gulp task-name [Eg. first]</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/gulpfirst.png"></li></ul></li><li><p><code>gulp</code>插件</p><ol><li><code>gulp-htmlmin</code> html 文件压缩</li><li> <code>gulp-csso</code>压缩css</li><li><code>gulp-babel</code>JavaScript语法转换</li><li><code>gulp-less</code>语法转换</li><li><code>gulp-uglify</code>压缩混淆 JavaScript</li><li><code>gulp-file-include</code>公共文件包含</li><li><code>browsersync</code> 浏览器实时同步</li></ol></li><li><p>使用插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下载插件文档: https://www.npmjs.com/package/gulp-htmlmin</span><br><span class="line"></span><br><span class="line"> npm install --save gulp-htmlmin</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ul><li><p>新建压缩 html 任务(先了解,等待后续补充)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 gulp</span></span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="comment">// 引用插件</span></span><br><span class="line"><span class="keyword">const</span> htmlmin = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlmin&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// html 任务 压缩 html</span></span><br><span class="line"><span class="comment">// 建立任务</span></span><br><span class="line">gulp.task(<span class="string">&quot;htmlmin&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    gulp</span><br><span class="line">      <span class="comment">// 获取处理任务路径</span></span><br><span class="line">      .src(<span class="string">&quot;./src/*.html&quot;</span>)</span><br><span class="line">      <span class="comment">// 压缩 html 文件中的代码 collapseWhitespace 压缩空格? true 是 pipe( 任务事件 )</span></span><br><span class="line">      .pipe(htmlmin(&#123; <span class="attr">collapseWhitespace</span>: <span class="literal">true</span> &#125;))</span><br><span class="line">      <span class="comment">// 输出</span></span><br><span class="line">      .pipe(gulp.desc(<span class="string">&quot;dist&quot;</span>))</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>原 <code>html </code>文件格式</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/yuanhtml.png" width="600"></li><li><p>压缩后</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/htmlmin.png"></li><li><p><code>构建</code>任务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构建任务  所有任务 通过 gulp default 全部执行</span></span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>,[<span class="string">&#x27;htmlmin&#x27;</span>,<span class="string">&#x27;first&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><blockquote><p><code>node_modules</code> 无需传输，使用<code>npm install </code> 会自动前往 <code>package.json</code> 寻找依赖下载</p><p>项目描述文件,记录当前项目的项目信息,例如: 项目名称 版本 作者<code> github</code> 地址 当前项目依赖了那些第三方模块 使用 <code>npm init -y</code> 生成</p></blockquote><ul><li><p><code>npm init -y</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;node-day03&quot;</span>, </span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;gulp-demo.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123; <span class="comment"># 项目依赖</span></span><br><span class="line">    <span class="string">&quot;gulp&quot;</span>: <span class="string">&quot;^4.0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gulp-file-include&quot;</span>: <span class="string">&quot;^2.3.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gulp-htmlmin&quot;</span>: <span class="string">&quot;^5.0.1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;&#125;, <span class="comment"># 开发依赖 --save </span></span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span> <span class="comment"># 开放源代码协议</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>开发依赖</p><ol><li>在项目的开发阶段需要依赖，线上运营阶段不需要依赖第三方包，称为开发依赖</li><li> 使用 <code>npm install</code> 包名 <code>--save-dev</code> 命令将包名添加到<code>package.json</code>文件的 <code>devDependencies</code>字段中</li></ol></li><li><p><code>package-lock.json</code>文件的作用</p><ol><li>锁定包的版本,确保再次下载时不会因为包版本不同产生问题</li><li> 加快下载速度, 因为该文件中已经记录了项目所依赖第三方包的树状结构和包的下载地址，重新安装时只需下载即可,不需做额外工作</li></ol></li><li><p>命令别名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package.json: </span><br><span class="line">    <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;build&quot;</span>: <span class="string">&quot;nodemon app.js&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;build&quot;</span>: <span class="string">&quot;命令&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;build&quot;</span>: <span class="string">&quot;nodemon app.js&quot;</span></span><br><span class="line"></span><br><span class="line"># 执行</span><br><span class="line">npm run 别名 Eg. npm run build</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="服务器端基础概念"><a href="#服务器端基础概念" class="headerlink" title="服务器端基础概念"></a>服务器端基础概念</h4><ul><li><p>网站服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">能够提供网站访问服务的机器就是网站服务器,它能够接受客户端的请求,能够对请求做出响应。</span><br></pre></td></tr></table></figure></li><li><p>URL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">统一资源定位符,又叫 URL(uniform ResourceLocator) 是专门标识 Internet 网上资源位置而设的一种编址方式</span><br></pre></td></tr></table></figure></li><li><p>URL 的组成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输出协议://服务器 ip或域名:端口/资源所在位置标识</span><br><span class="line"></span><br><span class="line">https://lovobin.github.io:80/2021/02/Node%E5%9F%BA%E7%A1%80/</span><br><span class="line"></span><br><span class="line">http: 超文本传输协议, 提供了一种发布和接受 HTML 页面的方法</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="简单的-http-服务"><a href="#简单的-http-服务" class="headerlink" title="简单的 http 服务"></a>简单的 http 服务</h4><ul><li><p>搭建简单的服务器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载 http 核心模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">// 使用 http.createServer() 方法创建一个 Web 服务器 返回一个 server 实例</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    当客户端请求过来,就会自动触发服务器的 request 请求事件,  然后执行第二个参数: 回调处理</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;收到客户端的请求了··&quot;</span> + request.url);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">      response 对象有一个方法 write 可以用来给客户端发送响应数据</span></span><br><span class="line"><span class="comment">      write 可以使用多次,但是最后一定要使用 end 来结束响应 否则客户端会一直等待</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  response.write(<span class="string">&quot;响应···&quot;</span>);</span><br><span class="line">  <span class="comment">// 告诉客户端 我的话说完了 你可以直接呈递给用户</span></span><br><span class="line">  response.end();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定端口号</span></span><br><span class="line">server.listen(<span class="number">3031</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功，可以通过 http://127.0.0.1:3000/ 进行访问了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>请求路径获取响应</p><ul><li><p>普通文本响应</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 http 模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">// 创建 server</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"><span class="comment">// 发送</span></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;收到请求了: &quot;</span> + request.url);</span><br><span class="line">    <span class="comment">// 根据不同的请求的路径,响应不同的内容</span></span><br><span class="line">    <span class="keyword">var</span> url = request.url;</span><br><span class="line">    <span class="keyword">if</span> (url === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">        response.end(<span class="string">&quot;index Page&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">        response.end(<span class="string">&quot;user login&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">&quot;/register&quot;</span>) &#123;</span><br><span class="line">        response.end(<span class="string">&quot;user register&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.end(<span class="string">&quot;response ·····&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 绑定端口号</span></span><br><span class="line">server.listen(<span class="number">3101</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功···可以通过127.0.0.1:3031 来访问了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>响应 <code>json</code>数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 http 模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">// 创建 server</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"><span class="comment">// 发送</span></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 配置响应编码</span></span><br><span class="line">    response.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;[text/plain 根据类型变化可选];charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;收到请求了: &quot;</span> + request.url);</span><br><span class="line">    <span class="comment">// 根据不同的请求的路径,响应不同的内容</span></span><br><span class="line">    <span class="keyword">var</span> url = request.url;</span><br><span class="line">    <span class="comment">// 定义json 类型数据</span></span><br><span class="line">    <span class="keyword">var</span> products = [</span><br><span class="line">        &#123;</span><br><span class="line">            brand: <span class="string">&quot;xiaomi&quot;</span>,</span><br><span class="line">            price: <span class="number">6699</span>,</span><br><span class="line">            color: <span class="string">&quot;blue&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            brand: <span class="string">&quot;iPhone&quot;</span>,</span><br><span class="line">            price: <span class="number">9988</span>,</span><br><span class="line">            color: <span class="string">&quot;purple&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            brand: <span class="string">&quot;huawei&quot;</span>,</span><br><span class="line">            price: <span class="number">9988</span>,</span><br><span class="line">            color: <span class="string">&quot;blue&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    <span class="comment">// 响应的内容只能是 二进制数据或者字符串</span></span><br><span class="line">    <span class="keyword">if</span> (url === <span class="string">&quot;/products&quot;</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(products));</span><br><span class="line">        response.end(<span class="built_in">JSON</span>.stringify(products));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 绑定端口号</span></span><br><span class="line">server.listen(<span class="number">3101</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功···可以通过127.0.0.1:3031 来访问了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>常见<code>Content-Type</code>类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见的媒体格式类型如下：</span><br><span class="line">    text/html  HTML格式</span><br><span class="line">    text/plain 纯文本格式</span><br><span class="line">    text/xml  XML格式</span><br><span class="line">    image/gif gif图片格式</span><br><span class="line">    image/jpeg jpg图片格式</span><br><span class="line">    image/png png图片格式</span><br></pre></td></tr></table></figure></li></ul><h4 id="HTTP-协议"><a href="#HTTP-协议" class="headerlink" title="HTTP 协议"></a>HTTP 协议</h4><ul><li><p>http 协议的概念</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">超文本传输协议(英文: HyperText Transfer Protocol 缩写: HTTP) 规定了如何从网站服务器传输超文本到本地浏览器,它基于客户端服务器加构工作,是客户端服务器加构工作,是客户端和服务器端请求和应答的标准。</span><br></pre></td></tr></table></figure></li><li><p>报文</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 HTTP 请求和响应的过程中传递的数据块就叫报文m包括要传送的数据和一些附加信息,并且要遵循规定好的格式。</span><br></pre></td></tr></table></figure></li><li><p>请求报文</p><ol><li><p>请求方式</p><ul><li><code>GET</code></li><li><code>POST</code></li></ul></li><li><p> 请求地址</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    req.headers <span class="comment">// 获取请求报文</span></span><br><span class="line">    req.url <span class="comment">// 获取请求地址</span></span><br><span class="line">    req.method <span class="comment">// 获取请求方式</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="HTTP-请求与响应处理"><a href="#HTTP-请求与响应处理" class="headerlink" title="HTTP 请求与响应处理"></a>HTTP 请求与响应处理</h4><ul><li><p>GET 参数请求处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http请求与响应.js</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> server = http.createServer();</span><br><span class="line"><span class="comment">// 处理 url</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"><span class="comment">// req: request res: response</span></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.writeHeader(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/plain;charset=utf8&quot;</span>,</span><br><span class="line">    hello: <span class="string">&quot;world&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 请求参数处理 http://127.0.0.1:3031/?username=zhangsan&amp;age=18</span></span><br><span class="line">  <span class="built_in">console</span>.log(req.url); <span class="comment">// /?username=zhangsan&amp;age=18</span></span><br><span class="line">  <span class="comment">// 字符串截取可以获取参数</span></span><br><span class="line">  <span class="comment">// 内置模块</span></span><br><span class="line">  <span class="built_in">console</span>.log(url.parse(req.url));</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1. 要解析的 url 地址</span></span><br><span class="line"><span class="comment">    2. 将查询的参数解析成对象形式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    url.parse(req.url,true)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">let</span> params = url.parse(req.url, <span class="literal">true</span>).query;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;params: &quot;</span>, params);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;params-username:&quot;</span>, params.username, <span class="string">&quot;params-age:&quot;</span>, params.age); <span class="comment">// zhangsan 18</span></span><br><span class="line">  res.end(<span class="string">&quot;请求成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(<span class="number">3031</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;可以通过 127.0.0.1:3031/ 来访问服务器了····&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 路径判断问题</span></span><br><span class="line"><span class="keyword">let</span> &#123;query,pathname&#125;=url.parse(req.url,<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">console</span>.log(query.username,query.age);</span><br><span class="line"><span class="keyword">if</span>(pathname==<span class="string">&#x27;/index&#x27;</span> || pathname==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">    res.end(<span class="string">&#x27;index home&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/getParse.png" width="400"></li><li><p>POST 参数请求处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// post请求参数.js</span></span><br><span class="line"><span class="comment">// http请求与响应.js</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> server = http.createServer();</span><br><span class="line"><span class="comment">// 处理请求参数模块 post 请求转换为 对象数据</span></span><br><span class="line"><span class="keyword">const</span> queryString = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line"><span class="comment">// req: request res: response</span></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 编码处理</span></span><br><span class="line">  res.writeHeader(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/plain;charset=utf8&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// post 参数是通过事件的方式接受的</span></span><br><span class="line">  <span class="comment">// data 当请求参数传递的时候触发 data 事件</span></span><br><span class="line">  <span class="comment">// end 当参数传递完成的时候触发 end 事件</span></span><br><span class="line">  <span class="comment">// username=aidou&amp;password=123</span></span><br><span class="line">  <span class="keyword">let</span> postParams = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  req.on(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">    postParams += params;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.on(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(postParams);</span><br><span class="line">    <span class="keyword">let</span> querystr = queryString.parse(postParams);</span><br><span class="line">    <span class="built_in">console</span>.log(querystr); <span class="comment">// &#123; username: &#x27;aidou&#x27;, password: &#x27;123&#x27; &#125;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  res.end(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(<span class="number">3031</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;可以通过 127.0.0.1:3031/ 来访问服务器了····&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h4><blockquote><p>路由是指客户端请求地址与服务器端程序代码的对应关系</p></blockquote><ul><li><p>路由处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> server = http.createServer();</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.writeHeader(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/html;charset=utf8&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 获取请求方式</span></span><br><span class="line">  <span class="keyword">const</span> method = req.method.toLowerCase();</span><br><span class="line">  <span class="built_in">console</span>.log(method); <span class="comment">// GET---  toLowerCase() ---&gt; get</span></span><br><span class="line">  <span class="comment">// 获取请求地址</span></span><br><span class="line">  <span class="keyword">const</span> pathname = url.parse(req.url).pathname;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;pathname: &quot;</span>, pathname); <span class="comment">// pathname:  /index</span></span><br><span class="line">  <span class="keyword">if</span> (method == <span class="string">&quot;get&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (pathname == <span class="string">&quot;/&quot;</span> || pathname == <span class="string">&quot;/index&quot;</span>) &#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;h1&gt; return get index home page &lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;h1&gt;Not Found GET&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (method == <span class="string">&quot;post&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (pathname == <span class="string">&quot;/&quot;</span> || pathname == <span class="string">&quot;/index&quot;</span>) &#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;h1&gt; return post index home page &lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;h1&gt;Not Found POST&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3031</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>静态资源访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器端不需要处理,可以直接响应给客户端的资源就是静态资源，例如 css javascript image 文件等</span><br></pre></td></tr></table></figure><ul><li><p>获取访问路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取 pathname  </span><br><span class="line">url.parse(req.url).pathname</span><br></pre></td></tr></table></figure></li><li><p>获取当前文件的绝对路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># path 模块</span><br><span class="line"></span><br><span class="line">path.join(__dirname, <span class="string">&quot;public&quot;</span> + pathname)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>静态资源读取</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/pathnameDefault.png"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># app.js</span><br><span class="line">    <span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line">    server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">      res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/html;charset=utf8&quot;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 响应文件路径</span></span><br><span class="line">      <span class="keyword">let</span> pathname = url.parse(req.url).pathname;  </span><br><span class="line">      </span><br><span class="line">        #   pathname = pathname == &quot;/&quot; ? &quot;/default.html&quot; : pathname; 更新显示判断</span><br><span class="line">        </span><br><span class="line">      <span class="comment">// 绝对路径获取 url</span></span><br><span class="line">      <span class="keyword">let</span> realPath = path.join(__dirname, <span class="string">&quot;public&quot;</span> + pathname);</span><br><span class="line">      fs.readFile(realPath, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error != <span class="literal">null</span>) &#123;</span><br><span class="line">          res.end(<span class="string">&quot;读取失败···&quot;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          res.end(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    server.listen(<span class="number">3031</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>mime</code>模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install mime</span><br><span class="line">const mime = require(<span class="string">&#x27;mime&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> <span class="built_in">type</span> = mime.getType(realPath);</span><br><span class="line">res.writeHead(200,&#123;</span><br><span class="line"><span class="string">&#x27;content-type&#x27;</span>: <span class="built_in">type</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="同步API和异步API"><a href="#同步API和异步API" class="headerlink" title="同步API和异步API"></a>同步<code>API</code>和异步<code>API</code></h4><ol><li><p>同步API</p><blockquote><p>只有当前 <code>API</code> 执行完成后,才能继续执行下一个 <code>API</code></p></blockquote></li><li><p> 异步 API</p></li></ol><blockquote><p>当前 API 的执行不会阻塞后续代码的执行</p></blockquote><ol start="3"><li><p>比较</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步 sync</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;before···&quot;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">// 异步 async </span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;last···&quot;</span>);</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;after···&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/async.png" width="400"></li><li><p> 同步 <code>API</code> 和异步<code>API</code>的区别</p></li></ol><blockquote><p>同步 API 可以从返回值中拿到 API 的执行结果,但是异步 API 是不可以的</p><p>同步 API 从上到下依次执行，前面代码会阻塞后面代码的执行。（会等待循环结束后才会执行后面的代码）</p><p>异步 API 不会等待 API 执行完成后再向下执行代码</p></blockquote>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">------------------------------------- <span class="number">1</span> ----------------------------------</span><br><span class="line"><span class="comment">// 同步函数返回值问题</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">n1, n2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n1 + n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> value = sum(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(value); <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步函数返回值问题</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMsg</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;异步执行&quot;</span>;</span><br><span class="line">  &#125;, <span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> msg = getMsg();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;return msg result: &quot;</span>, msg); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line">---------------------------------- <span class="number">2</span>: 同步 -------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">// 同步会等待循环结束后才会执行后面的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;for 循环后面的代码&#x27;</span>);</span><br><span class="line"></span><br><span class="line">---------------------------------- <span class="number">3</span>: 异步 -------------------------------------</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;code start running···············&quot;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;0.2 start code············&quot;</span>);</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;0 start code············&quot;</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;code running end·············&quot;</span>);</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/until.png" width="500"><ol start="5"><li><p>回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">作用: 可以拿到异步函数的返回值</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 异步函数通过回调函数获取返回值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    callback(&#123;</span><br><span class="line">      msg: <span class="string">&quot;hello node js&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">getData(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h4 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h4><blockquote><p>promise 出现的目的是解决 Node.js 异步编程中回调地狱的问题。</p></blockquote><ul><li><p>promise的基本使用方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 读取文件</span></span><br><span class="line">  fs.readFile(<span class="string">&quot;D.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">      reject(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resolve(data.toString());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></li><li><p> 顺序读取文件</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 难以维护 </span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line">fs.readFile(<span class="string">&quot;./A.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">  fs.readFile(<span class="string">&quot;./B.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">    fs.readFile(<span class="string">&quot;./C.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>解决<code>Node.js</code>回调地狱问题</p><details ><summary> Node回调地狱问题 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// promise 的基础使用 解决Node.js 的回调地狱</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (promise1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 读取文件</span></span><br><span class="line">    fs.readFile(<span class="string">&quot;A.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        reject(error);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resolve(data.toString());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (promise2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 读取文件</span></span><br><span class="line">    fs.readFile(<span class="string">&quot;B.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        reject(error);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resolve(data.toString());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p3</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (promise3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 读取文件</span></span><br><span class="line">    fs.readFile(<span class="string">&quot;C.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        reject(error);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resolve(data.toString());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1()</span><br><span class="line">  .then(<span class="function">(<span class="params">r1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(r1);</span><br><span class="line">    <span class="keyword">return</span> p2();</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">r2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(r2);</span><br><span class="line">    <span class="keyword">return</span> p3();</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">r3</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(r3);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h4 id="异步函数"><a href="#异步函数" class="headerlink" title="异步函数"></a>异步函数</h4><blockquote><p>异步函数就是异步编程语法的终极解决方案,它可以让我们将异步代码写成同步的形式让代码不再有回调函数嵌套，使代码变得清晰明了。</p></blockquote><ul><li><p><code>async</code> 关键字</p><ol><li><p>普通函数定义前加<code>async</code>关键字  普通函数就变成异步函数</p></li><li><p> 异步函数默认返回 <code>promise</code>对象</p></li><li><p> 在异步函数内部使用 <code>return</code> 关键字进行结果返回 结果会被包裹再 <code>promise</code>对象中 return 关键字代替了 <code>resolve()</code></p></li><li><p> 在异步函数内部使用 <code>throw</code> 关键字抛出程序异常</p></li><li><p> 调用异步函数再链式调用 <code>then </code>方法获取异步函数执行结果</p></li><li><p> 调用异步函数再链式调用 <code>catch</code>方法获取异步函数执行的错误信息</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="string">&#x27;throw error infomation&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;return result data&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fn()); <span class="comment">//默认输出: Promise &#123; undifined &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// then方法 catch方法</span></span><br><span class="line">fn()</span><br><span class="line">  .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data); <span class="comment">// 成功: Promise &#123; &#x27;return result data&#x27; &#125;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error); <span class="comment">//失败: Promise &#123; &lt;rejected&gt; &#x27;throw error infomation&#x27; &#125;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>await</code>关键字</p><ol><li><code>await</code>关键字<code>只能</code>出现在异步函数中</li><li> <code>await promise await</code>后面只能写<code>promise</code>对象  写其他类型的 <code>API</code> 是不可以的</li><li> <code>await</code>关键字是可以暂停异步函数向下执行 知道 <code>promise</code>返回结果</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;fn1&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;fn2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;fn3&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 顺序执行 异步函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">runFn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> r1 = <span class="keyword">await</span> fn1();</span><br><span class="line">  <span class="keyword">let</span> r2 = <span class="keyword">await</span> fn2();</span><br><span class="line">  <span class="keyword">let</span> r3 = <span class="keyword">await</span> fn3();</span><br><span class="line">  <span class="built_in">console</span>.log(r1, r2, r3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">runFn();</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用异步函数顺序读取文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> promisify = <span class="built_in">require</span>(<span class="string">&quot;util&quot;</span>).promisify;</span><br><span class="line"><span class="keyword">const</span> readFile = promisify(fs.readFile);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> r1 = <span class="keyword">await</span> readFile(<span class="string">&quot;./A.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> r2 = <span class="keyword">await</span> readFile(<span class="string">&quot;./B.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> r3 = <span class="keyword">await</span> readFile(<span class="string">&quot;./C.txt&quot;</span>, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(r1, r2, r3);</span><br><span class="line">&#125;</span><br><span class="line">run()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><ul><li><p>概念</p><table><thead><tr><th align="center">术语</th><th align="center">解释说明</th></tr></thead><tbody><tr><td align="center"><code>database</code></td><td align="center">数据库<code>mongogdb</code> 数据库软件中可以建立多个数据库</td></tr><tr><td align="center"><code>collection</code></td><td align="center">集合 一组数据的集合 可以理解为 JavaScript 中的数组</td></tr><tr><td align="center"><code>document</code></td><td align="center">文档 一条具体的数据 可以理解为 JavaScript 对象</td></tr><tr><td align="center"><code>field</code></td><td align="center">字段 文档中的属性名 可以理解为 JavaScript中的对象属性</td></tr></tbody></table></li><li><p>第三方包</p><ul><li><p><code>使用 Node.js</code>操作Mongodb数据库需要依赖<code>Node.js</code>第三方包<code>mongoose</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mongoose</span><br></pre></td></tr></table></figure></li><li><p>启动<code>mongodb</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mongodb</span><br></pre></td></tr></table></figure></li><li><p>关闭<code>mongodb</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mongodb</span><br></pre></td></tr></table></figure></li><li><p>启动遇到如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">‘环境变量’  bin/</span><br><span class="line"></span><br><span class="line">发生系统错误 5。</span><br><span class="line"></span><br><span class="line">拒绝访问。</span><br><span class="line"></span><br><span class="line">解决: 使用管理员权限启动 mongodb 服务</span><br><span class="line"></span><br><span class="line"><span class="built_in">chdir</span> 命令: 获取 windows 的路径 == <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/adminMon.png" width="600" alt="普通管理员" title="普通管理员"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/netStartMon.png" width="600" alt="超级管理员" title="超级管理员"></li></ul></li><li><p><code>Nodes</code>连接数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 mongoose  模块</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">mongoose</span><br><span class="line">  .connect(<span class="string">&quot;mongodb://localhost/student&quot;</span>, &#123;</span><br><span class="line">    useNewUrlParser: <span class="literal">true</span>,</span><br><span class="line">    useUnifiedTopology: <span class="literal">true</span> </span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据库连接成功&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error, <span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建集合分为两个步骤:</span><br><span class="line"><span class="number">1.</span> 对集合设定规则</span><br><span class="line">    <span class="number">2.</span> 创建集合</span><br><span class="line">    创建 mongoose.Schema 构造函数的实例即可创建集合</span><br></pre></td></tr></table></figure></li></ul><h4 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h4><ul><li><p>模板引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">模板引擎是第三方模块</span><br><span class="line"></span><br><span class="line">让开发者以更加友好的方式拼接字符串,使项目代码更加清晰,更加易于维护。</span><br></pre></td></tr></table></figure></li><li><p>模板引擎下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install art-template</span><br></pre></td></tr></table></figure></li><li><p>模板引擎的使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> template = <span class="built_in">require</span>(<span class="string">&#x27;art-template&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> html = template(<span class="string">&#x27;模板路径&#x27;</span>,数据);</span><br></pre></td></tr></table></figure></li><li><p>模板引擎基础使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入模板引擎</span></span><br><span class="line"><span class="keyword">const</span> template = <span class="built_in">require</span>(<span class="string">&quot;art-template&quot;</span>);</span><br><span class="line"><span class="comment">// 引入系统模块 path</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="comment">// 路径拼接</span></span><br><span class="line"><span class="keyword">const</span> views = path.join(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;index.art&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> html = template(views, &#123;</span><br><span class="line">  age: <span class="number">10</span>,</span><br><span class="line">  name: <span class="string">&quot;Node&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(html);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/arttemplate.png" width="300"></li><li><p>输出,支持运算符</p><ol><li><p>标准语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; name &#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p> 原始语法</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= name %&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li> 原文解析</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.js:</span><br><span class="line">&#123;</span><br><span class="line">        name: <span class="string">&quot;&lt;h3&gt;Node&lt;/h3&gt;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">-------------------------------------</span><br><span class="line">&#123;&#123;@ name &#125;&#125; <span class="comment">// 输出: &lt;h3&gt;Node&lt;/h3&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;%- name %&gt; <span class="comment">// 输出: &lt;h3&gt;Node&lt;/h3&gt;</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>条件判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="keyword">if</span> age&gt;<span class="number">30</span> &#125;&#125;</span><br><span class="line">年龄过大</span><br><span class="line">&#123;&#123; <span class="keyword">else</span> <span class="keyword">if</span> age&lt;<span class="number">15</span>&#125;&#125;</span><br><span class="line">&#123;&#123; age &#125;&#125;</span><br><span class="line">&#123;&#123;/<span class="keyword">if</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; each 数据&#125;&#125;  &#123;&#123;/each&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>子模板</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用子模板可以将网站公共区块(头部、底部)抽离到单独的文件中。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 标准语法: 引入头部</span></span><br><span class="line">&#123;&#123;include <span class="string">&#x27;./commen/header.art&#x27;</span>&#125;&#125;</span><br><span class="line"><span class="comment">// 原始语法: 引入底部</span></span><br><span class="line">&lt;% include(<span class="string">&#x27;./commen/footer.art&#x27;</span>) %&gt;</span><br></pre></td></tr></table></figure></li><li><p>模板继承</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用模板继承可以将网站 HTML 骨架抽离到单独文件中,其他页面模板可以继承骨架文件。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 留坑</span></span><br><span class="line">&#123;&#123;block <span class="string">&#x27;name&#x27;</span>&#125;&#125; &#123;&#123;/block&#125;&#125;</span><br><span class="line">                   </span><br><span class="line"> <span class="comment">// 继承</span></span><br><span class="line">&#123;&#123;extend <span class="string">&#x27;path/art-template name&#x27;</span>&#125;&#125;</span><br><span class="line"><span class="comment">// 填充</span></span><br><span class="line">&#123;&#123;block <span class="string">&#x27;name&#x27;</span>&#125;&#125;  填充 &#123;&#123;/block&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>模板配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 向模板中导入变量 template.defaults.imports.变量名 = 变量值;</span><br><span class="line"><span class="number">2.</span> 设置模板根目录 template.defaults.root = 模板目录;</span><br><span class="line"><span class="number">3.</span> 设置模板默认后缀 template.defaults.extname=<span class="string">&#x27;.art&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>路由模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install router</span><br></pre></td></tr></table></figure><ul><li>使用步骤<ol><li>获取路由对象</li><li> 调用路由对象提供的方法创建路由</li><li> 启用路由,使路由生效</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*********************************************/</span></span><br><span class="line"><span class="comment">// 引入路由模块</span></span><br><span class="line"><span class="keyword">const</span> getRouter = <span class="built_in">require</span>(<span class="string">&quot;router&quot;</span>);</span><br><span class="line"><span class="comment">// 获取路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = getRouter();</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span>  test 路由</span></span><br><span class="line">router.get(<span class="string">&quot;/test&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.end(<span class="string">&quot;/test&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> index 路由</span></span><br><span class="line"> router.get(<span class="string">&quot;/index&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.end(<span class="string">&quot;/index&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/*********************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 启用路由 必填参数</span></span><br><span class="line">  router(req, res, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;被调用&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 启用静态资源 fn 必填参数</span></span><br><span class="line">    serve(req, res, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>第三方模块<code>serve-static</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">功能: 实现讲台资源访问服务</span><br></pre></td></tr></table></figure><ul><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install serve-static</span><br></pre></td></tr></table></figure></li><li><p>使用步骤</p><ol><li>引入 <code>serve-static</code>模块获取创建静态资源服务功能的方法</li><li> 调用方法创建静态资源服务并指定静态资源服务目录</li><li> 启用静态资源服务功能</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*********************************************/</span></span><br><span class="line"><span class="comment">// 引入静态资源模块</span></span><br><span class="line"><span class="keyword">const</span> serveStatic = <span class="built_in">require</span>(<span class="string">&quot;serve-static&quot;</span>);</span><br><span class="line"><span class="comment">// 实现静态资源访问 参数为静态资源目录</span></span><br><span class="line"><span class="keyword">const</span> serve = serveStatic(path.join(__dirname, <span class="string">&quot;public&quot;</span>));</span><br><span class="line"><span class="comment">/*********************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 启用静态资源 fn 必填参数</span></span><br><span class="line">    serve(req, res, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="Express-框架"><a href="#Express-框架" class="headerlink" title="Express 框架"></a>Express 框架</h4><h5 id="express"><a href="#express" class="headerlink" title="express"></a><code>express</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Express 是一个基于 Node 平台的 web 应用开发框架,它提供了一系列强大的特性,帮助你创建各种 web 应用</span><br></pre></td></tr></table></figure><h5 id="Express下载"><a href="#Express下载" class="headerlink" title="Express下载"></a><code>Express</code>下载</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><ul><li><p>框架特性</p><ol><li>提供了方便简介的路由定义方式</li><li> 对获取 <code>HTTP </code>请求参数进行了简化处理</li><li> 对模板引擎支持高,方便渲染动态 <code>HTML</code> 页面</li><li> 提供了中间件机制有效控制 <code>HTTP</code> 请求</li><li> 拥有大量第三方中间件对功能进行扩展  </li></ol></li><li><p>使用<code>express</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 express 框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建服务 </span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3031</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>send</code>方法<ol><li><code>send</code> 方法内部会检测响应内容的类型</li><li><code>send</code> 方法会自动设置 <code>http</code> 状态码</li><li><code>send </code> 方法会帮我们自动设置响应的内容类型以及编码</li></ol></li></ul></li></ul><h5 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">中间件就是一堆方法,可以接受客户端发来的请求，可以对请求做出响应,也可以将请求继续交给下一个中间件继续处理。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">&#x27;/index&#x27;</span>,<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 调用 index 走该中间件</span></span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li><p><code>app.use</code>匹配所有的请求方式,可以直接传入请求处理函数，代表接受所有的请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p> <code>app.use</code>第一个参数也可以传入地址，代表不论什么请求方式,只要是这个请求地址就接受这个请求</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">&#x27;/index&#x27;</span>,<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="中间件的应用"><a href="#中间件的应用" class="headerlink" title="中间件的应用"></a>中间件的应用</h5><ol><li> 路由保护，客户端在访问需要登录的页面时，可以先使用中间件判断用户登录状态,用户如果未登录,直接响应,禁止用户进入需要登录的页面</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 中间件</span></span><br><span class="line">app.use(<span class="string">&quot;/admin&quot;</span>, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 用户没有登录</span></span><br><span class="line">  <span class="keyword">let</span> isLogin = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (isLogin) &#123;</span><br><span class="line">    <span class="comment">// true 就是登录 如果登录继续向下执行</span></span><br><span class="line">    next();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 如果用户没有登陆.直接对客户端做出响应</span></span><br><span class="line">    res.send(<span class="string">&quot;请登录·········&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  app.get(<span class="string">&quot;/admin&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.end(<span class="string">&quot;你已登陆·····&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li><p> 网站维护公告,在所有路由的最上面定义接收所有请求的中间件，直接为客户端做出响应，网站正在维护中</p></li><li><p> 自定义<code>404页面</code></p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  res.status(<span class="number">404</span>).send(<span class="string">&quot;当前访问页面不存在&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="错误处理中间件"><a href="#错误处理中间件" class="headerlink" title="错误处理中间件"></a>错误处理中间件</h5><blockquote><p>在程序执行的过程中,不可避免的会出现一些无法预料的错误,比如文件读取失败,数据库连接失败,错误处理中间件是一个集中处理错误的地方</p></blockquote><ul><li><p>基本使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">app.get(<span class="string">&quot;/list&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 抛出异常</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;程序发生了未知错误&quot;</span>);</span><br><span class="line"> <span class="comment">// res.end(&quot;程序正常执行&quot;);</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 错误处理中间件</span></span><br><span class="line">app.use(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  res.status(<span class="number">500</span>).send(err.message);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h5 id="捕获错误"><a href="#捕获错误" class="headerlink" title="捕获错误"></a>捕获错误</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> <span class="keyword">catch</span> 可以捕获异步函数以及其他同步代码在执行过程中发生的错误,但是不能其他类型的 API 发生的错误。</span><br></pre></td></tr></table></figure><h5 id="Express-请求处理"><a href="#Express-请求处理" class="headerlink" title="Express 请求处理"></a>Express 请求处理</h5><ul><li><p>构建模块化路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************/</span></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">index.js:</span><br><span class="line">    <span class="comment">// 创建路由对象</span></span><br><span class="line">    <span class="keyword">const</span> index = express.Router();</span><br><span class="line">    <span class="comment">// 为路由对象匹配请求路径</span></span><br><span class="line">    app.use(<span class="string">&quot;/index&quot;</span>, index);</span><br><span class="line">    <span class="comment">// 创建二级路由</span></span><br><span class="line">    index.get(<span class="string">&quot;/home&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">      res.send(<span class="string">&quot;Blog home Index&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">module</span>.exports = index;</span><br><span class="line"><span class="comment">/*******************************/</span></span><br><span class="line">app.js:</span><br><span class="line"><span class="keyword">const</span> index = <span class="built_in">require</span>(<span class="string">&#x27;path/index.js&#x27;</span>);</span><br><span class="line"><span class="comment">// index/home: Blog home Index</span></span><br><span class="line">app.use(<span class="string">&#x27;/home&#x27;</span>,index);</span><br><span class="line"><span class="comment">/*******************************/</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="GET请求参数处理"><a href="#GET请求参数处理" class="headerlink" title="GET请求参数处理"></a>GET请求参数处理</h5><blockquote><p><code>Express</code> 框架中使用 <code>req.query</code>即可获取 <code>GET</code>参数,框架内部会将 <code>GET</code>请求参数转换为对象并返回</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&#x27;/index&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.send(req.url);</span><br><span class="line">  <span class="built_in">console</span>.log(req.query); <span class="comment">// &#123; name: &#x27;zhangsan&#x27;, age: &#x27;10&#x27; &#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="POST-请求参数处理"><a href="#POST-请求参数处理" class="headerlink" title="POST 请求参数处理"></a>POST 请求参数处理</h5><blockquote><p>第三方模块: <code>npm install body-parser</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入第三方模块</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>);</span><br><span class="line"><span class="comment">// 配置</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&quot;/index&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(req.url);</span><br><span class="line">  <span class="built_in">console</span>.log(req.body); <span class="comment">// [Object: null prototype] &#123; username: &#x27;qw&#x27;, pwd: &#x27;sa&#x27; &#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解释</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拦截所有请求参数</span></span><br><span class="line">extended: <span class="literal">false</span> 方法内部使用 querystring 模块处理请求参数的格式</span><br><span class="line">extended: <span class="literal">true</span> 方法内部使用第三方模块 qs 处理请求参数的格式</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="Express-路由参数"><a href="#Express-路由参数" class="headerlink" title="Express 路由参数"></a>Express 路由参数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&quot;/index/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.params); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="Express-静态资源处理"><a href="#Express-静态资源处理" class="headerlink" title="Express 静态资源处理"></a>Express 静态资源处理</h5><ul><li><p>静态资源</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过 Express 内置的 express.static 可以方便地托管静态文件,例如 img,css,javascript 文件等。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pathname = path.join(__dirname, <span class="string">&quot;public&quot;</span>);</span><br><span class="line"><span class="comment">// 实现静态资源访问功能</span></span><br><span class="line">app.use(express.static(pathname));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问: http://127.0.0.1:3031/[default.html]</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="模板引擎-1"><a href="#模板引擎-1" class="headerlink" title="模板引擎"></a>模板引擎</h5><ol><li><p>模板引擎</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了使 <span class="string">`art-template`</span>模板引擎能够更好的和<span class="string">`Express`</span>框架结合,模板引擎官方在原 <span class="string">`art-template`</span> 模板引擎的基础上封装了<span class="string">`express-art-template`</span></span><br></pre></td></tr></table></figure></li><li><p> 下载</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install art-template express-art-template </span><br></pre></td></tr></table></figure><ol start="3"><li> 使用</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//*********************************</span></span><br><span class="line"><span class="comment">// 模板引擎的使用</span></span><br><span class="line"><span class="comment">//*********************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 告诉 express 框架使用什么模板引擎渲染什么后缀的模板文件</span></span><br><span class="line">app.engine(<span class="string">&quot;art&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;express-art-template&quot;</span>));</span><br><span class="line"><span class="comment">// 2. 告诉 express 框架模板存放的位置</span></span><br><span class="line">app.set(<span class="string">&quot;views&quot;</span>, path.join(__dirname, <span class="string">&quot;views&quot;</span>));</span><br><span class="line"><span class="comment">// 3. 告诉 express 框架模板的默认后缀是什么</span></span><br><span class="line">app.set(<span class="string">&quot;view engine&quot;</span>, <span class="string">&quot;art&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个路由</span></span><br><span class="line">app.get(<span class="string">&quot;/index&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.render(<span class="string">&quot;index&quot;</span>, &#123;</span><br><span class="line">    msg: <span class="string">&quot;message&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3031</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功··················&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Node-深入补充"><a href="#Node-深入补充" class="headerlink" title="Node 深入补充"></a>Node 深入补充</h3><h4 id="系统模块-1"><a href="#系统模块-1" class="headerlink" title="系统模块"></a>系统模块</h4><h5 id="读取目录树"><a href="#读取目录树" class="headerlink" title="读取目录树"></a>读取目录树</h5><ul><li><p><code>R</code></p><details ><summary> 文件读取 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 同步读取文件</span></span><br><span class="line">  <span class="keyword">let</span> dirs = fs.readdirSync(<span class="string">&quot;./&quot;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(dirs); <span class="comment">// 需要捕获异常</span></span><br><span class="line">  </span><br><span class="line">  -------------------------- 改进 ------------------------------------</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//捕获同步执行异常 </span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 可能出现错误的代码</span></span><br><span class="line">    <span class="keyword">let</span> dirtree = fs.readdirSync(<span class="string">&quot;./&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(dirtree);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="comment">// 错误后执行的代码</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;执行出错,请仔细阅读错误信息: &quot;</span>, err);</span><br><span class="line">  &#125;</span><br><span class="line">  ------------------------------------------------------------------</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 异步读取</span></span><br><span class="line">  fs.readdir(<span class="string">&quot;./&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 错误的回调函数优先,在回调函数中第一个参数表示错误对象 默认为 null 如果出现错误 err 就是错误对象</span></span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;请重新尝试: &quot;</span>, err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h5 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h5><ul><li><p><code>C</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建文件夹</span></span><br><span class="line">fs.mkdir(<span class="string">&quot;../qf-Node-day02&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;文件夹创建成功&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h5 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h5><ul><li><p><code>U</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更改文件夹</span></span><br><span class="line">fs.rename(<span class="string">&quot;../qf-Node-day03&quot;</span>, <span class="string">&quot;../qf-Node-day02&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;重命名成功&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><ul><li><p><code>D</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除文件夹 只能删除空文件夹</span></span><br><span class="line">fs.rmdir(<span class="string">&quot;../qf-Node-day02&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;文件夹删除成功&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h5 id="文件读写删除"><a href="#文件读写删除" class="headerlink" title="文件读写删除"></a>文件读写删除</h5><ul><li><p>读写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件写入</span></span><br><span class="line">fs.writeFile(<span class="string">&quot;./writeJs.js&quot;</span>, <span class="string">&quot;// Node JS written successfully&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fs.readFile(<span class="string">&quot;./writeJs.js&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data.toString(<span class="string">&#x27;utf8&#x27;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>删除文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fs.unlink(<span class="string">&quot;./writeJs.js&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;文件已删除&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><ul><li><p><code>url</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">统一资源定位符</span><br></pre></td></tr></table></figure></li><li><p>图解</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/url.png"></li><li><p><code>url.parse</code></p><details ><summary> url.parse </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> urlpath = <span class="string">&#x27;https://www.bilibili.com/video/BV13E411y7G4?p=7&amp;spm_id_from=pageDriver&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> urlparse = url.parse(urlpath);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(urlparse);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Url &#123;</span></span><br><span class="line"><span class="comment">  protocol: &#x27;https:&#x27;,</span></span><br><span class="line"><span class="comment">  slashes: true,</span></span><br><span class="line"><span class="comment">  auth: null,</span></span><br><span class="line"><span class="comment">  host: &#x27;www.bilibili.com&#x27;,    </span></span><br><span class="line"><span class="comment">  port: null,</span></span><br><span class="line"><span class="comment">  hostname: &#x27;www.bilibili.com&#x27;,</span></span><br><span class="line"><span class="comment">  hash: null,</span></span><br><span class="line"><span class="comment">  search: &#x27;?p=7&amp;spm_id_from=pageDriver&#x27;,</span></span><br><span class="line"><span class="comment">  query: &#x27;p=7&amp;spm_id_from=pageDriver&#x27;,</span></span><br><span class="line"><span class="comment">  pathname: &#x27;/video/BV13E411y7G4&#x27;,</span></span><br><span class="line"><span class="comment">  path: &#x27;/video/BV13E411y7G4?p=7&amp;spm_id_from=pageDriver&#x27;,</span></span><br><span class="line"><span class="comment">  href: &#x27;https://www.bilibili.com/video/BV13E411y7G4?p=7&amp;spm_id_from=pageDriver&#x27;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>              </div>            </details><ul><li><p>将对象转换为字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将对象转换为字符串</span></span><br><span class="line"><span class="keyword">let</span> strurl = url.format(urlparse);</span><br><span class="line"><span class="built_in">console</span>.log(strurl); <span class="comment">//  https://www.bilibili.com/video/BV13E411y7G4?p=7&amp;spm_id_from=pageDriver</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>获取<code>url</code>参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取对象参数的值</span></span><br><span class="line"><span class="keyword">let</span> params = url.parse(urlpath, <span class="literal">true</span>).query;</span><br><span class="line"><span class="built_in">console</span>.log(params);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>quertstring</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本使用</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;p=7&amp;spm_id_from=pageDriver&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(qs.parse(str)); <span class="comment">// [Object: null prototype] &#123; p: &#x27;7&#x27;, spm_id_from: &#x27;pageDriver&#x27; &#125;</span></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加参数</span></span><br><span class="line"><span class="keyword">let</span> newStr = <span class="string">&quot;p*7#spm_id_from*pageDriver&quot;</span>;</span><br><span class="line"><span class="comment">// * # 为 query 的显示方式,而使用该方式进行解析</span></span><br><span class="line"><span class="keyword">let</span> obj = qs.parse(newStr, <span class="string">&quot;#&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj); <span class="comment">// [Object: null prototype] &#123; p: &#x27;7&#x27;, spm_id_from: &#x27;pageDriver&#x27; &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>stringfy</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stringfy</span></span><br><span class="line"><span class="keyword">let</span> jsonS = &#123; <span class="attr">p</span>: <span class="string">&quot;7&quot;</span>, <span class="attr">spm_id_from</span>: <span class="string">&quot;pageDriver&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> jsonStr = qs.stringify(jsonS);</span><br><span class="line"><span class="built_in">console</span>.log(jsonStr); <span class="comment">// p=7&amp;spm_id_from=pageDriver</span></span><br></pre></td></tr></table></figure></li><li><p><code>nodemailer</code></p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">请勿尝-了解知识    </button><div class="hide-content"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// npm install nodemailer</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> nodemailer = <span class="built_in">require</span>(<span class="string">&quot;nodemailer&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建发送邮件对象</span></span><br><span class="line"><span class="keyword">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class="line">  host: <span class="string">&quot;smtp.qq.com&quot;</span>, <span class="comment">// 发送方邮箱类型: QQ 网易 ···</span></span><br><span class="line">  port: <span class="number">465</span>,</span><br><span class="line">  secure: <span class="literal">true</span>, <span class="comment">//  true for 465, false for other ports</span></span><br><span class="line">  auth: &#123;</span><br><span class="line">    user: <span class="string">&#x27;xxx@qq.com&#x27;</span>, <span class="comment">// 发送方邮箱地址</span></span><br><span class="line">    pass: <span class="string">&#x27;&#x27;</span>, <span class="comment">// smtp 验证码</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 邮件信息</span></span><br><span class="line"><span class="keyword">let</span> mailobj = &#123;</span><br><span class="line">  <span class="keyword">from</span>: <span class="string">&quot;&lt;xxx@qq.com&gt;&quot;</span>, <span class="comment">// 邮件发送地址</span></span><br><span class="line">  to: <span class="string">&quot;xxx@qq.com&quot;</span>,</span><br><span class="line">  subject: <span class="string">&quot;Node 发送邮箱测试&quot;</span>, <span class="comment">// 标题</span></span><br><span class="line">  text: <span class="string">&quot;发送成功 Node Message&quot;</span>, <span class="comment">// text 和 html 选其一作为发送文本</span></span><br><span class="line">  html: <span class="string">&quot;&lt;h1&gt; 发送成功 Node Message &lt;/h1&gt;&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送邮件</span></span><br><span class="line">transporter.sendMail(mailobj,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div></div></li></ul><h4 id="Express-路由"><a href="#Express-路由" class="headerlink" title="Express 路由"></a>Express 路由</h4><ul><li><p>路由下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install router</span><br></pre></td></tr></table></figure></li><li><p>拆解路由</p><details ><summary> 路由 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">router: /userRouter</span><br><span class="line">userRouter:</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.Router();</span><br><span class="line"><span class="comment">// user api </span></span><br><span class="line"> router.get(<span class="string">&#x27;/login&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">                res.send(&#123;</span><br><span class="line">                    code: <span class="number">1</span>,</span><br><span class="line">                    ps: <span class="string">&#x27;login ok&#x27;</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"> <span class="built_in">module</span>.exports = router;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------    </span><br><span class="line">    </span><br><span class="line">app.js:</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 引入拆分路由</span></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;./router/userRouter&#x27;</span>);</span><br><span class="line"><span class="comment">// 使用路由</span></span><br><span class="line">app.use(<span class="string">&#x27;/user&#x27;</span>,userRouter);</span><br><span class="line"></span><br><span class="line">解析:</span><br><span class="line">app.use(<span class="string">&#x27;/user&#x27;</span>,userRouter);</span><br><span class="line"></span><br><span class="line">http:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3031</span>/user/【截取: 进入 userRouter 中寻找请求路由地址 eg: /login ]</span><br><span class="line"></span><br><span class="line">所以最终请求地址为: http:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3031</span>/user/login</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h4 id="模板引擎-2"><a href="#模板引擎-2" class="headerlink" title="模板引擎"></a>模板引擎</h4><h5 id="模板引擎下载"><a href="#模板引擎下载" class="headerlink" title="模板引擎下载"></a>模板引擎下载</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install art-template --save </span><br></pre></td></tr></table></figure><h5 id="使用模板引擎"><a href="#使用模板引擎" class="headerlink" title="使用模板引擎"></a>使用模板引擎</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> template = <span class="built_in">require</span>(<span class="string">&quot;art-template&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="comment">// 读取 art.html 字符串模板</span></span><br><span class="line">fs.readFile(<span class="string">&quot;./public/art.html&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;读取失败&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 渲染模板引擎</span></span><br><span class="line">    <span class="keyword">let</span> templateRes = template.render(data.toString(),&#123;</span><br><span class="line">        name: <span class="string">&quot;李四&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(templateRes);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="包说明文件"><a href="#包说明文件" class="headerlink" title="包说明文件"></a>包说明文件</h4><ul><li><p><code>package.json</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line"></span><br><span class="line">npm install package-name --save</span><br><span class="line">--save: 可以将包添加到 package.json 中的 dependencies 选项中</span><br><span class="line">注意: 建议每个项目都有 package.json 文件</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h4><ul><li><p><code>npm</code>官网</p><p><a href="https://www.npmjs.com/">点击前往 npm 官网 </a></p></li><li><p><code>npm</code>命令行管理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install package-name --save</span><br></pre></td></tr></table></figure></li><li><p><code>npm</code>升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global npm</span><br></pre></td></tr></table></figure></li></ul><h4 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h4><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.listen(<span class="string">&#x27;端口号&#x27;</span>,<span class="string">&#x27;回调函数&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="静态资源文件路径开放问题"><a href="#静态资源文件路径开放问题" class="headerlink" title="静态资源文件路径开放问题"></a>静态资源文件路径开放问题</h5><ul><li><p><code>express</code>中静态资源路径处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开放静态资源路径 访问方式: 127.0.0.1:3031/public/file-name</span></span><br><span class="line">app.use(<span class="string">&quot;/public&quot;</span>, express.static(<span class="string">&quot;./public/&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当省略第一个参数的时候可以省略 /public 的方式访问 访问方式: 127.0.0.1:3031/file-name</span></span><br><span class="line">app.use(express.static(<span class="string">&quot;./public/&quot;</span>)); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 疑惑: path.join() 暂时理解有误 拼接使用错误</span></span><br><span class="line"><span class="keyword">let</span> filepath = path.join(__dirname,<span class="string">&quot;public&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210228132814369.gif" title="express-开放静态资源路径" width="700"></li></ul><h4 id="GET请求参数处理案例"><a href="#GET请求参数处理案例" class="headerlink" title="GET请求参数处理案例"></a>GET请求参数处理案例</h4><ul><li><p><code>app.js</code></p><details ><summary> app.js </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> template = <span class="built_in">require</span>(<span class="string">&quot;art-template&quot;</span>);</span><br><span class="line"><span class="comment">// 创建 express 服务器</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开放静态资源路径 访问方式: 127.0.0.1:3031/public/file-name</span></span><br><span class="line"><span class="comment">// app.use(&quot;/public&quot;, express.static(&quot;./public/&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当省略第一个参数的时候 可以省略 /public 的方式访问</span></span><br><span class="line">app.use(express.static(<span class="string">&quot;./public/&quot;</span>)); <span class="comment">// 127.0.0.1:3031/file-name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// index router</span></span><br><span class="line">app.get(<span class="string">&quot;/index&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 读取文件</span></span><br><span class="line">  fs.readFile(<span class="string">&quot;public/index.html&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> resoult = template.render(data.toString());</span><br><span class="line">      res.send(resoult);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ************************************* */</span></span><br><span class="line"><span class="keyword">let</span> comments = [];</span><br><span class="line"><span class="comment">/* ************************************* */</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&quot;/pinglun&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 读取 pinglun.html</span></span><br><span class="line">  fs.readFile(<span class="string">&quot;public/pinglun.html&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;文件读取失败&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 解析 get 参数数据</span></span><br><span class="line">      <span class="keyword">let</span> parserObj = url.parse(req.url, <span class="literal">true</span>);</span><br><span class="line">      <span class="keyword">let</span> pathname = parserObj.pathname; <span class="comment">//  /pinglun</span></span><br><span class="line">      <span class="built_in">console</span>.log(pathname);</span><br><span class="line">      <span class="keyword">let</span> comment = parserObj.query; <span class="comment">// ? 后面的数据 &#123; username: &#x27;asd&#x27;, message: &#x27;dsadad&#x27; &#125;</span></span><br><span class="line">      <span class="comment">// 追加到数组中 服务器端这个时候已经把数据存储好了 接下来就是让用户重新请求 / 首页</span></span><br><span class="line">      comments.unshift(comment);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 重定向问题</span></span><br><span class="line">      <span class="comment">// 如何通过服务器让客户端重定向</span></span><br><span class="line">      <span class="comment">// 1. 状态码设置为 302 临时重定向</span></span><br><span class="line">      <span class="comment">// statusCode</span></span><br><span class="line">      <span class="comment">// 2. 在响应头中通过 Location 告诉客户端往哪儿重定向</span></span><br><span class="line">      <span class="comment">// setHeader</span></span><br><span class="line">      <span class="comment">// res.statusCode = 302;</span></span><br><span class="line">      <span class="comment">// res.setHeader(&quot;Location&quot;, &quot;/&quot;);</span></span><br><span class="line">      <span class="comment">// res.send();</span></span><br><span class="line">      <span class="comment">// 模板字符串</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; comments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> templateP = template.render(data.toString(), &#123;</span><br><span class="line">          username: comments[i][<span class="string">&quot;username&quot;</span>],</span><br><span class="line">          message: comments[i][<span class="string">&quot;message&quot;</span>],</span><br><span class="line">        &#125;);</span><br><span class="line">        res.send(templateP);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听端口号</span></span><br><span class="line">app.listen(<span class="number">3031</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功··········&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缺点: 未能对 get 表单参数进行截取 只能读取一条数据</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>实现效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/NodeGetData.gif" width="800" title="GET 表单数据处理"></li><li><p>完善<code>BUG</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">问题原因: 在模板字符串渲染参数给中对第二个参数传递时理解有误</span><br><span class="line"></span><br><span class="line">解决方案；</span><br><span class="line">     <span class="keyword">let</span> templateP = template.render(data.toString(), &#123;</span><br><span class="line">         <span class="comment">// comments --&gt; 参数名称 comments--&gt; 数组 而这个数组包含对象 [&#123;&#125;,···]</span></span><br><span class="line">         comments: comments,</span><br><span class="line">          &#125;);</span><br><span class="line">          res.send(templateP);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模板字符串</span></span><br><span class="line"> &#123;&#123;each comments&#125;&#125;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">2021</span>-<span class="number">02</span>-<span class="number">28</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;$value.username&#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;$value.message&#125;&#125;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line"> &#123;&#123;/each&#125;&#125;</span><br><span class="line">            </span><br><span class="line"><span class="comment">// 缺陷: 未添加重定向</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/fixBug.gif" title="修复第一次由于参数传递错误引起的bug" width="800"> </li></ul><ul><li><p>个人案例源码参考</p><p><a href="https://github.com/lovobin/Bin-HTML5/tree/main/Node/node-day10">  点击前往 查看 </p></li></ul><h4 id="模板引擎-3"><a href="#模板引擎-3" class="headerlink" title="模板引擎"></a>模板引擎</h4><h5 id="下载模板引擎"><a href="#下载模板引擎" class="headerlink" title="下载模板引擎"></a>下载模板引擎</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 一次性下载多个包</span><br><span class="line">npm i art-template express-art-template -S</span><br><span class="line"></span><br><span class="line">// 单独下载</span><br><span class="line">npm install art-template --save</span><br><span class="line">npm install express-art-template --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="配置art-template"><a href="#配置art-template" class="headerlink" title="配置art-template"></a>配置<code>art-template</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置使用 art-template art--&gt;: 可以修改为支持语法高亮的后缀文件 比如: html </span></span><br><span class="line">app.engine(<span class="string">&#x27;art&#x27;</span>,<span class="built_in">require</span>(<span class="string">&#x27;express-art-template&#x27;</span>))</span><br><span class="line"></span><br><span class="line">第一个参数: 表示 当渲染以 .art 结尾的文件的时候,使用 art-template 模板引擎</span><br><span class="line"></span><br><span class="line">express-art-template 是专门用来在 Express 中把 art-template 整合到 Express 中</span><br><span class="line"></span><br><span class="line">必须下载 art-template 原因就在于 express-art-template 依赖了 art-template </span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="使用art-template"><a href="#使用art-template" class="headerlink" title="使用art-template"></a>使用<code>art-template</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Express 为 Response 响应对象提供了一个方法: render</span><br><span class="line"></span><br><span class="line">render 方法默认是不可以使用的,但是如果配置了模板引擎就可以使用了</span><br><span class="line"></span><br><span class="line"><span class="comment">// html 模板名必须和上面一致的后缀 统一放在 views 目录中 ,views 中有目录就需要根据目录依次书写文件路径 默认 views/</span></span><br><span class="line">res.render(<span class="string">&#x27;html模板名&#x27;</span>,&#123;模板数据&#125;);</span><br><span class="line"></span><br><span class="line">第一个参数不能写路径,默认会去项目中的 views 目录中查找该模板文件</span><br><span class="line"></span><br><span class="line">注意: 在Express中: 开发人员把所有的试图文件都放到 views 目录中</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/expressarttemplate.png" width="800"><h5 id="配置views目录"><a href="#配置views目录" class="headerlink" title="配置views目录"></a>配置<code>views</code>目录</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.set(<span class="string">&#x27;views&#x27;</span>,render函数的默认路径); <span class="comment">// 第一个参数必须是 views </span></span><br></pre></td></tr></table></figure><h4 id="POST-表单数据处理"><a href="#POST-表单数据处理" class="headerlink" title="POST 表单数据处理"></a>POST 表单数据处理</h4><ul><li><p><code>app.js</code></p><details ><summary> app.js </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 express 框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 创建服务</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置解析 post 表单的中间件</span></span><br><span class="line"><span class="keyword">const</span> bodyparser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>);</span><br><span class="line">app.use(bodyparser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line"><span class="keyword">let</span> userRouter = <span class="built_in">require</span>(<span class="string">&quot;./router/userRouter&quot;</span>);</span><br><span class="line">app.use(<span class="string">&quot;/user&quot;</span>, userRouter); <span class="comment">// 127.0.0.1:3031/user/login  通过 user 再进入 userRouter 下寻找对应路由</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 开放静态资源 添加public 的化显示更加直观</span></span><br><span class="line">app.use(<span class="string">&quot;/public/&quot;</span>, express.static(<span class="string">&quot;./public/&quot;</span>));</span><br><span class="line"><span class="comment">// 省略 public 则对 url 显示更加简介简洁</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 express-art-template 模板引擎 app.engine(&#x27;以什么后缀的文件&#x27;,)</span></span><br><span class="line">app.engine(<span class="string">&quot;html&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;express-art-template&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听端口号</span></span><br><span class="line">app.listen(<span class="number">3031</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Express 服务器启动成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> comments = [];</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&quot;/index&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.render(<span class="string">&quot;index.html&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&quot;/pinglun&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 通过 req.body 获取post 表单请求数据</span></span><br><span class="line">  <span class="keyword">let</span> comment = req.body;</span><br><span class="line">  comments.unshift(comment);</span><br><span class="line">  res.render(<span class="string">&quot;pinglun.html&quot;</span>, &#123; <span class="attr">comments</span>: comments &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>字符串转换为对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件中读取的数据一定是字符串</span></span><br><span class="line"><span class="comment">// 需要手动转换为 对象</span></span><br><span class="line"><span class="built_in">JSON</span>.parse(data).对象名</span><br></pre></td></tr></table></figure></li></ul><h4 id="设计路由"><a href="#设计路由" class="headerlink" title="设计路由"></a>设计路由</h4><table><thead><tr><th align="center">请求方法</th><th align="center">请求路径</th><th align="center">get参数</th><th align="center">post 参数</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><code>GET</code></td><td align="center"><code>/students</code></td><td align="center"></td><td align="center"></td><td align="center">渲染首页</td></tr><tr><td align="center"><code>GET</code></td><td align="center"><code>/students/new</code></td><td align="center"></td><td align="center"></td><td align="center">渲染添加学生页</td></tr><tr><td align="center"><code>POST</code></td><td align="center"><code>/students/new</code></td><td align="center"></td><td align="center"><code>name，age，gender，hobbies</code></td><td align="center">处理添加学生请求</td></tr><tr><td align="center"><code>GET</code></td><td align="center"><code>/students/edit</code></td><td align="center"><code>id</code></td><td align="center"></td><td align="center">渲染编辑页面</td></tr><tr><td align="center"><code>POST</code></td><td align="center"><code>/students/edit</code></td><td align="center"></td><td align="center"><code>id，name，age，gender，hobbies</code></td><td align="center">处理编辑请求</td></tr><tr><td align="center"><code>GET</code></td><td align="center"><code>/students/delete</code></td><td align="center"><code>id</code></td><td align="center"></td><td align="center">处理删除请求</td></tr></tbody></table><div class="tabs" id="router"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#router-1">` 127.0.0.1:3031/students`首页</button></li><li class="tab"><button type="button" data-href="#router-2">`http://127.0.0.1:3031/students/new`用于学生信息添加</button></li><li class="tab"><button type="button" data-href="#router-3">异步函数save封装</button></li><li class="tab"><button type="button" data-href="#router-4">处理信息添加</button></li><li class="tab"><button type="button" data-href="#router-5">编辑路由</button></li><li class="tab"><button type="button" data-href="#router-6">删除</button></li><li class="tab"><button type="button" data-href="#router-7">资源文件获取</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="router-1"><ul><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/routerStudents.png" width="600"></li><li><p>路由规则</p><details ><summary> 路由规则 </summary>            <div class='content'>            <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二级路由</span></span><br><span class="line"></span><br><span class="line">-------------------- 封装独立模块 stident --------------------</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.find = <span class="function">(<span class="params">callback</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 如果要获取一个函数中异步操作的结果 则必须通过回调函数来获取</span></span><br><span class="line">  fs.readFile(dbpath,<span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> callback(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">JSON</span>.parse(data).students);</span><br><span class="line">      <span class="comment">// callback 中的参数: 第一个是: 错误对象 第二个是: 数据</span></span><br><span class="line">      callback(<span class="literal">null</span>, <span class="built_in">JSON</span>.parse(data).students);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------</span><br><span class="line">    </span><br><span class="line">studentsRouter:</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 渲染首页</span></span><br><span class="line">    router.get(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 使用封装函数 find()</span></span><br><span class="line">      Student.find(<span class="function">(<span class="params">err, students</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">&quot;文件读取失败&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          res.render(<span class="string">&quot;index.html&quot;</span>, &#123;</span><br><span class="line">            students: students,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>            </div>          </details><p>模板字符串</p><details ><summary> 模板字符串 </summary>            <div class='content'>            <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;container&quot;</span>&gt;</span><br><span class="line">     &lt;!-- 超链接 a 进行页面跳转 href=[<span class="regexp">/students/</span><span class="keyword">new</span>]  实现第二个路由 --&gt;</span><br><span class="line">     &lt;p&gt;</span><br><span class="line">       &lt;a href=<span class="string">&quot;/students/new&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;添加学生&lt;/a&gt;</span><br><span class="line">     &lt;/p&gt;</span><br><span class="line">  </span><br><span class="line">     &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span><br><span class="line">       &lt;thead&gt;</span><br><span class="line">         &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">         &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">         &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">         &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">         &lt;th&gt;爱好&lt;/th&gt;</span><br><span class="line">       &lt;/thead&gt;</span><br><span class="line">       &lt;tbody&gt;</span><br><span class="line">         &#123;&#123;each students&#125;&#125;</span><br><span class="line">         &lt;tr&gt;</span><br><span class="line">           &lt;td&gt;&#123;&#123; $value.id &#125;&#125;&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;&#123;&#123; $value.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;&#123;&#123; $value.gender &#125;&#125;&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;&#123;&#123; $value.age &#125;&#125;&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;&#123;&#123; $value.hobbies &#125;&#125;&lt;/td&gt;</span><br><span class="line">         &lt;/tr&gt;</span><br><span class="line">         &#123;&#123;/each&#125;&#125;</span><br><span class="line">       &lt;/tbody&gt;</span><br><span class="line">     &lt;/table&gt;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure>            </div>          </details></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-2"><ul><li><p>渲染效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/addstudent.png"></li><li><p>路由规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加按钮点击跳转: get: 127.0.0.1:3031/students/new 渲染添加学生页</span></span><br><span class="line">router.get(<span class="string">&quot;/new&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.render(<span class="string">&quot;new.html&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>模板字符串</p><details ><summary> new-模板字符串 </summary>          <div class='content'>          <div class="container">      <h2 class="sub-header">添加学生信息</h2>      <!-- 第三个路由参数处理： post: /students/new -->      <form action="/students/new" method="post">        <div class="form-group">          <label for="exampleInputEmail"> 姓名 </label>          <input            type="text"            class="form-control"            id="exampleInputEmail"            name="name"          />        </div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">      &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt; 性别 &lt;/label&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;radio-inline&quot;</span>&gt;</span><br><span class="line">          &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span> id=<span class="string">&quot;inlineRadio1&quot;</span> value=<span class="string">&quot;0&quot;</span> /&gt;男</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;radio-inline&quot;</span>&gt;</span><br><span class="line">          &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span> id=<span class="string">&quot;inlineRadio2&quot;</span> value=<span class="string">&quot;1&quot;</span> /&gt;女</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">      &lt;label <span class="keyword">for</span>=<span class="string">&quot;age&quot;</span>&gt;年龄&lt;/label&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span> type=<span class="string">&quot;number&quot;</span> id=<span class="string">&quot;age&quot;</span> name=<span class="string">&quot;age&quot;</span> /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;checkout&quot;</span>&gt;</span><br><span class="line">      &lt;label&gt; 爱好 &lt;/label&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn&quot;</span>&gt;</span><br><span class="line">      &lt;button type=<span class="string">&quot;submit&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-info&quot;</span>&gt; 添加学员信息 &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>          </div>        </details></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-3"><details ><summary> 异步函数 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.save = <span class="function">(<span class="params">student, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  fs.readFile(dbpath, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> callback(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> students = <span class="built_in">JSON</span>.parse(data).students;</span><br><span class="line">      <span class="comment">// 处理 id: 获取数组的最后一个 再加 1</span></span><br><span class="line">      student.id = students[students.length - <span class="number">1</span>].id + <span class="number">1</span>;</span><br><span class="line">      <span class="comment">// 添加数据</span></span><br><span class="line">      students.push(student);</span><br><span class="line">      <span class="comment">// 把对象数据转换为字符串</span></span><br><span class="line">      <span class="keyword">let</span> result = <span class="built_in">JSON</span>.stringify(&#123; <span class="attr">students</span>: students &#125;);</span><br><span class="line">      <span class="comment">// 把字符串保存到文件中</span></span><br><span class="line">      fs.writeFile(dbpath, result, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="comment">// 错误 就返回错误对象</span></span><br><span class="line">          <span class="keyword">return</span> callback(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 成功就不报错 返回空对象</span></span><br><span class="line">          callback(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-4"><ul><li><p>效果预览 </p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210303154910327.gif"></li><li><p>路由规则</p><details ><summary> `post:127.0.0.1:3031/students/new` </summary>          <div class='content'>          <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理添加学生请求 post: 127.0.0.1:3031/students/new</span></span><br><span class="line">router.post(<span class="string">&quot;/new&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 获取表单数据 post: body-parser</span></span><br><span class="line">  <span class="keyword">let</span> formdata = req.body;</span><br><span class="line">  <span class="comment">// 2, 处理  将数据保存到 db.json 文件中</span></span><br><span class="line">  <span class="comment">// 预处理: 由于文件都是字符串非对象 所以只能先行读取 在追加 追加结束后再对文件进行写入操作</span></span><br><span class="line">  <span class="comment">// 具体操作: 1. 先读取出来 转成对象 2. 然后往对象中 push 数据 3. 然后把对象转换为 字符串 然后把字符串再次写入文件</span></span><br><span class="line">  <span class="comment">// 3. 发送响应 res.body</span></span><br><span class="line">  Student.save(formdata, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">&quot;&#123;&#x27;error&#x27;: &#x27;not found&#x27;&#125;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.redirect(<span class="string">&quot;/students&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>          </div>        </details></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-5"><ul><li><p>路由规则逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 处理删除请求</span></span><br><span class="line">router.get(<span class="string">&quot;/delete&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 获取要删除的 id</span></span><br><span class="line">  <span class="comment">// 2. 根据 id 执行删除操作</span></span><br><span class="line">  <span class="comment">// 3. 根据操作结果发送响应数据</span></span><br><span class="line">  Student.deleteById(req.query.id, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">&quot;Server error&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.redirect(<span class="string">&#x27;/students&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>异步函数</p><details ><summary> edit-异步函数 </summary>          <div class='content'>          <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.updateById = <span class="function">(<span class="params">student, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 如果要获取一个函数中异步操作的结果 则必须通过回调函数来获取</span></span><br><span class="line">  fs.readFile(dbpath, <span class="string">&quot;utf8&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> callback(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// find: 需要接受一个函数作为参数 作用: 当某个遍历项符合 item.id===student.id 条件的时候 find 会终止遍历 同时返回遍历结果</span></span><br><span class="line">      <span class="keyword">let</span> students = <span class="built_in">JSON</span>.parse(data).students;</span><br><span class="line"></span><br><span class="line">      student.id = <span class="built_in">parseInt</span>(student.id);</span><br><span class="line">      <span class="keyword">var</span> stu = students.find(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 用户传入 id</span></span><br><span class="line">        <span class="keyword">return</span> item.id === student.id</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 修改数据</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> student) &#123;</span><br><span class="line">        stu[key] = student[key];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 把对象转换为字符串</span></span><br><span class="line">      <span class="keyword">let</span> fileDate = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        students: students</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 把字符串保存到文件中</span></span><br><span class="line">      fs.writeFile(dbpath, fileDate, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="comment">// 错误就是把错误对象传递给它</span></span><br><span class="line">          <span class="keyword">return</span> callback(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 成功就没错 所以错误对象就是 null</span></span><br><span class="line">          <span class="keyword">return</span> callback(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>          </div>        </details></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-6"><ul><li><p>删除异步函数</p><details ><summary> delete-异步函数 </summary>          <div class='content'>          <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.deleteById = <span class="function">(<span class="params">id, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  fs.readFile(dbpath, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> callback(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> students = <span class="built_in">JSON</span>.parse(data).students;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// findIndex 方法专门用来根据条件查找元素的下标</span></span><br><span class="line">      <span class="keyword">let</span> deleteId = students.findIndex(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> item.id === <span class="built_in">parseInt</span>(id);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 根据下标从数组中删除对应的学生对象</span></span><br><span class="line">      students.splice(deleteId, <span class="number">1</span>);</span><br><span class="line">      <span class="comment">// 删除数据后进行重写</span></span><br><span class="line">      <span class="keyword">let</span> fileData = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        students: students</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 把字符串保存到文件中</span></span><br><span class="line">      fs.writeFile(dbpath, fileData, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="comment">// 错误就是把错误对象传递给它</span></span><br><span class="line">          <span class="keyword">return</span> callback(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 成功就是没错 所以把错误对象就是 null</span></span><br><span class="line">          callback(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>          </div>        </details></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="router-7"><p>  <a href=""></a></p>  <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210315002450372.gif" title="Node-增删改查"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-对象</title>
      <link href="2021/02/02/Javascript-%E5%AF%B9%E8%B1%A1/"/>
      <url>2021/02/02/Javascript-%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-对象"><a href="#Javascript-对象" class="headerlink" title="Javascript-对象"></a>Javascript-对象</h3><ul><li><p>对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象属于一种复合的数据类型,在对象中可以保存多个不同数据类型的属性</span><br></pre></td></tr></table></figure></li><li><p>对象的分类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">对象的分类：</span><br><span class="line">   - 由 ES 标准中定义的对象, 在任何的 ES 的实现中都可以使用</span><br><span class="line">   - 比如: <span class="built_in">Math</span> <span class="built_in">String</span> <span class="built_in">Number</span> <span class="built_in">Boolean</span> <span class="built_in">Function</span> <span class="built_in">Object</span>····</span><br><span class="line">宿主对象:</span><br><span class="line">    - 由 JS 的运行环境提供的对象,目前来讲主要指由浏览器提供的对象</span><br><span class="line">    - 比如: DOM BOM</span><br><span class="line"> 自定义对象:</span><br><span class="line">- 由开发人员自己创建的对象</span><br></pre></td></tr></table></figure></li><li><p>创建对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="keyword">new</span> 关键字调用函数是构造函数 <span class="title">constructor</span> 构造函数是专门用来创建对象的函数</span><br><span class="line"></span><br><span class="line">// 创建对象</span><br><span class="line"> <span class="title">var</span> <span class="title">obj</span> = <span class="title">new</span> <span class="title">Object</span>(<span class="params"></span>);</span><br></pre></td></tr></table></figure></li><li><p>对象的基本操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向对象中添加属性</span></span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line"></span><br><span class="line">对象.属性名 = 属性值;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取对象的值</span></span><br><span class="line">对象.属性名</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改属性值</span></span><br><span class="line">对象.属性名 = 新值;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除对象的属性</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> 对象.属性名</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>字面量定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objs = &#123;</span><br><span class="line">          name: <span class="string">&#x27;name-value&#x27;</span>,</span><br><span class="line">          age: <span class="number">10</span>,</span><br><span class="line">          add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              alert(<span class="number">1</span>)</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="工厂创建对象"><a href="#工厂创建对象" class="headerlink" title="工厂创建对象"></a>工厂创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createDog</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    obj.name = name;</span><br><span class="line">    obj.age = age;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> dog1 = createDog(<span class="string">&#x27;xiaohuang&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(dog1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">构造函数就是一个普通的函数m创建方式和普通函数没有区别</span><br><span class="line"></span><br><span class="line">不同的是构造函数习惯上首字母大写</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> per = <span class="keyword">new</span> Persopn();</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>构造函数的执行过程<ol><li> 立刻创建一个新的对象</li><li> 将创建的对象设置为函数中 this</li><li> 逐行执行函数中的代码</li><li> 将新建的对象作为返回值返回</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age, gender</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">this</span>.name = name;</span><br><span class="line">          <span class="built_in">this</span>.age = age;</span><br><span class="line">          <span class="built_in">this</span>.gender = gender;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;this: &#x27;</span>, <span class="built_in">this</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> per = <span class="keyword">new</span> Person(<span class="string">&#x27;name&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;gender&#x27;</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(per);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/this.png"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">使用 <span class="keyword">instanceof</span> 可以检查对象是否是一个类的实例</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line"></span><br><span class="line">对象 <span class="keyword">instanceof</span> 构造函数</span><br><span class="line"><span class="built_in">console</span>.log(per <span class="keyword">instanceof</span> Person) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">使用同一个构造函数的创建的对象,我们称为一类对象,也将一个构造函数称为一个类 通过一个构造函数创建的对象m称为该类的实例</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="this-的情况"><a href="#this-的情况" class="headerlink" title="this 的情况"></a>this 的情况</h3><ol><li>当以函数的形式调用时，<code>this</code> 就是<code>window</code></li><li> 当以方法形式调用时m谁调用方法 <code>this</code>就是谁</li><li> 当以构造函数的形式调用时，<code>this</code>就是新创建的那个对象</li></ol><h3 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">我们创建的每一个函数，解析器都会向函数中添加一个属性 prototype </span><br><span class="line"></span><br><span class="line">这个属性对应着一个对象，这个对象就是我们所谓的原型对象</span><br><span class="line"></span><br><span class="line">如果函数作为普通函数调用 prototype 没有任何作用</span><br><span class="line"></span><br><span class="line">当函数以构造函数的形式调用时,我们可以通过 __proto__ 来访问该属性</span><br><span class="line"></span><br><span class="line">原型对象就相当于一个公共区域m所有同一个类的实例都可以访问到这个原型对象，我们就可以将对象中共有的内容,统一设置到原型对象中</span><br><span class="line"></span><br><span class="line">当我们访问对象的一个属性或方法时,它会现在对象自身中寻找，如果有则直接使用，如果没有则会去原型对象中寻找,如果找到则直接使用。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canvas使用</title>
      <link href="2021/02/02/Canvas%E4%BD%BF%E7%94%A8/"/>
      <url>2021/02/02/Canvas%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h3><h4 id="Canvas-的简介"><a href="#Canvas-的简介" class="headerlink" title="Canvas 的简介"></a>Canvas 的简介</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">是HTML5提供的一种新标签, ie9才开始支持的，Canvas是一个矩形区域的画布，可以用 JS 控制每一个像素在上面绘画。</span><br><span class="line">canvas 标签使用 JavaScript 在网页上绘制图像，本身不具备绘图功能。canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</span><br></pre></td></tr></table></figure><h4 id="Canvas-的基础使用"><a href="#Canvas-的基础使用" class="headerlink" title="Canvas 的基础使用"></a>Canvas 的基础使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;tutorial&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span>&gt;</span></span><br><span class="line">    当前的浏览器版本不支持,请升级浏览起器</span><br><span class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 获取画布</span></span><br><span class="line">      <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tutorial&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取上下文,上下文有两个 2d 的上下文和 3d 的上下文</span></span><br><span class="line">      <span class="comment">// 所有的图像绘制都是通过 ctx 属性或者 是方法进行设置的，和 canvas 标签没有关系</span></span><br><span class="line">      <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">      <span class="comment">// 设置颜色</span></span><br><span class="line">      ctx.fillStyle = <span class="string">&quot;green&quot;</span>;</span><br><span class="line">      <span class="comment">// 绘制正方形 x y width height</span></span><br><span class="line">      ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>); </span><br></pre></td></tr></table></figure><h4 id="Canvas-像素化"><a href="#Canvas-像素化" class="headerlink" title="Canvas 像素化"></a>Canvas 像素化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们使用 canvas 绘制了一个图形,一旦绘制成功了,canvas 就像素化了它们。</span><br></pre></td></tr></table></figure><h4 id="Canvas-的动画思想"><a href="#Canvas-的动画思想" class="headerlink" title="Canvas 的动画思想"></a>Canvas 的动画思想</h4><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/canvas-move.gif" width="600"></li><li><p>实例源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取画布</span></span><br><span class="line">       <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tutorial&#x27;</span>);</span><br><span class="line">       <span class="comment">// 获取上下文,上下文有两个 2d 的上下文和 3d 的上下文</span></span><br><span class="line">       <span class="comment">// 所有的图像绘制都是通过 ctx 属性或者 是方法进行设置的，和 canvas 标签没有关系</span></span><br><span class="line">       <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">       <span class="comment">// 设置颜色</span></span><br><span class="line">       ctx.fillStyle = <span class="string">&quot;green&quot;</span>;</span><br><span class="line">       <span class="comment">// 绘制正方形</span></span><br><span class="line">       <span class="comment">// ctx.fillRect(100, 100, 100, 100);</span></span><br><span class="line">       <span class="comment">// 信号量</span></span><br><span class="line">       <span class="keyword">var</span> left = <span class="number">100</span>;</span><br><span class="line">       <span class="comment">// 动画过程</span></span><br><span class="line">       <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">// 清除画布 0,0 代表从什么位置开始清除 600 600 代表清除的宽度和高度</span></span><br><span class="line">           ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">600</span>, <span class="number">600</span>);</span><br><span class="line">           <span class="comment">// 更新信号量</span></span><br><span class="line">           left++;</span><br><span class="line">           <span class="comment">// 重新绘制</span></span><br><span class="line">           ctx.fillRect(left, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">       &#125;, <span class="number">5</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="Canvas-填充和绘制"><a href="#Canvas-填充和绘制" class="headerlink" title="Canvas 填充和绘制"></a>Canvas 填充和绘制</h4><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/canvas.png"></li><li><p>填充</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ctx.fillStyle = <span class="string">&#x27;color-value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ctx.fillRect(x,y,width,height);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>绘制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ctx.strokeStyle = <span class="string">&#x27;color-value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ctx.strokeRect(x,y,width,hieght);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>清除画布内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctx.clearRect(x,y,canvas-width,canvas-height);</span><br></pre></td></tr></table></figure></li><li><p>具体实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">       &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt; 填充矩形 &lt;/button&gt;</span><br><span class="line">       &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt; 绘制矩形边框 &lt;/button&gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btn3&quot;</span>&gt; 清除 canvas 画布内容 &lt;/button&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;canvas id=<span class="string">&quot;mycanvas&quot;</span> width=<span class="string">&quot;600&quot;</span> height=<span class="string">&quot;600&quot;</span>&gt;</span><br><span class="line">       当前浏览器不支持 canvas,请升级浏览器后再浏览</span><br><span class="line">   &lt;/canvas&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;mycanvas&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取 btn </span></span><br><span class="line">      <span class="keyword">var</span> btn1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn1&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> btn2 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn2&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> btn3 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn3&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 获取上下文</span></span><br><span class="line">      <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">      btn1.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 设置填充颜色</span></span><br><span class="line">          ctx.fillStyle = <span class="string">&#x27;purple&#x27;</span>;</span><br><span class="line">          <span class="comment">// 设置填充</span></span><br><span class="line">          ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      btn2.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 绘制边框颜色</span></span><br><span class="line">          ctx.strokeStyle = <span class="string">&#x27;purple&#x27;</span>;</span><br><span class="line">          <span class="comment">// 绘制正方形</span></span><br><span class="line">          ctx.strokeRect(<span class="number">300</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      btn3.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 清除画布内容</span></span><br><span class="line">              ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height);</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h4 id="Canvas-绘制路径"><a href="#Canvas-绘制路径" class="headerlink" title="Canvas 绘制路径"></a>Canvas 绘制路径</h4><ul><li><p>作用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">绘制路径作用是为了设置一个不规则的多边形状态</span><br></pre></td></tr></table></figure></li><li><p>步骤</p><ol><li>设置路径的起点</li><li> 使用绘制命令画出路径</li><li> 封闭路径</li><li> 填充或者绘制已经封闭路径的状态</li></ol><ul><li><p>实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;mycanvas&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">      <span class="comment">// 创建一个路径</span></span><br><span class="line">      ctx.beginPath();</span><br><span class="line">      <span class="comment">// 移动绘制点</span></span><br><span class="line">      ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">      <span class="comment">// 描述行进路径</span></span><br><span class="line">      ctx.lineTo(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">      ctx.lineTo(<span class="number">400</span>, <span class="number">180</span>);</span><br><span class="line">      ctx.lineTo(<span class="number">380</span>, <span class="number">50</span>);</span><br><span class="line">      <span class="comment">// 封闭路径</span></span><br><span class="line">      ctx.closePath();</span><br><span class="line">      <span class="comment">// 绘制不规则的图形</span></span><br><span class="line">      ctx.strokeStyle = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">      <span class="comment">// 没有 Rect 代表绘制 --&gt; 描边</span></span><br><span class="line">      ctx.stroke();  <span class="comment">// 通过线条来绘制图形轮廓</span></span><br><span class="line">    </span><br><span class="line"> <span class="comment">// 填充</span></span><br><span class="line">      ctx.fillStyle = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line">      ctx.fill(); <span class="comment">// 通过填充路径的内容区域生成实心的图形</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/moveline.png" width="600"></li></ul></li></ul><h4 id="圆弧绘制"><a href="#圆弧绘制" class="headerlink" title="圆弧绘制"></a>圆弧绘制</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;mycanvas&#x27;</span>);</span><br><span class="line">     <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">     <span class="comment">// 创建一个路径</span></span><br><span class="line">     ctx.beginPath();</span><br><span class="line">     <span class="comment">// ctx.arc(x,y,r,start,end,boolean(direction) )</span></span><br><span class="line">     ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">true</span>)</span><br><span class="line">     ctx.stroke();</span><br></pre></td></tr></table></figure><ul><li><p>参数解释</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 圆</span></span><br><span class="line">ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">true</span>)</span><br><span class="line"><span class="comment">// 圆</span></span><br><span class="line">ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">8</span> [大于 <span class="number">7</span> 都是圆], <span class="literal">false</span>)</span><br><span class="line"><span class="comment">// 圆</span></span><br><span class="line">ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><ol><li> 100  <code>canvas内坐标起始点</code></li><li> 50  圆的半径</li><li> 0 绘制起点</li><li> <code>2*Math.PI</code>  圆圈弧度</li><li><code>true</code> 逆时针</li></ol></li><li><p>效果图</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/circleCanvas.png"></li></ul><blockquote><p>0,1指的是开始和结束的位置,单位如果是数字,则代表一个圆弧的弧度(一个圆的弧度是<code>Math.PI * 2</code> ,约等于 7 个弧度) 所以如果为两个参数的差为 7 ，并且是 顺时针方向,则代表绘制一个圆</p></blockquote><h4 id="Canvas-小案例"><a href="#Canvas-小案例" class="headerlink" title="Canvas 小案例"></a>Canvas 小案例</h4>]]></content>
      
      
      <categories>
          
          <category> Canvas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-练习</title>
      <link href="2021/01/29/Javascript-%E7%BB%83%E4%B9%A0/"/>
      <url>2021/01/29/Javascript-%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-练习"><a href="#Javascript-练习" class="headerlink" title="Javascript-练习"></a>Javascript-练习</h3><ol><li><p>判断一个字符串中出现次数最多的字符m并统计次数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 出现次数最多的字符的变量</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="comment">// 出现的次数的变量</span></span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 原始字符串</span></span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;aaabbbcccaaabbbaaabbbbbbbbb&#x27;</span>;</span><br><span class="line">        <span class="comment">// 把字符串转换为数组</span></span><br><span class="line">        <span class="keyword">var</span> arr = str.split(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 将数组进行排序 把数组在转换为字符串</span></span><br><span class="line">        str = arr.sort().join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 正则进行匹配</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/(\w)\1+/g</span>;</span><br><span class="line">        str.replace(reg, <span class="function"><span class="keyword">function</span> (<span class="params">val, item</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (index &lt; val.length) &#123;</span><br><span class="line">                index = val.length;</span><br><span class="line">                value = item;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;出现的次数: &#x27;</span>+index,<span class="string">&#x27;出现的字符是: &#x27;</span>+value);</span><br></pre></td></tr></table></figure></li><li><p> 优先级,作用域</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 作用域链: 从内部(当前作用域)逐级向上查找</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 顺序、优先级</span><br><span class="line"></span><br><span class="line">变量 ==&gt; 函数 =&gt; 参数 ==&gt; 变量提升</span><br><span class="line"></span><br></pre></td></tr></table></figure>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">顺序、优先级:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;str&#x27;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="string">&#x27;fun1&#x27;</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(str); <span class="comment">// fun1</span></span><br><span class="line">        &#125;</span><br><span class="line">        fun1();</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> str1 = <span class="string">&#x27;str&#x27;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params">str1</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;a: &#x27;</span>, str1);</span><br><span class="line">str1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">str1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;b: str1 fun&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(str1);  <span class="comment">// function()&#123; return &#x27;b: str1 fun&#x27;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        fun1();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>输出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局作用域</span></span><br><span class="line"><span class="keyword">var</span> bar = <span class="number">1</span>;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 变量提升 var bar;</span></span><br><span class="line">          <span class="built_in">console</span>.log(bar); <span class="comment">// undefined</span></span><br><span class="line">          <span class="comment">// 局部变量</span></span><br><span class="line">          <span class="keyword">var</span> bar = <span class="number">2</span>;</span><br><span class="line">          <span class="built_in">console</span>.log(bar); <span class="comment">// 2 </span></span><br><span class="line">      &#125;</span><br><span class="line">      test();</span><br></pre></td></tr></table></figure></li><li><p>输出值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量 </span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> <span class="comment">// 函数</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">foo(); <span class="comment">// 1 变量 &gt; 函数 优先级</span></span><br></pre></td></tr></table></figure></li><li><p>输出值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1 级 作用域</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 2 级 作用域</span></span><br><span class="line">          <span class="keyword">var</span> b = <span class="number">1</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 3 级作用域</span></span><br><span class="line">              <span class="comment">// 变量提升 var b;</span></span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&#x27;undfined: &#x27;</span>, b); <span class="comment">// undifined</span></span><br><span class="line">              <span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&#x27;2: &#x27;</span>, b); <span class="comment">// 2</span></span><br><span class="line">          &#125;</span><br><span class="line">          a();</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;b2: &#x27;</span>,b); <span class="comment">// 1, 在 2 级 作用域下寻找变量 b </span></span><br><span class="line">      &#125;</span><br><span class="line">      c();</span><br></pre></td></tr></table></figure></li><li><p>匿名函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">     </span><br><span class="line">       <span class="keyword">var</span> name = <span class="string">&#x27;World&#x27;</span>;</span><br><span class="line">       (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">// 变量提升 var name; 内部存在 name 变量</span></span><br><span class="line">           <span class="keyword">if</span> (<span class="keyword">typeof</span> name === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">               <span class="keyword">var</span> name = <span class="string">&#x27;Jack&#x27;</span>;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;Goodbye&#x27;</span> + name);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;Hello &#x27;</span> + name);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)()</span><br><span class="line">     </span><br><span class="line"><span class="comment">//result:  Goodbye  Jack</span></span><br><span class="line">       </span><br></pre></td></tr></table></figure></li><li><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; true;</span><br><span class="line"> if (f &#x3D;&#x3D;&#x3D; true) &#123;</span><br><span class="line">     var a &#x3D; 10;</span><br><span class="line"> &#125;</span><br><span class="line"> function fn() &#123;</span><br><span class="line">     var b &#x3D; 20;</span><br><span class="line">     c &#x3D; 30;</span><br><span class="line"> &#125;</span><br><span class="line"> fn();</span><br><span class="line"> console.log(a); &#x2F;&#x2F; 10</span><br><span class="line"> console.log(b); &#x2F;&#x2F; undefined  不能拿到内部</span><br><span class="line"> console.log(c); &#x2F;&#x2F; undefined window.c30 &#x3D;&#x3D;  c &#x3D; 30</span><br></pre></td></tr></table></figure></li><li><p>解析<code>URL</code>为对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseQueryString</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">           <span class="keyword">var</span> urls = url.split(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">           <span class="built_in">console</span>.log(urls);</span><br><span class="line">           <span class="keyword">var</span> arr = urls[<span class="number">1</span>].split(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">           <span class="built_in">console</span>.log(arr);</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = arr.length; i &lt; len; i++) &#123;</span><br><span class="line">               <span class="keyword">var</span> brr = arr[i].split(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">               obj[brr[<span class="number">0</span>]] = brr[<span class="number">1</span>];</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> obj;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">console</span>.log(parseQueryString(<span class="string">&#x27;https://www.google.com/search?q=js&amp;oq=js&amp;aqs=chrome..69i57j69i61l3.564j0j4&amp;sourceid=chrome&amp;ie=UTF-8&#x27;</span>));</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-闭包</title>
      <link href="2021/01/29/JavaScript-%E9%97%AD%E5%8C%85/"/>
      <url>2021/01/29/JavaScript-%E9%97%AD%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h3 id="JavaScript-闭包"><a href="#JavaScript-闭包" class="headerlink" title="JavaScript-闭包"></a>JavaScript-闭包</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当内部函数被保存到外部时,将会生成闭包。闭包会导致原有作用域链不释放，造成内存泄露。</span><br><span class="line"></span><br><span class="line">Javascript高级程序设计指出: 闭包是指有权访问另一个函数作用域的变量的函数。</span><br><span class="line"></span><br><span class="line">Javascrip权威指南指出: 从技术的角度将,所有的 Javascript 函数都是闭包: 它们都是对象,它们都关联到作用域链。</span><br><span class="line"></span><br><span class="line">你不知道的Javascript中指出: 当函数可以记住并访问所在的词法作用域时,就产生了闭包,即使函数在当前词法作用域之外执行</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>打印<code>0,1···9</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> arr = [];</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(i); <span class="comment">// 0 1 2 3 4 5 ···</span></span><br><span class="line">              arr[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="built_in">console</span>.log(i,<span class="string">&quot; &quot;</span>); <span class="comment">// 10 10 10 ···</span></span><br><span class="line">                  <span class="built_in">document</span>.write(i + <span class="string">&#x27; &#x27;</span>); <span class="comment">// 10 10 ···</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> arr;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">var</span> myArr = test();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">          myArr[j](); <span class="comment">//  document.write(i + &#x27; &#x27;);</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li><li><p>词法作用域</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 词法作用域: 指函数在定义(或声明)它们的作用域里运行，而不是在执行(或调用)它们的作用域里运行</span></span><br><span class="line">      <span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(value);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> value = <span class="number">2</span>;</span><br><span class="line">          foo();</span><br><span class="line">      &#125;</span><br><span class="line">      bar(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></li><li><p>打印<code>0,1,2</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(i); <span class="comment">// 3 ···</span></span><br><span class="line">            &#125;, <span class="number">100</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> <span class="keyword">var</span> ==&gt; <span class="keyword">let</span> </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 立即执行函数</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(i, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;, <span class="number">100</span>)</span><br><span class="line">            &#125;(i))</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>打印 <code>LI</code>的索引</p><ul><li><p>方法一</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> item 4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击每个 li 显示对应的索引</span></span><br><span class="line">       <span class="keyword">var</span> _ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#ul&#x27;</span>);</span><br><span class="line">       <span class="comment">// 获取子节点</span></span><br><span class="line">       <span class="keyword">var</span> lis = _ul.children;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">           lis[i].setAttribute(<span class="string">&#x27;index&#x27;</span>, i)</span><br><span class="line">           lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="built_in">this</span>.getAttribute(<span class="string">&#x27;index&#x27;</span>));</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">        lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(i))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法三</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            lis[i].index = i;</span><br><span class="line">            lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.index);</span><br><span class="line">                alert(<span class="built_in">this</span>.index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闭包 </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask-Proj</title>
      <link href="2021/01/22/Flask-Proj/"/>
      <url>2021/01/22/Flask-Proj/</url>
      
        <content type="html"><![CDATA[<h3 id="Flask-Proj"><a href="#Flask-Proj" class="headerlink" title="Flask-Proj"></a>Flask-Proj</h3><h4 id="虚拟环境及包的安装"><a href="#虚拟环境及包的安装" class="headerlink" title="虚拟环境及包的安装"></a>虚拟环境及包的安装</h4><ul><li><p>创建虚拟环境</p></li><li><p>下载<code>Flask</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask==<span class="string">&#x27;版本号&#x27;</span> / pip install flask(自行选择版本号)</span><br></pre></td></tr></table></figure></li><li><p><code>Flask-Proj</code>开发</p></li><li><p><code>requirements</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python 项目中必须包含一个 requirements.txt 文件 ,用于记录所有依赖包及其精确的版本号,以便在新环境中进行部署操作</span><br></pre></td></tr></table></figure></li><li><p>在虚拟环境中使用以下命令将当前虚拟环境中的依赖包以版本号生成至文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure></li><li><p>当需要创建这个虚拟环境的完全副本,可以创建一个新的虚拟环境,并执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul><h3 id="项目-Flask-Proj"><a href="#项目-Flask-Proj" class="headerlink" title="项目(Flask_Proj)"></a>项目(Flask_Proj)</h3><h4 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h4><ul><li><p>运行</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/proj.png"></li><li><p>配置字符集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">app.py:</span><br><span class="line"><span class="comment"># 配置字符集</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>端口号修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.run(port=<span class="string">&#x27;端口号&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建 settings.py, 写入以下配置信息</span></span><br><span class="line"></span><br><span class="line">ENV = <span class="string">&#x27;development&#x27;</span> <span class="comment"># 开发环境</span></span><br><span class="line">DEBUG = <span class="literal">True</span> <span class="comment"># 开启 debug 模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 app 导入</span></span><br><span class="line"><span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 app 定义下写如下信息</span></span><br><span class="line">app.config.from_object(settings)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>终端启动方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python/python3 app.py</span><br></pre></td></tr></table></figure></li><li><p>配置信息无效可通过图像化界面开启<code>DEBUG</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/debug.png" width="600"></li><li><p>修改后</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/settingsDebug.png" width="600"></li></ul><h4 id="路由请求方式限定"><a href="#路由请求方式限定" class="headerlink" title="路由请求方式限定"></a>路由请求方式限定</h4><ul><li><p><code>POSTMAN</code> 进行测试</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/postman.png"></li><li><p>添加新的请求方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认支持 GET 请求</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods = [<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br></pre></td></tr></table></figure></li><li><p>路由的请求与相应</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">response 响应:</span><br><span class="line">200 - 请求成功</span><br><span class="line">404 - 请求的资源(网页等)不存在</span><br><span class="line">500 - 内部服务器错误</span><br><span class="line">302 - 重定向</span><br><span class="line">301 - 资源(网页等)被永久转移到其他 URL</span><br></pre></td></tr></table></figure></li><li><p><code>Flask</code>路由和变量规则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路由 route</span></span><br><span class="line">这个装饰器其实就是将 rule 字符串跟视图函数进行了数据绑定,通过 add_url_rule() 实现绑定</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等效写法</span></span><br><span class="line"><span class="comment"># ------------------- 装饰器 ------------------------------</span></span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods = [<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"> <span class="comment"># -------------------- add_url_rule() -------------------</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;&lt;font color=&quot;red&quot;&gt;index Text&lt;/font&gt;&lt;/h1&gt;&#x27;</span></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/index&#x27;</span>, view_func = index)</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/add_url_rule.png"><ul><li> 路由的变量规则</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过把 URL 的一部分标记为 &lt;variable_name&gt; 就可以在 URL 中添加变量。标记的 部分会作为关键字参数传递给函数。通过使用 &lt;converter:variable_name&gt; ，可以 选择性的加上一个转换器，为变量指定规则。</span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认 str</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getValue/&lt;key&gt;&#x27;</span></span>) </span><span class="comment"># 默认 str 不需要添加数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getValue</span>(<span class="params">key</span>):</span></span><br><span class="line">    <span class="keyword">return</span> data.get(key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># int</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># int 类型</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/add/&lt;int:num&gt;&#x27;</span></span>)  </span><span class="comment"># 默认 str 不需要添加数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">num</span>):</span></span><br><span class="line">    result = num + <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>转换器类型：</p><table><thead><tr><th><code>string</code></th><th>（缺省值） 接受任何不包含斜杠的文本</th></tr></thead><tbody><tr><td><code>int</code></td><td>接受正整数</td></tr><tr><td><code>float</code></td><td>接受正浮点数</td></tr><tr><td><code>path</code></td><td>类似 <code>string</code> ，但可以包含斜杠</td></tr><tr><td><code>uuid</code></td><td>接受 UUID 字符串</td></tr></tbody></table></li><li><p>路由的斜杠问题（唯一的 <code>URL</code> 问题）</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">‘/index/’ </span><br><span class="line"></span><br><span class="line">路由中没有斜杠,浏览器访问会报错</span><br><span class="line"></span><br><span class="line">路由中有斜杠,访问时没有则会自动重定向</span><br></pre></td></tr></table></figure></li><li><p><code>return</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> 后面返回的字符串其实也是做了一个 response 对象的封装。最后的返回结果还是 response 对象。</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Jinja2-模板引擎"><a href="#Jinja2-模板引擎" class="headerlink" title="Jinja2 模板引擎"></a>Jinja2 模板引擎</h3><h4 id="渲染模板函数"><a href="#渲染模板函数" class="headerlink" title="渲染模板函数"></a>渲染模板函数</h4><ol><li><p><code>Flask</code> 提供的 <code>render_template</code>函数封装了该模板引擎</p></li><li><p> <code>render_template</code> 函数的第一个参数是模板的文件名,后面的参数都是键值对,表示模板中变量对应的真实值。</p></li></ol>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 render_template</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 render_template</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Jinja2.png" width="600"><ol start="3"><li><p>变量代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 注释语法 #&#125;</span><br><span class="line">&#123;&#123; value1 &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 通常,模板中使用的变量名和要传递的数据的变量名保持一致。 #&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/jinjaStr.png" width="600"></li><li><p>控制代码块</p><ul><li><p><code>for</code>循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for play in my_list %&#125;</span><br><span class="line">    &lt;h1&gt; &#123;&#123; play &#125;&#125; &lt;&#x2F;h1&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/forjinja.png"></li><li><p><code>if</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if num&gt;3 %&#125;</span><br><span class="line">&#123;&#123; num&#125; &#125;&#125;</span><br><span class="line">&#123;% endif %&#125; </span><br></pre></td></tr></table></figure></li></ul></li><li><p> 内建过滤器</p></li></ol><ul><li><p>含义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">过滤器:</span><br><span class="line"></span><br><span class="line">过滤器的本质就是函数,有时候我们不仅仅要输出变量的值,我们还需要改变变量的显示甚至格式化,运算等等，而在模板中是不能直接</span><br><span class="line"></span><br><span class="line">调用 Python 中的某些方法m那么就用到了过滤器。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">变量名 | 过滤器</span><br><span class="line"></span><br><span class="line">&#123;&#123; variable | filter_name(*args) &#125;&#125; </span><br><span class="line"></span><br><span class="line">&#123;# 如果没有任何参数传递给过滤器,则可以省略括号 #&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; variable | filter_name &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 链式调用 #&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; variable | filter_name1 | filter_name2 | ··· &#125;&#125;</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;BV17W41177oE?p&#x3D;14</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li><p>自定义过滤器</p><ul><li><p>方法一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 自定义过滤器 本质是函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_str</span>(<span class="params">value</span>):</span></span><br><span class="line">    value = value.replace(<span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;我被替换了···&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> value.strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 过滤器</span></span><br><span class="line">app.add_template_filter(replace_str, <span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用过滤器 </span></span><br><span class="line"></span><br><span class="line">&lt;p&gt;原格式: &#123;&#123; msg &#125;&#125; &lt;/p&gt;</span><br><span class="line">&lt;p&gt; 过滤器: &lt;font color=&quot;red&quot;&gt;&#123;&#123; msg|replace &#125;&#125; &lt;/font&gt; &lt;/p&gt;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>方法二(装饰器)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.template_filter(<span class="params"><span class="string">&#x27;listreverse&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse_filter</span>(<span class="params">li</span>):</span></span><br><span class="line">    temp_li = <span class="built_in">list</span>(li)</span><br><span class="line">    li = temp_li.reverse()</span><br><span class="line">    <span class="keyword">return</span> temp_li</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/filter.png"></li></ul></li></ol><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><ul><li><p><code>Flask-Response</code> 对象</p></li><li><p><code>Flask-Resquest</code> 对象</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">requests 对象 对象可以访问属性,也可以调用方法</span><br><span class="line"></span><br><span class="line">request.args.get(&#x27;key&#x27;) --&gt; get 请求</span><br><span class="line"></span><br><span class="line">request.form --&gt; post 请求</span><br></pre></td></tr></table></figure></li></ul><h3 id="Web-表单"><a href="#Web-表单" class="headerlink" title="Web 表单"></a>Web 表单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 Flask 中,为了处理 web 表单,我们一般使用 Flask-WTF 扩展,它封装了 WTForms,并且它有验证表单数据的功能。</span><br></pre></td></tr></table></figure><ul><li><p>表单验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/reigster&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reigster</span>():</span></span><br><span class="line">    <span class="comment"># 获取请求方式</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="comment"># 获取请求参数</span></span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)  <span class="comment"># 获取表单提交的用户名</span></span><br><span class="line">        password = request.form.get(<span class="string">&#x27;password&#x27;</span>)  <span class="comment"># 获取表单提交的密码</span></span><br><span class="line">        repassword = request.form.get(<span class="string">&#x27;repassword&#x27;</span>)  <span class="comment"># 获取表单提交的密码</span></span><br><span class="line">        print(<span class="string">&#x27;&#x27;&#x27; </span></span><br><span class="line"><span class="string">            用户名: &#123;&#125;</span></span><br><span class="line"><span class="string">            密码: &#123;&#125;</span></span><br><span class="line"><span class="string">            重复输入: &#123;&#125;</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(username, password, repassword))</span><br><span class="line">        <span class="comment"># 判断参数是否填写 &amp; 密码是否相同</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">all</span>([username, password, repassword]):</span><br><span class="line">            print(<span class="string">&#x27;参数不完整&#x27;</span>)</span><br><span class="line">            flash(<span class="string">u&#x27;参数不完整&#x27;</span>)</span><br><span class="line">        <span class="comment"># 判断密码是否相同 不相同输入密码不一致</span></span><br><span class="line">        <span class="keyword">elif</span> password != repassword:</span><br><span class="line">            print(<span class="string">&#x27;两次输入不一致&#x27;</span>)</span><br><span class="line">            flash(<span class="string">u&#x27;两次输入不一致&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;s&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>闪现消息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 消息闪现秘钥</span></span><br><span class="line">app.secret_key = <span class="string">&#x27;flask&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># u 解决编码问题</span></span><br><span class="line">flash(<span class="string">u&#x27;message-info&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历 flash-message </span></span><br><span class="line">  &#123;% <span class="keyword">for</span> message <span class="keyword">in</span> get_flashed_messages() %&#125;</span><br><span class="line">        &#123;&#123; message &#125;&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></li><li><p>重定向</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redirect 源码 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redirect</span>(<span class="params">location, code=<span class="number">302</span>, Response=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Returns a response object (a WSGI application) that, if called,</span></span><br><span class="line"><span class="string">    redirects the client to the target location. Supported codes are</span></span><br><span class="line"><span class="string">    301, 302, 303, 305, 307, and 308. 300 is not supported because</span></span><br><span class="line"><span class="string">    it&#x27;s not a real redirect and 304 because it&#x27;s the answer for a</span></span><br><span class="line"><span class="string">    request with a request with defined If-Modified-Since headers.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .. versionadded:: 0.6</span></span><br><span class="line"><span class="string">       The location can now be a unicode string that is encoded using</span></span><br><span class="line"><span class="string">       the :func:`iri_to_uri` function.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .. versionadded:: 0.10</span></span><br><span class="line"><span class="string">        The class used for the Response object can now be passed in.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param location: the location the response should redirect to.</span></span><br><span class="line"><span class="string">    :param code: the redirect status code. defaults to 302.</span></span><br><span class="line"><span class="string">    :param class Response: a Response class to use when instantiating a</span></span><br><span class="line"><span class="string">        response. The default is :class:`werkzeug.wrappers.Response` if</span></span><br><span class="line"><span class="string">        unspecified.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">有两次响应:</span><br><span class="line">    </span><br><span class="line">    <span class="number">1.</span> <span class="number">302</span> 状态码 + location</span><br><span class="line">    </span><br><span class="line">    <span class="number">2.</span> 返回location 请求地址内容</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>路径反向解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">endpoint = <span class="string">&#x27;代号/小名&#x27;</span></span><br><span class="line"></span><br><span class="line">url_for()</span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>], endpoint = <span class="string">&#x27;f&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Flask-WTF 实现表单</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flaskWtf&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flaskWtf</span>():</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;f&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>Flask-WTF</code></p><ul><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-wtf</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表单所需</span></span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, PasswordField, SubmitField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义登录类 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span>(<span class="params">FlaskForm</span>):</span></span><br><span class="line">    username = StringField(<span class="string">u&#x27;用户名&#x27;</span>)</span><br><span class="line">    password = PasswordField(<span class="string">u&#x27;密码&#x27;</span>)</span><br><span class="line">    repassword = PasswordField(<span class="string">u&#x27;确认密码&#x27;</span>)</span><br><span class="line">    submit = SubmitField(<span class="string">u&#x27;提交&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods=[<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">login = LoginForm()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>,login=login)</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="模板-复用"><a href="#模板-复用" class="headerlink" title="模板: 复用"></a>模板: 复用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">模板继承 *</span><br><span class="line">include</span><br><span class="line">宏</span><br></pre></td></tr></table></figure><ul><li><p>需要模板继承的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 多个模板具有完全相同的顶部和底部</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 多个模板具有相同的模板内容,但是内容中部分不一样</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 多个模板具有完全相同的模板内容</span><br><span class="line"></span><br><span class="line">标签:</span><br><span class="line"></span><br><span class="line">    &#123;% block 名字 %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">继承:</span><br><span class="line">    </span><br><span class="line">    &#123;% extends <span class="string">&#x27;html-name.html&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt; &#123;% block title %&#125;base&#123;% endblock %&#125;&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        &#123;<span class="comment">#       #&#125;</span></span><br><span class="line">        <span class="comment">#div1 &#123;</span></span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#div1 ul &#123;</span></span><br><span class="line">            <span class="built_in">list</span>-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#div1 ul li &#123;</span></span><br><span class="line">            <span class="built_in">float</span>: left;</span><br><span class="line">            padding-right: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#div2 &#123;</span></span><br><span class="line">            height: 600px;</span><br><span class="line">            font-size: 60px;</span><br><span class="line">            line-height: 600px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#div3 &#123;</span></span><br><span class="line">            height: 100px;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            color: <span class="comment">#fff;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            background-color: lightseagreen;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &#123;% block mycss %&#125;&#123;% endblock %&#125;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;首页&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;关于&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;友情链接&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &#123;<span class="comment">#    &#123;% block div1 %&#125;&#123;% endblock %&#125; #&#125;</span></span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><br><span class="line">    &#123;% block div2 %&#125;</span><br><span class="line">        我是中间部分</span><br><span class="line">        &lt;button&gt; 点击&lt;/button&gt;</span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><br><span class="line">    &#123;% block div3 %&#125;</span><br><span class="line">        版权信息</span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var btn = document.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    btn.onclick = function ()&#123;</span><br><span class="line">        alert(<span class="string">&#x27;点击了···&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% block myscript %&#125;&#123;% endblock %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>模板继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># 继承 base.html #&#125;</span></span><br><span class="line">&#123;% extends <span class="string">&#x27;base.html&#x27;</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># 修改title #&#125;</span></span><br><span class="line">&#123;% block title %&#125;</span><br><span class="line">    useBase</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># css 预留 #&#125;</span></span><br><span class="line">&#123;% block mycss %&#125;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#div2 &#123;</span></span><br><span class="line">            background-color: deeppink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="comment"># js 事件 #&#125;</span></span><br><span class="line">&#123;% block myscript %&#125;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        console.log(btn)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/exteds.png"></li><li><p>修改局部内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;<span class="comment"># div2 修改内容 #&#125;</span></span><br><span class="line"></span><br><span class="line">&#123;% block div2 %&#125;</span><br><span class="line">    &lt;h1&gt; 修改后的内容 &lt;/h1&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/base.png"></li><li><p>外界资源引入方式</p><ul><li><p>方式一(不推荐)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;<span class="comment"># css 预留 #&#125;</span></span><br><span class="line">&#123;% block mycss %&#125;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#div2 &#123;</span></span><br><span class="line">            background-color: deeppink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    </span><br><span class="line">    &#123;<span class="comment"># 普通引入方式 #&#125;</span></span><br><span class="line">    </span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;../static/css/style.css&quot;</span> /&gt;</span><br><span class="line">    </span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>方式二(反向解析)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(app.url_map)  <span class="comment"># 存在该路由规则</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/url_map.png"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;<span class="comment"># css 预留 #&#125;</span></span><br><span class="line">&#123;% block mycss %&#125;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#div2 &#123;</span></span><br><span class="line">            background-color: deeppink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &#123;<span class="comment"># 反向解析引入 #&#125;</span></span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;,filename=&#x27;css/style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>js</code>外部资源引入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># js 事件 #&#125;</span></span><br><span class="line">&#123;% block myscript %&#125;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        console.log(btn)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    </span><br><span class="line">&#123;<span class="comment"># 反向解析 引入外部js #&#125;</span></span><br><span class="line">    &lt;script src=&quot;&#123;&#123; url_for(&#x27;static&#x27;,filename=&#x27;js/index.js&#x27;) &#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/jsBase.png"></li></ul></li><li><p>宏（<code>macro</code>）</p><ul><li><p>定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># 定义宏 #&#125;</span></span><br><span class="line">&#123;% macro fun-name(action,value=<span class="string">&#x27;默认值&#x27;</span>),method=<span class="string">&#x27;post&#x27;</span> %&#125;</span><br><span class="line">    statements</span><br><span class="line">&#123;% endmacro %&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 定义一个 form </span></span><br><span class="line">&#123;% macro form(action,value=<span class="string">&#x27;默认值&#x27;</span>),method=<span class="string">&#x27;post&#x27;</span> %&#125;</span><br><span class="line">    &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span><br><span class="line">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># 使用宏 #&#125;</span></span><br><span class="line"><span class="number">1.</span> 导入</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">import</span>  <span class="string">&#x27;maco/maco1.html&#x27;</span> <span class="keyword">as</span> 别名 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 应用</span><br><span class="line">   </span><br><span class="line">    &#123;&#123; 别名.fun-name(<span class="string">&#x27;/router&#x27;</span>,···) &#125;&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用 form</span></span><br><span class="line"> &#123;% <span class="keyword">import</span> <span class="string">&#x27;宏资源路径&#x27;</span> <span class="keyword">as</span> f %&#125;</span><br><span class="line"> &#123;&#123; f.form(<span class="string">&#x27;/index&#x27;</span>,value=<span class="string">&quot;注册&quot;</span>,method=<span class="string">&quot;post&quot;</span>) &#125;&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Flask-蓝图"><a href="#Flask-蓝图" class="headerlink" title="Flask-蓝图"></a>Flask-蓝图</h3><ul><li><p>拆解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入配置文件</span></span><br><span class="line"><span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入蓝图 对象</span></span><br><span class="line"><span class="keyword">from</span> apps.user.view <span class="keyword">import</span> user_bp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_app</span>():</span></span><br><span class="line">    app = Flask(__name__, template_folder = <span class="string">&#x27;../templates&#x27;</span>, static_folder = <span class="string">&#x27;../static&#x27;</span>)  <span class="comment"># app 是一个核心对象</span></span><br><span class="line">    app.config.from_object(settings)  <span class="comment"># 加载配置</span></span><br><span class="line">    <span class="comment"># 蓝图</span></span><br><span class="line">    <span class="comment"># 注册蓝图</span></span><br><span class="line">    app.register_blueprint(user_bp)  <span class="comment"># 将蓝图对象绑定到 app 上</span></span><br><span class="line">    print(app.url_map)</span><br><span class="line">    <span class="keyword">return</span> app</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>app.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> apps <span class="keyword">import</span> create_app</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = create_app()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(app.url_map)</span><br><span class="line">    app.run(port = <span class="number">9000</span>)  <span class="comment"># 设置端口号最好在启动之前设置</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>Flask-script</code></p><ul><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-script</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_script <span class="keyword">import</span> Manager</span><br><span class="line">manager = Manager(app=app)</span><br><span class="line"></span><br><span class="line">manager.run()</span><br></pre></td></tr></table></figure></li><li><p>启动方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python/python3 app.py runserver [-h <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> -p new-port][可选参数]</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="持久化存储"><a href="#持久化存储" class="headerlink" title="持久化存储"></a>持久化存储</h3><ol><li><p><code>pymysql</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure></li><li><p><code>Flask-SQLAlchemy</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Flask-SQLAlchemy 是一个 Flask 扩展,简化了在 Flask 应用中使用 SQLAlchemy 的操作,SQLAlchemy 是一个强大的关系型数据库</span><br><span class="line"></span><br><span class="line">框架,支持多种数据库后台。SQLAlchemy 提供了高层 ORM，也提供了使用数据库原生SQL 的底层功能。</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-sqlalchemy <span class="comment"># 实现 ORM 映射</span></span><br></pre></td></tr></table></figure></li><li><p>映射相关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-migrate <span class="comment"># 发布命令的工具</span></span><br></pre></td></tr></table></figure></li><li><p>配置数据库连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line"><span class="comment"># mysql+pymysql://user:password@hostip:port/databasename</span></span><br><span class="line">SQLALCHEMY_DATABASE_URI=<span class="string">&#x27;mysql://root:root@127.0.0.1:3306/student&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红宝书阅读</title>
      <link href="2021/01/20/%E7%BA%A2%E5%AE%9D%E4%B9%A6%E9%98%85%E8%AF%BB/"/>
      <url>2021/01/20/%E7%BA%A2%E5%AE%9D%E4%B9%A6%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="红宝书（JavaScript高级程序设计-第四版）"><a href="#红宝书（JavaScript高级程序设计-第四版）" class="headerlink" title="红宝书（JavaScript高级程序设计-第四版）"></a>红宝书（JavaScript高级程序设计-第四版）</h3><h4 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h4><ul><li><p>什么是<code>Javascript</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">维基百科: JavaScript（通常缩写为JS）是一种高级的、解释型的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象程序设计，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Javascript 是一门用来与网页交互的脚本语言。</span><br></pre></td></tr></table></figure></li><li><p><code>Javascript</code>实现</p><ol><li><p><code>ECMAScript</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由 ECMA-<span class="number">262</span> 定义并提供核心功能。</span><br></pre></td></tr></table></figure></li><li><p><code>DOM</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文档对象模型(DOM，Document <span class="built_in">Object</span> Model) 是一个应用编程接口(API)，用于在 HTML 中使用扩展的 XML. DOM 将整个页面抽象为一组分层节点。</span><br></pre></td></tr></table></figure></li><li><p>一组分层节点</p></li><li><p><code>BOM</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器对象模型(BOM) API, 用于支持访问和操作浏览器的窗口。</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="第二章-HTML-中的-JavaScript"><a href="#第二章-HTML-中的-JavaScript" class="headerlink" title="第二章 HTML 中的 JavaScript"></a>第二章 HTML 中的 JavaScript</h4><ul><li><p><code>script</code>元素(有 8 个属性)</p><ol><li><p><code>async</code>： 可选。表示应该立即开始下载脚本,但不能阻止其他页面动作,比如下载资源或等待其他脚本加载,只对外部脚本文件有效。（最好只有一个）</p></li><li><p><code>defer</code>： 可选。 表示脚本可以延迟到文档完全被解析和显示之后再执行。只对外部脚本文件有效。</p></li><li><p><code>integrity</code>： 可选。允许比对接受到的资源和制定加密签名以验证子资源完整性。如果接受到的资源的签名与这个指定的签名不匹配,则页面会报错,脚本不会执行。这个属性可以用于确保内容分发网络不会提供恶意内容。</p></li></ol></li><li><p>XHTML</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可扩展超文本标记语言,是将 HTML 作为 XML 的应用重新包装的结果。</span><br></pre></td></tr></table></figure></li></ul><h4 id="第三章-语言基础"><a href="#第三章-语言基础" class="headerlink" title="第三章  语言基础"></a>第三章  语言基础</h4><ul><li><p>区分大小写</p></li><li><p>标识符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标识符: 就是变量,函数,属性或参数的名称</span><br></pre></td></tr></table></figure><ol><li><p>第一个字符必须是一个字母,下划线或美元符号。</p></li><li><p>剩下的其他字符可以是扩展 ASCII 中的字母,也可以是 <code>Unicode</code>的字母字符。</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意: 关键字、保留字、<span class="literal">true</span>、<span class="literal">false</span>和<span class="literal">null</span>不能作为标识符。</span><br></pre></td></tr></table></figure></li><li><p>注释</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>严格模式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">严格模式是一种不同的 JavaScript 解析和执行模型，ECMAScript3 的一些不规范写法在这种模式下会被处理,对于不安全的活动抛出错误。</span><br></pre></td></tr></table></figure><ol><li><p>脚本开启严格模式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在脚本开头添加</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>单独函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">    &quot;use strict&quot;</span>;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分号结尾</span><br></pre></td></tr></table></figure></li><li><p>变量</p><ol><li><p><code>var</code>关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 作用域(函数作用域)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 声明提升: 提升就是把变量声明都拉到函数作用域的顶部。</span><br></pre></td></tr></table></figure></li><li><p><code>let</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 声明的范围是块作用域</span><br></pre></td></tr></table></figure></li><li><p><code>const</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">声明变量时必须同时初始化变量。</span><br></pre></td></tr></table></figure></li></ol></li><li><p>数据类型(6+1 )</p><ol><li><p>数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> 种简单的数据类型(也称原始类型)</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> Undefined </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> Null</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> <span class="built_in">Number</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> <span class="built_in">Symbol</span>(符号)</span><br><span class="line"></span><br><span class="line">还有一种复杂数据类型: <span class="built_in">Object</span></span><br></pre></td></tr></table></figure></li><li><p><code>typeof</code>操作符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">因为 ECMAScript 的类型是松散的m所以需要一种手段来确定任意变量的数据类型。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;undefined&quot;</span> 表示值为定义</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;boolean&quot;</span> 表示值为布尔值</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;string&quot;</span> 表示值为字符串</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;number&quot;</span> 表示值为数字</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;object&quot;</span> 表示值为对象(而不是函数)或 <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;function&quot;</span> 表示值为函数</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;symbol&quot;</span> 表示值为符号</span><br></pre></td></tr></table></figure></li><li><p>数值转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>()</span><br><span class="line"><span class="built_in">parseInt</span>()</span><br><span class="line"><span class="built_in">parseFloat</span>()</span><br></pre></td></tr></table></figure></li><li><p>字符串的特点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ECMAScript 中的字符串是不可变的,一旦创建,它们的值就不能在变. 要修改某个变量中的字符串值,必须先销毁原始的字符串,然后将包含新值得另一个字符串保存到该变量。</span><br></pre></td></tr></table></figure></li></ol></li><li><p>操作符</p><ol><li><p>一元操作符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只操作一个值的操作符叫一元操作符</span><br></pre></td></tr></table></figure></li><li><p>递增/递减操作符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++</span><br><span class="line">--</span><br></pre></td></tr></table></figure></li><li><p>相等操作符</p></li></ol><ul><li><p>等于和不等于</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">== (二等号)</span><br><span class="line">!=</span><br></pre></td></tr></table></figure></li><li><p>全等和不全等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">=== (三等号)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result1 = (<span class="string">&quot;55&quot;</span> == <span class="number">55</span>) <span class="comment">// true 转换后相等</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result2 = (<span class="string">&quot;55&quot;</span> === <span class="number">55</span>) <span class="comment">// false 不相等,因为数据类型不相同</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>for</code> 语句</p><ul><li><p><code>for-in</code>语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>-<span class="keyword">in</span> 语句是一种严格的迭代语句。用于枚举对象中的非符号键属性</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(propery <span class="keyword">in</span> expression) statement</span><br><span class="line"></span><br><span class="line">Eg.</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">const</span> propName <span class="keyword">in</span> <span class="built_in">window</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(propName)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>for-of</code>语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>-<span class="keyword">of</span> 语句是一种严格的迭代语句,用于遍历可迭代的元素。</span><br><span class="line"></span><br><span class="line">Eg.</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">const</span> el <span class="keyword">of</span> [<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>])&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(el);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>标签语句(暂不理解)</p></li><li><p><code>break</code> 和 <code>continue</code>语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span>; <span class="comment">// 立即退出循环,强制执行循环后的下一条语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">continue</span>; <span class="comment">// 立即退出循环，但会再次从循环顶部开始执行</span></span><br></pre></td></tr></table></figure></li><li><p><code>with</code>语句(咱不理解)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用途: 将代码作用域设置为特定的对象</span><br><span class="line"></span><br><span class="line">主要针对场景: 针对一个对象反复操作</span><br></pre></td></tr></table></figure></li><li><p><code>switch</code>语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression)&#123;</span><br><span class="line">    <span class="keyword">case</span> value1:</span><br><span class="line">        statement;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        ····</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    statement;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">函数使用 <span class="function"><span class="keyword">function</span> 关键字 声明</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params">arg0,arg1,···</span>)</span>&#123;</span></span><br><span class="line"><span class="function">    <span class="title">statement</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> css </tag>
            
            <tag> javascript </tag>
            
            <tag> Ajax </tag>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax-案例接口文档</title>
      <link href="2021/01/20/Ajax-%E6%A1%88%E4%BE%8B%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
      <url>2021/01/20/Ajax-%E6%A1%88%E4%BE%8B%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="Ajax-邮箱验证接口"><a href="#Ajax-邮箱验证接口" class="headerlink" title="Ajax-邮箱验证接口"></a>Ajax-邮箱验证接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">测试地址: http://localhost:3000</span><br><span class="line"></span><br><span class="line">请求参数类型: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="邮箱地址验证"><a href="#邮箱地址验证" class="headerlink" title="邮箱地址验证"></a>邮箱地址验证</h4><ul><li><p>简要描述</p></li><li><p>验证邮箱地址是否唯一,<code>3327511395@qq.com</code> 已经注册</p></li><li><p>请求地址</p><ul><li><code>/verifyEmailAsress</code></li></ul></li><li><p>请求方式</p><ul><li>GET</li></ul></li><li><p>参数</p><table><thead><tr><th align="center">参数名</th><th align="center">必须</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">email</td><td align="center">是</td><td align="center">string</td><td align="center">待验证邮箱地址</td></tr></tbody></table></li><li><p>返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> &#123;<span class="attr">message</span>: <span class="string">&#x27;邮箱地址已经注册过了,请更换其他邮箱地址&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>  &#123;<span class="attr">message</span>: <span class="string">&#x27;恭喜,邮箱地址可用&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="搜索框输入自动提示"><a href="#搜索框输入自动提示" class="headerlink" title="搜索框输入自动提示"></a>搜索框输入自动提示</h4><ul><li><p>简要描述</p><ul><li>根据用户在文本框中输入的关键字,匹配相关内容</li></ul></li><li><p>请求地址</p><ul><li><code>/searchAutoPrompt</code></li></ul></li><li><p>请求方式</p><ul><li><code>GET</code></li></ul></li><li><p>参数</p><table><thead><tr><th align="center">参数名</th><th align="center">必选</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">key</td><td align="center">是</td><td align="center">string</td><td align="center">用户输入关键字</td></tr></tbody></table></li><li><p>返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ </span><br><span class="line">    <span class="string">&#x27;abcde&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;abcedfg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;abc&#x27;</span>        </span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><h4 id="省市联动"><a href="#省市联动" class="headerlink" title="省市联动"></a>省市联动</h4><h5 id="获取省份信息"><a href="#获取省份信息" class="headerlink" title="获取省份信息"></a>获取省份信息</h5><ul><li><p>请求地址</p><ul><li><code>/province</code></li></ul></li><li><p>请求方式</p><ul><li><code>GET</code></li></ul></li><li><p>返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">&#x27;001&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;黑龙江省&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">&#x27;002&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;四川省&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">&#x27;003&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;河北省&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">&#x27;004&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;江苏省&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">        ]</span><br></pre></td></tr></table></figure></li></ul><h5 id="根据省份-ID-获取城市信息"><a href="#根据省份-ID-获取城市信息" class="headerlink" title="根据省份 ID 获取城市信息"></a>根据省份 ID 获取城市信息</h5><ul><li><p>请求地址</p><ul><li><code>/cities</code></li></ul></li><li><p>请求方式</p><ul><li><code>GET</code></li></ul></li><li><p>参数</p><table><thead><tr><th align="center">参数名</th><th align="center">必选</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">id</td><td align="center">是</td><td align="center">string</td><td align="center">省份id</td></tr></tbody></table></li><li><p>返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h5 id="根据城市-id-获取县城信息"><a href="#根据城市-id-获取县城信息" class="headerlink" title="根据城市 id 获取县城信息"></a>根据城市 id 获取县城信息</h5><ul><li><p>请求地址</p><ul><li><code>/area</code></li></ul></li><li><p>请求方式</p><ul><li><code>GET</code></li></ul></li><li><p>参数</p><table><thead><tr><th align="center">参数名</th><th align="center">必选</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">id</td><td align="center">是</td><td align="center">string</td><td align="center">城市id</td></tr></tbody></table></li><li><p>返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> 接口文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-面向对象编程</title>
      <link href="2021/01/18/Javascript-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
      <url>2021/01/18/Javascript-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-面向对象编程"><a href="#Javascript-面向对象编程" class="headerlink" title="Javascript-面向对象编程"></a>Javascript-面向对象编程</h3><h4 id="面向过程和面向对象的对比"><a href="#面向过程和面向对象的对比" class="headerlink" title="面向过程和面向对象的对比"></a>面向过程和面向对象的对比</h4><ul><li><p>面向过程</p><ul><li>优点: 性能比面向对象高,适合跟硬件联系很紧密的东西</li><li>缺点: 没有面向对象易维护,易复用,易扩展</li></ul></li><li><p>面向对象</p><ul><li>优点: 易维护,易复用,易扩展,由于面向对象有封装，继承,多态性的特性，可以设计出低耦合的系统,使系统更加灵活,更加易于维护</li><li>缺点: 性能比面向过程低</li></ul></li><li><p>对象是由属性和方法组成的</p><ul><li>属性: 事物的特征,在对象中用属性来表示(常用名词)</li><li>方法: 事物的行为,在对象中用方法来表示(常用动词)</li></ul></li></ul><h4 id="类-class"><a href="#类-class" class="headerlink" title="类(class)"></a>类(<code>class</code>)</h4><ul><li><p><code>类</code>抽象了对象的公共部分,它繁殖某一大类(class)</p></li><li><p><code>对象特指</code>某一个,通过实例化一个具体的对象</p></li><li><p>创建类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        1. 通过 class 关键字创建类,类名习惯性定义首字母大写</span></span><br><span class="line"><span class="comment">        2. 类里面有个 constructor 函数,可以接受传递过来的参数,同时返回实例对象</span></span><br><span class="line"><span class="comment">        3. constructor 函数只要 new 生成实例时,就会自动调用这个函数,如果我们不写这个函数,类也会自动生成这个函数</span></span><br><span class="line"><span class="comment">        4. 生成实例 new 不能省略</span></span><br><span class="line"><span class="comment">        5. 创建类m类名后面没有小括号,生成实例,类名后面加小括号,构造函数不需要加 function</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建类</span></span><br><span class="line">      <span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">          <span class="comment">// 构造函数</span></span><br><span class="line">          <span class="comment">/*</span></span><br><span class="line"><span class="comment">          constructor() 方法是类的构造函数(默认方法) 用于传递参数,返回实例对象,通过new 命令生成对象实例时,自动调用</span></span><br><span class="line"><span class="comment">          该方法,如果没有显示定义,类内部会自动给我们创建一个  constructor()</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">          <span class="function"><span class="title">constructor</span>(<span class="params">uname</span>)</span> &#123;</span><br><span class="line">              <span class="built_in">this</span>.uname = uname</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 利用类创建对象 new</span></span><br><span class="line">      <span class="keyword">var</span> bin = <span class="keyword">new</span> Star(<span class="string">&#x27;BIN-CODE&#x27;</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(bin);</span><br><span class="line">  </span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li><p>类中添加方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 1. 类里面的所有函数不需要写 function</span></span><br><span class="line"> <span class="comment">// 2. 多个函数方法之间不需要添加逗号分隔  </span></span><br><span class="line"><span class="comment">// 创建明星类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 构造函数</span></span><br><span class="line">            <span class="function"><span class="title">constructor</span>(<span class="params">uname, age</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.uname = uname;</span><br><span class="line">                <span class="built_in">this</span>.age = age;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="title">study</span>(<span class="params">song</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;2021.01.16·········&gt;: &#x27;</span> + <span class="built_in">this</span>.uname, <span class="string">&#x27;休息后在唱: &#x27;</span> + song);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="title">sleep</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;我要睡觉了·········&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> bin = <span class="keyword">new</span> Star(<span class="string">&#x27;Bin-Code&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(bin);</span><br><span class="line">        <span class="comment">// 类方法调用</span></span><br><span class="line">        bin.study(<span class="string">&#x27;时间过客&#x27;</span>);<span class="comment">//输出结果: 2021.01.16·········&gt;: Bin-Code 休息后在唱: 时间过客</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/javascriptClass.png"></li></ul></li></ul><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><ul><li><p>继承</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// super 关键字用于访问和调用对象父类上的函数,可以调用父类的构造函数,也可以调用父类的普通函数</span></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">          1. 继承中,如果实例化子类输出一个方法,先看子类有没有这个方法,如果有就先执行子类的</span></span><br><span class="line"><span class="comment">          2. 继承中,如果子类里面没有,就去查找父类有没有这个方法m如果有,就执行父类的这个方法(就近原则)</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="comment">// 父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">say</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;我是父类···&#x27;);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Father类&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">say</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;我是子类···&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实例化父类</span></span><br><span class="line"><span class="keyword">var</span> father = <span class="keyword">new</span> Father();</span><br><span class="line">father.say() <span class="comment">// 我是父类···</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 实例化子类</span></span><br><span class="line"><span class="keyword">var</span> son = <span class="keyword">new</span> Son();</span><br><span class="line">son.say() <span class="comment">// 我是子类···</span></span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cfat</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 类的继承 extends 关键字</span></span><br><span class="line">    <span class="function"><span class="title">say</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">super</span>.say() + <span class="string">&#x27;被继承了···&#x27;</span>); <span class="comment">// Father 类被继承了···</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> cc = <span class="keyword">new</span> Cfat();</span><br><span class="line">cc.say();</span><br></pre></td></tr></table></figure></li><li><p>子类扩展</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用 super 调用父类的构造函数</span></span><br><span class="line"><span class="comment">// super 必须在子类 this 之前调用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.x = x;</span><br><span class="line">                <span class="built_in">this</span>.y = y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="title">sum</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;求和结果是: &#x27;</span>, <span class="built_in">this</span>.x + <span class="built_in">this</span>.y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 继承父类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y</span>)</span> &#123;</span><br><span class="line">                <span class="comment">// 目的: 调用父类的加法函数</span></span><br><span class="line">                <span class="comment">// 利用 super 调用父类的构造函数</span></span><br><span class="line">                <span class="comment">// super 必须在子类 this 之前调用</span></span><br><span class="line">                <span class="built_in">super</span>(x, y);</span><br><span class="line">                <span class="built_in">this</span>.x = x;</span><br><span class="line">                <span class="built_in">this</span>.y = y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 子类扩展</span></span><br><span class="line">            <span class="function"><span class="title">mul</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;做差的结果: &#x27;</span>, <span class="built_in">this</span>.x - <span class="built_in">this</span>.y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> son = <span class="keyword">new</span> Son(<span class="number">6</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="comment">// 子类调用父类</span></span><br><span class="line">        son.sum();</span><br><span class="line">        <span class="comment">// 子类调用扩展方法</span></span><br><span class="line">        son.mul();</span><br></pre></td></tr></table></figure></li><li><p>今日<code>https://www.bilibili.com/video/BV1u7411573c?p=8</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Conda虚拟环境</title>
      <link href="2021/01/18/Python-Conda%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
      <url>2021/01/18/Python-Conda%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-Conda虚拟环境"><a href="#Python-Conda虚拟环境" class="headerlink" title="Python-Conda虚拟环境"></a>Python-Conda虚拟环境</h3><ul><li><p>创建虚拟环境</p><ul><li><p>默认位置</p><ul><li><p>查看当前环境有哪些虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟环境</span></span><br><span class="line">conda create -n ENV python==3.6(ENV 是新建虚拟环境名称)</span><br></pre></td></tr></table></figure></li><li><p>获取虚拟环境位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 进入 conda 安装位置</span></span><br><span class="line"><span class="built_in">where</span> conda</span><br><span class="line"><span class="built_in">cd</span> D:\ProgramData\Anaconda3\envs (your-path)</span><br><span class="line"><span class="comment"># 进入创建的虚拟环境 ENV</span></span><br><span class="line"><span class="built_in">cd</span> envs/your-venv</span><br></pre></td></tr></table></figure></li><li><p>激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Scripts</span><br><span class="line"></span><br><span class="line">activate your-venv-name</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>退出虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate env-name</span><br></pre></td></tr></table></figure></li><li><p>删除虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n your-env-name --all</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h3 id="Windows-Python2-虚拟环境"><a href="#Windows-Python2-虚拟环境" class="headerlink" title="Windows Python2 虚拟环境"></a>Windows Python2 虚拟环境</h3><ul><li><p>指定位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建目录</span><br><span class="line">mkdir your-proj-name</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> your-proj-name</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>依赖安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先进行安装</span></span><br><span class="line"></span><br><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟环境</span></span><br><span class="line">virtualenv venv-name</span><br></pre></td></tr></table></figure></li><li><p>激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 进入创建的虚拟环境文件夹</span></span><br><span class="line"><span class="built_in">cd</span> venv-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活虚拟环境</span></span><br><span class="line"><span class="comment"># 进入 Scripts 文件夹</span></span><br><span class="line"><span class="built_in">cd</span> Scripts</span><br><span class="line"><span class="comment"># 激活</span></span><br><span class="line">activate venv-name</span><br></pre></td></tr></table></figure></li><li><p>删除虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接删除相应目录</span><br></pre></td></tr></table></figure></li><li><p>成功后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(your-venv-name)path:</span><br></pre></td></tr></table></figure></li></ul><h3 id="Windows-Python3-虚拟环境"><a href="#Windows-Python3-虚拟环境" class="headerlink" title="Windows Python3 虚拟环境"></a>Windows Python3 虚拟环境</h3><ul><li><p>创建虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cmd --&gt; 进入指定位置 </span></span><br><span class="line">python -m venv new-venv-name</span><br></pre></td></tr></table></figure></li><li><p>激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示</span></span><br><span class="line">dir</span><br><span class="line"><span class="comment"># 进入 new-venv-name</span></span><br><span class="line"><span class="built_in">cd</span> new-venv-name</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> Scripts</span><br><span class="line"></span><br><span class="line">activate  new-venv-name</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>环境测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 Flask</span></span><br><span class="line">pip instll flask</span><br></pre></td></tr></table></figure><ul><li><p>进入<code>Python</code>交互式环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入交互式环境</span></span><br><span class="line">python </span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line">import flask</span><br><span class="line"><span class="comment"># 无显示正确</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>Pycharm</code>使用</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/flaskVenv.png" width="600"></li></ul><h3 id="Flask项目使用虚拟环境"><a href="#Flask项目使用虚拟环境" class="headerlink" title="Flask项目使用虚拟环境"></a>Flask项目使用虚拟环境</h3><ul><li><p>使用</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/aloneVenv.png" width="600"></li><li><p>项目测试</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/rightFlask.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis使用</title>
      <link href="2021/01/18/Redis%E4%BD%BF%E7%94%A8/"/>
      <url>2021/01/18/Redis%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Redis使用"><a href="#Redis使用" class="headerlink" title="Redis使用"></a>Redis使用</h3><ul><li><p>关系型数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">完整性</span><br><span class="line">1. 实体完整性 - 每一个实体都是独一无二的,没有冗余 - 主键/唯一索引</span><br><span class="line">2. 参照完整性 - 外键</span><br><span class="line">3. 域完整性 - 存储的数据都是有效的数据 - 数据类型/数据长度/非空约束/默认值约束/检查约束</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Mariadb使用</title>
      <link href="2021/01/16/Linux-Mariadb%E4%BD%BF%E7%94%A8/"/>
      <url>2021/01/16/Linux-Mariadb%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-Mariadb使用"><a href="#Linux-Mariadb使用" class="headerlink" title="Linux-Mariadb使用"></a>Linux-Mariadb使用</h3><blockquote><p>数据库文件获取: <code>https://github.com/lovobin/Python-Flask/tree/main/Mariadb</code> <code>all.sql</code></p></blockquote><ul><li><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure></li><li><p>检测状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mariadb</span><br></pre></td></tr></table></figure></li><li><p>连接<code>mariadb</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>数据库创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库 school 并指定默认字符集 utf8</span></span><br><span class="line"><span class="keyword">create</span> database school <span class="keyword">default</span> charset utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 切换数据库</span></span><br><span class="line">use school;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除数据库(一般不要尝试····)</span></span><br><span class="line"><span class="keyword">drop</span> database school; </span><br><span class="line"><span class="comment">-- 完善删除命令</span></span><br><span class="line"><span class="keyword">drop</span> database if exits school;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>图像化工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 root 用户不被允许</span></span><br><span class="line">create user 用户名@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&quot;密码&quot;</span>;</span><br><span class="line"><span class="comment"># 赋予权限</span></span><br><span class="line">grant all privileges on 数据库名.* to 用户名@<span class="string">&quot;%&quot;</span>;</span><br><span class="line">grant all privileges on *.* to 用户名@<span class="string">&quot;%&quot;</span>;</span><br><span class="line">grant select on *.* to 用户名@<span class="string">&quot;%&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p><code>pycharm</code>相关信息填写</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/connect.png" width="600"><ul><li><p>验证成功</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/rightC.png"></li><li><p><code>console</code>误关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">console 误关闭打开:</span><br><span class="line"></span><br><span class="line">ctrl + <span class="built_in">shift</span> + F10</span><br><span class="line"></span><br><span class="line">关闭后文件存在,但是需要手动备份源  &gt;  新建文件.sql</span><br><span class="line"></span><br><span class="line">方块中显示出 console 需要上下左右键控制选择</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/conssol.png"><ul><li><p>备份数据</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/backupSQL.png"></li></ul></li><li><p><code>pycharm</code>展示<code>sql</code></p></li><li><p>快捷键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ctrl + enter 执行所选片段</span><br><span class="line"></span><br><span class="line">格式化:</span><br><span class="line">ctrl + alt + l(小写 L)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只要光标在想要复制的行上面,就不需要选中该行，按下即为整行复制</span></span><br><span class="line">ctrl + c</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/beautiful.png"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/formatSQL.png" title="格式化后"></li><li><p><code>pycharm</code>编写相关代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Linux 下连接执行</span></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> ? data types; <span class="comment">-- 获取数据类型</span></span><br><span class="line"><span class="comment">-- 数据大小</span></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span>  ? <span class="type">int</span>;</span><br></pre></td></tr></table></figure></li><li><p>命令执行</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/runConmmand.png"></li><li><p><code>case when then end</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 基础语法</span></span><br><span class="line"><span class="keyword">select</span> key1,<span class="keyword">case</span> key2 <span class="keyword">when</span> 条件  <span class="keyword">then</span> ‘输出结果<span class="number">1</span>’ <span class="keyword">else</span> ‘输出结果<span class="number">2</span>’ <span class="keyword">end</span>  [<span class="keyword">as</span> ‘别名’] <span class="keyword">from</span> <span class="keyword">table</span><span class="operator">-</span>name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Eg.  <span class="comment">-- if else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name, <span class="keyword">case</span> stu_sex  <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span>  <span class="string">&#x27;男&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;女&#x27;</span>  <span class="keyword">end</span> <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span>  <span class="keyword">from</span> student;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/caseWhenend.png" width="600"></li><li><p><code>if</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> stu_id,stu_name,stu_address, if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Oracle decode函数</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/newCommand.png" width="600"></li></ul></li><li><p><code>and</code>和<code>between and</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- and 和 between and</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name,if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">where</span> stu_id<span class="operator">&gt;</span><span class="string">&#x27;20201&#x27;</span> <span class="keyword">and</span> stu_id <span class="operator">&lt;</span><span class="string">&#x27;20206&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name,if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">where</span> stu_id <span class="keyword">between</span> <span class="number">20202</span> <span class="keyword">and</span> <span class="number">20205</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/andBetween.png"></li><li><p>数据库知识补充</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据文件备份</span></span><br><span class="line"><span class="comment">-- Linux: mysqldump -uBinTest -p123456 --all-databases &gt;/root/all.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">具体表象: 用二维表来保存数据</span></span><br><span class="line"><span class="comment">    ~ 行: 一条记录</span></span><br><span class="line"><span class="comment">    ~ 列: 一个字段(某个属性)</span></span><br><span class="line"><span class="comment">    ~ 主键列: 能够唯一标识一条记录的列</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">编程语言: SQL 结构化查询语言</span></span><br><span class="line"><span class="comment">    ~ DDL: 数据定义语言 create / drop / alter</span></span><br><span class="line"><span class="comment">    ~ DML: 数据操作语言 insert / delete / update / select</span></span><br><span class="line"><span class="comment">    ~ DCL: 数据控制语言 grant / revoke</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建名为 school 的数据库并指定默认的字符集为 utf8</span></span><br><span class="line"><span class="keyword">create</span> database school <span class="keyword">default</span> charset utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询当前用户</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果存在名为 school 的数据库就删除它</span></span><br><span class="line"><span class="keyword">drop</span> database if <span class="keyword">exists</span> school;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表 student</span></span><br><span class="line"><span class="comment">-- ? / help 终端执行</span></span><br><span class="line"><span class="comment">-- 普通创建表加注释</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student</span><br><span class="line">(</span><br><span class="line">    stu_id      <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 学生学号</span></span><br><span class="line">    stu_name    nvarchar(<span class="number">6</span>)     <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 学生姓名</span></span><br><span class="line">    stu_email   nvarchar(<span class="number">20</span>)    <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 学生邮箱</span></span><br><span class="line">    stu_address nvarchar(<span class="number">20</span>)              <span class="comment">-- 学生住址</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 优化创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_student</span><br><span class="line">(</span><br><span class="line">    stuid      <span class="type">int</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    stuname    nvarchar(<span class="number">20</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    stusex     bit <span class="keyword">default</span> <span class="number">1</span> comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    stubirth   <span class="type">date</span>,</span><br><span class="line">    stuemail   nvarchar(<span class="number">20</span>) comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    stuaddress nvarchar(<span class="number">20</span>) comment <span class="string">&#x27;住址&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (stuid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示表结构</span></span><br><span class="line"><span class="keyword">desc</span> student;</span><br><span class="line"><span class="keyword">desc</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表 student</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入相关信息</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20201</span>, <span class="string">&#x27;name-01&#x27;</span>, <span class="string">&#x27;202101name01@qq.com&#x27;</span>, <span class="string">&#x27;name-a&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20202</span>, <span class="string">&#x27;name-02&#x27;</span>, <span class="string">&#x27;202101name02@qq.com&#x27;</span>, <span class="string">&#x27;name-b&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20203</span>, <span class="string">&#x27;name-03&#x27;</span>, <span class="string">&#x27;202101name03@qq.com&#x27;</span>, <span class="string">&#x27;name-c&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20204</span>, <span class="string">&#x27;name-04&#x27;</span>, <span class="string">&#x27;202101name04@qq.com&#x27;</span>, <span class="string">&#x27;name-d&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20205</span>, <span class="string">&#x27;name-05&#x27;</span>, <span class="string">&#x27;202101name05@qq.com&#x27;</span>, <span class="string">&#x27;name-e&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20206</span>, <span class="string">&#x27;name-06&#x27;</span>, <span class="string">&#x27;202101name06@qq.com&#x27;</span>, <span class="string">&#x27;name-f&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20207</span>, <span class="string">&#x27;name-07&#x27;</span>, <span class="string">&#x27;202101name07@qq.com&#x27;</span>, <span class="string">&#x27;name-g&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20208</span>, <span class="string">&#x27;name-08&#x27;</span>, <span class="string">&#x27;202101name08@qq.com&#x27;</span>, <span class="string">&#x27;name-h&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span> (<span class="number">20209</span>, <span class="string">&#x27;name-09&#x27;</span>, <span class="string">&#x27;202101name09@qq.com&#x27;</span>, <span class="string">&#x27;name-i&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改列的数据长度 (创建表时忘记字段长度)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    modify <span class="keyword">column</span> stu_id <span class="type">int</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    modify <span class="keyword">column</span> stu_name nvarchar(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    <span class="keyword">add</span> <span class="keyword">column</span> stu_sex bit <span class="keyword">default</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果存在就删除学生表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> student;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 根据条件删除</span></span><br><span class="line"><span class="keyword">delete</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20201</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">column</span> stu_sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名列: 可以修改数据类型的大小</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    change <span class="keyword">column</span> stu_name stu_name <span class="type">varchar</span>(<span class="number">21</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增删改查</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student</span><br><span class="line"><span class="keyword">values</span> ();</span><br><span class="line"><span class="keyword">delete</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> stu_name <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">-- 更新多个使用逗号分割</span></span><br><span class="line">update student</span><br><span class="line"><span class="keyword">set</span> student.stu_name <span class="operator">=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">where</span> student.stu_name <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束，使两个表有关联</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span></span><br><span class="line">    <span class="keyword">table</span><span class="operator">-</span> name [表名称] <span class="keyword">add</span> <span class="keyword">constraint</span> fk_tablename_foreignKeyName[外键名称]</span><br><span class="line">    <span class="keyword">foreign</span> key (keyname[关联表的主键]) <span class="keyword">references</span></span><br><span class="line">    <span class="keyword">table</span> <span class="operator">-</span> name (keyname[关联表的主键])</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 唯一性约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">table</span><span class="operator">-</span> name [表名称] <span class="keyword">add</span> <span class="keyword">constraint</span></span><br><span class="line">    uni_tablename_value1_value2[唯一性约束名称,由那两个属性组成唯一]</span><br><span class="line">    <span class="keyword">unique</span> (value1,value2);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 投影和别名</span></span><br><span class="line"><span class="comment">-- 投影</span></span><br><span class="line"><span class="keyword">select</span> stu_id, stu_name, stu_id <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 别名</span></span><br><span class="line"><span class="keyword">select</span> stu_id <span class="keyword">as</span> <span class="string">&#x27;学号&#x27;</span>,stu_name <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加列 stu_sex</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">column</span> stu_sex bit <span class="keyword">default</span> <span class="number">1</span> comment <span class="string">&#x27;性别&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新数据  默认数据 bit 0--&gt; 男  1--&gt; 女</span></span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20201</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">1</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20202</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">1</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20203</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20204</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20205</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20206</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">1</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20207</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20208</span>;</span><br><span class="line">    update student <span class="keyword">set</span> stu_sex<span class="operator">=</span><span class="number">1</span> <span class="keyword">where</span> stu_id <span class="operator">=</span> <span class="number">20209</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- case when end 使用</span></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name, <span class="keyword">case</span> stu_sex  <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span>  <span class="string">&#x27;男&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;女&#x27;</span>  <span class="keyword">end</span> <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span>  <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 其他数据库不通用方法</span></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name,stu_address, if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- and 和 between and</span></span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name,if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 <span class="keyword">from</span> student <span class="keyword">where</span> stu_id<span class="operator">&gt;</span><span class="string">&#x27;20201&#x27;</span> <span class="keyword">and</span> stu_id <span class="operator">&lt;</span><span class="string">&#x27;20206&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> stu_id,stu_name,if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别 <span class="keyword">from</span> student <span class="keyword">where</span> stu_id <span class="keyword">between</span> <span class="number">20202</span> <span class="keyword">and</span> <span class="number">20205</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模糊查询</span></span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name <span class="keyword">from</span> student <span class="keyword">where</span> stu_name <span class="keyword">like</span> <span class="string">&#x27;name-%&#x27;</span>;</span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name <span class="keyword">from</span> student <span class="keyword">where</span> stu_name <span class="keyword">like</span> <span class="string">&#x27;name_&#x27;</span>;</span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name <span class="keyword">from</span> student <span class="keyword">where</span> stu_name <span class="keyword">like</span> <span class="string">&#x27;%name%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询空值</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20210</span>,<span class="string">&#x27;20210@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="comment">-- 空值</span></span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name,stu_email <span class="keyword">from</span> student <span class="keyword">where</span> stu_name <span class="keyword">is</span>  <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">-- 不为空查询</span></span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name,stu_email <span class="keyword">from</span> student <span class="keyword">where</span> stu_name <span class="keyword">is</span>  <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去重操作</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20211</span>,<span class="string">&#x27;20211@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20212</span>,<span class="string">&#x27;20211@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20213</span>,<span class="string">&#x27;20211@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20214</span>,<span class="string">&#x27;20211@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_email,stu_name) <span class="keyword">values</span> (<span class="number">20215</span>,<span class="string">&#x27;20211@qq.com&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询邮箱重复学员信息 表不合理</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span>(stu_email),stu_id,stu_name <span class="keyword">from</span> student <span class="keyword">where</span> stu_email<span class="operator">=</span><span class="string">&#x27;20211@qq.com&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 排序</span></span><br><span class="line">    <span class="comment">-- 升序</span></span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name,stu_address <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> stu_id <span class="keyword">asc</span>;</span><br><span class="line">    <span class="comment">-- 降序</span></span><br><span class="line">    <span class="keyword">select</span> stu_id,stu_name,stu_address <span class="keyword">from</span> student  <span class="keyword">where</span> stu_address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">order</span> <span class="keyword">by</span> stu_id <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 聚合函数 忽略空值 = null</span></span><br><span class="line">     <span class="built_in">max</span>()      <span class="comment">-- 最大值</span></span><br><span class="line">     <span class="built_in">min</span>()      <span class="comment">-- 最小值</span></span><br><span class="line">     average()  <span class="comment">-- 平均值</span></span><br><span class="line">     <span class="built_in">count</span>()    <span class="comment">-- 统计</span></span><br><span class="line">     <span class="built_in">sum</span>()      <span class="comment">-- 求和</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">-- 分组和聚合</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">count</span>(stu_id) <span class="keyword">from</span> student;</span><br><span class="line">    <span class="comment">-- 分组</span></span><br><span class="line">        <span class="comment">-- 统计男生和女生各有多少人</span></span><br><span class="line">        <span class="keyword">select</span> if(stu_sex,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">as</span> 性别,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> stu_sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 筛选 分组 排序</span></span><br><span class="line"><span class="comment">-- where group by order by</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 什么时候写 having ？</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    分组以后的筛选 having</span></span><br><span class="line"><span class="comment">    分组前的筛选 where</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询</span></span><br></pre></td></tr></table></figure></li><li><p>删除外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">table</span><span class="operator">-</span>name <span class="keyword">drop</span> <span class="keyword">foreign</span> key fotrign<span class="operator">-</span>key<span class="operator">-</span>name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 约束</span></span><br><span class="line">restrict 不允许操作</span><br><span class="line">cascade 级联操作</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">null</span> 设置为 <span class="keyword">null</span></span><br></pre></td></tr></table></figure></li><li><p>表信息</p><ul><li><p><code>school</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/finishSQLTable.png"></li><li><p><code>emp</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/emp.png"></li><li><p><code>dept</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/dept.png"></li><li><p><code>salgrade</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/salgrade.png"></li></ul></li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><ul><li>子查询</li><li>多表查询</li></ul><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><ul><li><p>分页查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 降序</span></span><br><span class="line"><span class="comment">-- 所有记录</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">-- 前 5 条记录</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 偏移 5 条查看 5 条: 6-10 条的记录</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">5</span> <span class="keyword">offset</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- offset 缩略写法</span></span><br><span class="line"><span class="comment">-- 跳过 10 条查 5 条</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/limit.png"></li><li><p>简化写法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全表比较信息</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">-- 简化写法</span></span><br><span class="line"><span class="keyword">select</span>  empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/newlimit.png"></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. 创建数据库库和创建表命名尽量使用小写</span><br><span class="line"></span><br><span class="line">2. 作为筛选条件的字符串是区分大小看设置的校对规则</span><br><span class="line"></span><br><span class="line">    Eg. create database table-name default charset utf8 collate utf_bin_ci;</span><br><span class="line"></span><br><span class="line">    规则: utf_general_ci (忽略大小写)</span><br><span class="line"></span><br><span class="line">3. 数据库中的对象通常会用前缀加以区分</span><br><span class="line">-- table / view / index / <span class="keyword">function</span> / procedure</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/diffSQL.png"><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li><p>批量插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span><span class="operator">-</span>name <span class="keyword">values</span></span><br><span class="line">(),</span><br><span class="line">(),</span><br><span class="line">(); <span class="comment">-- 最后一条 ;</span></span><br></pre></td></tr></table></figure></li><li><p>外键自参照</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_emp</span><br><span class="line">    <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_mgr <span class="keyword">foreign</span> key (mgr) <span class="keyword">references</span> tb_emp (eno);</span><br></pre></td></tr></table></figure></li><li><p>添加列到指定位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">table</span><span class="operator">-</span>name <span class="keyword">add</span> <span class="keyword">column</span> <span class="keyword">new</span><span class="operator">-</span><span class="keyword">column</span><span class="operator">-</span>name data<span class="operator">-</span>type <span class="keyword">first</span>; <span class="comment">-- 添加到第一列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">table</span><span class="operator">-</span>name <span class="keyword">add</span> <span class="keyword">column</span> <span class="keyword">new</span><span class="operator">-</span><span class="keyword">column</span><span class="operator">-</span>name data<span class="operator">-</span>type after <span class="keyword">column</span><span class="operator">-</span>name; <span class="comment">-- 某列的前面或后面</span></span><br></pre></td></tr></table></figure></li><li><p>数据资源获取</p></li><li><p>习题</p></li></ul><h3 id="执行计划"><a href="#执行计划" class="headerlink" title="执行计划"></a>执行计划</h3><ul><li><p>生成执行计划</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 同一结果</span></span><br><span class="line"></span><br><span class="line">explain <span class="keyword">select</span> ename,eno <span class="keyword">from</span> tb_emp <span class="keyword">where</span> eno<span class="operator">=</span><span class="number">7800</span>;</span><br><span class="line"></span><br><span class="line">explain <span class="keyword">select</span> ename,eno <span class="keyword">from</span> tb_emp <span class="keyword">where</span> ename <span class="operator">=</span><span class="string">&#x27;张三丰&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/explain.png"></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ul><li><p><code>index</code>索引(一本书的目录)</p></li><li><p>索引意义</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">索引可以加速查询索引应该在经常用于查询筛选条件的列上建立索引</span><br><span class="line">索引会使用额外的存储空间而且会让增删改变得更慢(因为要更新索引)</span><br><span class="line"></span><br><span class="line">所以不能滥用索引</span><br></pre></td></tr></table></figure></li><li><p>创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- create index index-name on table-name(key);</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_ename <span class="keyword">on</span> tb_emp(ename);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- drop index idx_name on table-name; </span></span><br><span class="line"><span class="keyword">drop</span> index idx_emp_ename <span class="keyword">on</span> tb_emp;</span><br></pre></td></tr></table></figure></li></ul><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><ul><li><p>查询结果的快照</p></li><li><p>创建视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- create view view-name as select ····</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> view_emp_dept <span class="keyword">as</span> <span class="keyword">select</span> ename,t1.dno <span class="keyword">from</span> tb_emp t1 <span class="keyword">inner</span> <span class="keyword">join</span> tb_dept td <span class="keyword">on</span> t1.dno <span class="operator">=</span> td.dno;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用视图  访问控制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- select * from view-name;</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> view_emp_dept;</span><br></pre></td></tr></table></figure></li><li><p>删除视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除视图</span></span><br><span class="line"><span class="comment">-- drop view view-name;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> view_emp_dept;</span><br></pre></td></tr></table></figure></li></ul><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><ul><li><p>存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 存储过程</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="comment">-- 重新定义定界符为 $$</span></span><br><span class="line"><span class="comment">-- 创建存储过程</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span>  sp_dept_avg_Sal(deptno <span class="type">int</span>,<span class="keyword">out</span> avgsal <span class="type">float</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">select</span>  <span class="built_in">avg</span>(sal) <span class="keyword">into</span>  avgsal <span class="keyword">from</span> tb_emp <span class="keyword">where</span> dno<span class="operator">=</span>deptno;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将定界符还原回;</span></span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure></li><li><p>删除存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除存储过程</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> sp_dept_avg_Sal;</span><br></pre></td></tr></table></figure></li><li><p>调用存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> sp_dept_avg_Sal(参数···);</span><br></pre></td></tr></table></figure></li></ul><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul><li><p>函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><ul><li><p>触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在执行增删改查的操作是可以触发其他联级操作,但是有可能导致“锁表”现象,实际开发中应该尽量避免使用触发器</span><br></pre></td></tr></table></figure></li></ul><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- DCL: 授予权限(grant to) 和召回权限(revoke from)</span></span><br></pre></td></tr></table></figure><ul><li><p>创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line">    <span class="keyword">create</span>  <span class="keyword">user</span> <span class="string">&#x27;UserName&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;yourpassword&#x27;</span>;</span><br><span class="line">    <span class="keyword">create</span>  <span class="keyword">user</span> <span class="string">&#x27;UserName&#x27;</span>@<span class="string">&#x27;127.0.0.1&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;yourpassword&#x27;</span>;</span><br><span class="line">    <span class="keyword">create</span>  <span class="keyword">user</span> <span class="string">&#x27;UserName&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;yourpassword&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/newUser.png"></li><li><p>删除用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除用户 一一对应 语法:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;UserName&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>授予权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 权限 Oracle--&gt; dba 权限</span></span><br><span class="line"><span class="comment">-- 授予数据库所有的权限 给用户 ···</span></span><br><span class="line"><span class="comment">-- 语法:</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> databases<span class="operator">-</span>name.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;user-name&#x27;</span>@<span class="string">&#x27;address&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>收回权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 权限收回</span></span><br><span class="line"><span class="comment">-- revoke  收回什么权限 on 在那个数据 to 的哪个用户;</span></span><br><span class="line"><span class="comment">-- 收回增删改的权限 &#x27;user-name&#x27;@&#x27;address&#x27;;</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span>,update,<span class="keyword">delete</span> <span class="keyword">on</span> database<span class="operator">-</span>name.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;user-name&#x27;</span>@<span class="string">&#x27;address&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 事务 (transaction) - 把多个增删改查的操作做成不可分割的原子性操作</span></span><br><span class="line"><span class="comment">-- 要么全部都做,要么全部做</span></span><br><span class="line"><span class="comment">-- 开启事务两种方法:</span></span><br><span class="line">    <span class="comment">-- 1.begin ;</span></span><br><span class="line">    <span class="comment">-- 2. start transaction;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_emp(eno, ename,job,sal) <span class="keyword">values</span> (<span class="number">7900</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;吃瓜群众&#x27;</span>,<span class="number">1200</span>);</span><br><span class="line"><span class="comment">-- 查询测试数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_emp;</span><br><span class="line"><span class="comment">-- 开启事务</span></span><br><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="comment">-- 删除数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb_emp <span class="keyword">where</span> eno<span class="operator">=</span><span class="number">7900</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_emp;</span><br><span class="line"><span class="comment">-- 提交(事务中的所有操作全都不生效)</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">-- 回滚(事务中的所有操作全部撤销)</span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 未执行 commit;</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/transaction.gif"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-git-Install</title>
      <link href="2021/01/15/Linux-git-Install/"/>
      <url>2021/01/15/Linux-git-Install/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-git-Install"><a href="#Linux-git-Install" class="headerlink" title="Linux-git-Install"></a>Linux-git-Install</h3><ul><li><p>进入<code>git</code></p></li><li><p>选择适合版本</p><blockquote><p><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/">git-2.21.0.tar.xz</a></p></blockquote></li><li><p>复制一个适合版本的链接</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/gitLinux.png"><blockquote><p><code>https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.21.0.tar.xz</code></p></blockquote></li><li><p><code>Linux</code>下载</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/gitinstall.png"></li><li><p>解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xz -d git-2.21.0.tar.xz </span><br></pre></td></tr></table></figure></li><li><p>解归档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf git-2.21.0.tar </span><br></pre></td></tr></table></figure></li><li><p>进入解压后的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> git-2.21.0/</span><br><span class="line"><span class="comment"># 源代码构建安装需要 Makefile，查看是否存在</span></span><br><span class="line">ls | grep Makefile </span><br><span class="line"><span class="comment"># 更改安装路径需要文件</span></span><br><span class="line">ls | grep configure</span><br></pre></td></tr></table></figure></li><li><p>联网需要安装的依赖库,补包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y libcurl-devel</span><br></pre></td></tr></table></figure></li><li><p>指定安装路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/</span><br></pre></td></tr></table></figure></li><li><p>构建安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line"><span class="comment"># 输出一下信息</span></span><br><span class="line">git version 2.21.0</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用git"><a href="#使用git" class="headerlink" title="使用git"></a>使用git</h3><ul><li><p>新建仓库</p></li><li><p>文件添加</p></li><li><p>日志信息</p></li><li><p>误删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除 没有添加 git 前缀的删除</span></span><br><span class="line">rm -f *</span><br><span class="line"><span class="comment"># 恢复</span></span><br><span class="line">git checkout -- .</span><br></pre></td></tr></table></figure></li><li><p>版本回退</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">git reset  --hard comit-id | git reset  --hard HARD^ <span class="comment"># 回退到上一个版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --hard</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 未来版本查看</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Redis-Install</title>
      <link href="2021/01/14/Linux-Redis-Install/"/>
      <url>2021/01/14/Linux-Redis-Install/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-Redis-Install"><a href="#Linux-Redis-Install" class="headerlink" title="Linux-Redis-Install"></a>Linux-Redis-Install</h3><ul><li><p>搜索<code>Redis</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search redis <span class="comment"># 版本较旧</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/redis.png" title="直观显示"></li></ul><h3 id="源代码构建安装"><a href="#源代码构建安装" class="headerlink" title="源代码构建安装"></a>源代码构建安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Redis 中文文档: http://redisdoc.com/</span><br><span class="line"></span><br><span class="line">Redis 官网: https://redis.io</span><br></pre></td></tr></table></figure><ul><li><p>进入Redis官网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获取下载地址</span><br><span class="line"></span><br><span class="line">https://download.redis.io/releases/redis-6.0.10.tar.gz</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/RedisUrl.png" width="400" title="点击查看大图"></li><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.redis.io/releases/redis-6.0.10.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip redis-6.0.10.tar.gz </span><br></pre></td></tr></table></figure></li><li><p>解归档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis-6.0.10.tar </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/gunzip.png"></li><li><p>准备工作,进入解压文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis-6.0.10/</span><br></pre></td></tr></table></figure></li><li><p>构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/makeRedis.gif" title="构建中····"></li><li><p>指定安装路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make PREFIX=/usr/<span class="built_in">local</span>/redis install <span class="comment"># 指定路径</span></span><br></pre></td></tr></table></figure></li><li><p>拷贝<code>redis</code>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根目录下 </span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment"># 进入解压后的 redis 文件见</span></span><br><span class="line"><span class="built_in">cd</span> redis-6.0.10/</span><br><span class="line"><span class="comment"># 拷贝配置文件到指定路径下</span></span><br><span class="line">cp redis.conf /usr/<span class="built_in">local</span>/redis</span><br><span class="line"><span class="comment"># 前往复制路径下</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis</span><br><span class="line"><span class="comment"># 查看文件</span></span><br><span class="line">ll (小写 L )</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/pathRedis.png" width="400"></li><li><p>检测<code>Redis</code>是否正确安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所在目录</span></span><br><span class="line">/usr/<span class="built_in">local</span>/redis</span><br><span class="line"><span class="comment"># 版本信息检测</span></span><br><span class="line">redis-server --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出以下信息为正确安装</span></span><br><span class="line"></span><br><span class="line">Redis server v=6.0.10 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=892cf79e664648a0</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>检测客户端工具是否正确安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出以下信息为正确安装</span></span><br><span class="line"></span><br><span class="line">redis-cli 6.0.10</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>检测哨兵</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出以下信息为正确安装</span></span><br><span class="line"></span><br><span class="line">Redis server v=6.0.10 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=892cf79e664648a0</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动服务(<font color="red">请及时关闭，需要配置所以第一次需要开启</font>)</p><ul><li><p>前台模式(了解内容)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前台式启动服务,交互式环境会被占用 ctrl + c 停止运行</span></span><br><span class="line"></span><br><span class="line">redis-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口号的小故事 信息隐藏</span></span><br></pre></td></tr></table></figure></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/finishRedis.png" width="600"><ul><li><p>后台式启动(<strong>推荐</strong>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等一段时间后回车一下,进入 bash</span></span><br></pre></td></tr></table></figure><ul><li><p>检测是否在后台运行(检测方法一)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 6379</span><br></pre></td></tr></table></figure></li><li><p><code>ps</code>查看进程(检测方法二)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis</span><br></pre></td></tr></table></figure></li><li><p><code>jobs</code>(检测方法三)</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/threeRedis.png"></li></ul></li><li><p>如过需要再次放回前台,执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据 jobs 前的编号 [1]+</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">fg</span> %1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编号为那个数字就执行: </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">fg</span> %数字</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快捷键执行</span></span><br><span class="line">Redis放回后台: ctrl + z, 会停止进程，回车</span><br><span class="line"></span><br><span class="line">执行:</span><br><span class="line">  <span class="built_in">fg</span> %1</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/ingInfo.png"></li></ul></li><li><p>关闭<code>Redis</code></p><ul><li><p>方法一</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类似于断电,一般不用,否则会造成数据丢失</span></span><br><span class="line">ps -ef | grep redis</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> 1056726 <span class="comment"># 执行再次按下回车</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/killRedis.png"></li><li><p>方法二</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">jobs</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">fg</span> %1</span><br><span class="line"></span><br><span class="line">ctrl + c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后显示</span></span><br><span class="line">1060902:M 14 Jan 2021 20:19:49.435 <span class="comment"># Redis is now ready to exit, bye bye...</span></span><br></pre></td></tr></table></figure></li><li><p>方法三（前两者作为了解,正常关机,推荐）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-cli </span><br><span class="line"></span><br><span class="line">shutdown <span class="comment"># Redis 关机</span></span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索不显示 带 grep的</span></span><br><span class="line"><span class="comment"># ps -ef | grep redis | grep -v grep</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/shutdownRedis.png"></li><li><p>配置配置文件进行后台启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 224 shift+g | 224 gg 快速跳到指定行</span></span><br><span class="line"></span><br><span class="line">224行 <span class="comment"># daemonize no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改守护进程</span></span><br><span class="line"></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/dacmon.png" title="直接放入后台运行"></li></ul></li><li><p>设置口令</p><ul><li><p>方法一(需重启服务)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 进入后按下 Esc, :/\&lt;requirepass  在 790 行,取消注释,修改后面的密码</span></span><br><span class="line"><span class="comment"># 2. 790 gg | 790 shift + g</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim 查找 允许正则</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配开头（右斜杠+小于号）</span></span><br><span class="line"></span><br><span class="line">/\&lt;关键字  <span class="comment"># :/\&lt;requirepass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>方法二</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">两种方法前提: 后台运行 Redis服务</span><br><span class="line">redis-server redis.conf</span><br><span class="line"><span class="comment"># 查看当前密码 默认空</span></span><br><span class="line">CONFIG SET requirepass <span class="comment"># config get requirepass</span></span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line">config <span class="built_in">set</span> requirepass your-password</span><br><span class="line"><span class="comment"># 显示 OK</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端工具连接</span></span><br><span class="line">redis-cli </span><br><span class="line"><span class="comment"># 密码认证</span></span><br><span class="line">auth 密码</span><br></pre></td></tr></table></figure></li><li><p><code>Redis 5.7</code>设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --requirepass your-password</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/requirepass.png"></li></ul></li><li><p>启动<code>Redis</code>最终方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./bin/redis-server ./redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下图为命令由来解释</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux: history 命令使用</span></span><br><span class="line"><span class="built_in">history</span> line-number <span class="comment"># 执行历史命令，简化输入 </span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/startRedis.png"></li><li><p>检测密码是否设置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动客户端工具</span></span><br><span class="line">redis-cli</span><br><span class="line"><span class="comment"># 连接成功后</span></span><br><span class="line">ping</span><br><span class="line"><span class="comment"># 出现 (erro) 即为正确</span></span><br><span class="line"><span class="comment"># 验证密码</span></span><br><span class="line">auth your-password</span><br><span class="line"><span class="comment"># 出现 OK 即为登录成功</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/setPassword.png"></li><li><p>性能测试（哔哩哔哩: 狂神说）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark</span><br></pre></td></tr></table></figure><ul><li><p>性能测试语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark [option] [option value]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 并发连接 100 指定请求书 10000</span></span><br><span class="line">redis-benchmark -h localhost -p 6379 -c 100 -n 10000</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>结果（分析输出结果）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">====== PING_INLINE ======</span><br><span class="line">  10000 requests completed <span class="keyword">in</span> 0.16 seconds</span><br><span class="line">  100 parallel clients</span><br><span class="line">  3 bytes payload</span><br><span class="line">  keep alive: 1</span><br><span class="line">  multi-thread: no</span><br><span class="line"></span><br><span class="line">====== PING_BULK ======</span><br><span class="line">  10000 requests completed <span class="keyword">in</span> 0.15 seconds <span class="comment"># 对我们的 1万个请求进行写入测试</span></span><br><span class="line">  100 parallel clients <span class="comment"># 100 个并发客户端</span></span><br><span class="line">  3 bytes payload <span class="comment"># 每次写入 3 个字节</span></span><br><span class="line">  keep alive: 1</span><br><span class="line">  multi-thread: no</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------</span></span><br><span class="line">48.18% &lt;= 1 milliseconds</span><br><span class="line">99.01% &lt;= 2 milliseconds</span><br><span class="line">99.82% &lt;= 3 milliseconds</span><br><span class="line">100.00% &lt;= 3 milliseconds <span class="comment"># 所有请求在 3 毫秒处理完成</span></span><br><span class="line">68493.15 requests per second  <span class="comment"># 每秒处理 68493.15 次请求</span></span><br><span class="line"><span class="comment"># ------------------------------- </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 作用: 理解 Redis 的速度</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>参数</p><table><thead><tr><th align="center">序号</th><th align="center">选项</th><th align="left">描述</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><strong>-h</strong></td><td align="left">指定服务器主机名</td><td align="center">127.0.0.1</td></tr><tr><td align="center">2</td><td align="center"><strong>-p</strong></td><td align="left">指定服务器端口</td><td align="center">6379</td></tr><tr><td align="center">3</td><td align="center"><strong>-s</strong></td><td align="left">指定服务器 socket</td><td align="center"></td></tr><tr><td align="center">4</td><td align="center"><strong>-c</strong></td><td align="left">指定并发连接数</td><td align="center">50</td></tr><tr><td align="center">5</td><td align="center"><strong>-n</strong></td><td align="left">指定请求数</td><td align="center">10000</td></tr><tr><td align="center">6</td><td align="center"><strong>-d</strong></td><td align="left">以字节的形式指定 SET/GET 值的数据大小</td><td align="center">2</td></tr><tr><td align="center">7</td><td align="center"><strong>-k</strong></td><td align="left">1=keep alive 0=reconnect</td><td align="center">1</td></tr><tr><td align="center">8</td><td align="center"><strong>-r</strong></td><td align="left">SET/GET/INCR 使用随机 key, SADD 使用随机值</td><td align="center"></td></tr><tr><td align="center">9</td><td align="center"><strong>-P</strong></td><td align="left">通过管道传输 <numreq> 请求</td><td align="center">1</td></tr><tr><td align="center">10</td><td align="center"><strong>-q</strong></td><td align="left">强制退出 redis。仅显示 query/sec 值</td><td align="center"></td></tr><tr><td align="center">11</td><td align="center"><strong>–csv</strong></td><td align="left">以 CSV 格式输出</td><td align="center"></td></tr><tr><td align="center">12</td><td align="center"><strong>-l</strong></td><td align="left">生成循环，永久执行测试</td><td align="center"></td></tr><tr><td align="center">13</td><td align="center"><strong>-t</strong></td><td align="left">仅运行以逗号分隔的测试命令列表。</td><td align="center"></td></tr><tr><td align="center">14</td><td align="center"><strong>-I</strong></td><td align="left">Idle 模式。仅打开 N 个 idle 连接并等待。</td><td align="center"></td></tr></tbody></table></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Mariadb-Install</title>
      <link href="2021/01/14/Linux-mariadb-Install/"/>
      <url>2021/01/14/Linux-mariadb-Install/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-mariadb-Install"><a href="#Linux-mariadb-Install" class="headerlink" title="Linux-mariadb-Install"></a>Linux-mariadb-Install</h3><ul><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索的作用: 显示可安装程序包</span></span><br><span class="line">yum search mariadb</span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mariadb mariadb-server</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb <span class="comment"># 3306 端口</span></span><br></pre></td></tr></table></figure></li><li><p>查看端口号是否被占用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 3306</span><br><span class="line"></span><br><span class="line">mysqld <span class="comment"># MYSQL Daemon</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/netstat.png"></li><li><p>登录数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p <span class="comment"># 按两下回车,跳过密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有数据库</span></span><br><span class="line">show databases;</span><br><span class="line"><span class="comment"># 使用数据库</span></span><br><span class="line">use mysql;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/finishMysql.png" width="500"></li><li><p>配置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> password=password(<span class="string">&#x27;123456&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>激活密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit;</span><br></pre></td></tr></table></figure></li><li><p>无密码测试登录</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/configpassword.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Install-Python3</title>
      <link href="2021/01/13/Linux-Install-Python3/"/>
      <url>2021/01/13/Linux-Install-Python3/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-Install-Python"><a href="#Linux-Install-Python" class="headerlink" title="Linux-Install-Python"></a>Linux-Install-Python</h3><ul><li><p>检测<code>Python</code>环境是否存在</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/noPython.png"></li></ul><h5 id="源代码构建安装python3-7"><a href="#源代码构建安装python3-7" class="headerlink" title="源代码构建安装python3.7"></a>源代码构建安装<code>python3.7</code></h5><ul><li><p><code>gcc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 gcc</span></span><br><span class="line">gcc --version</span><br><span class="line"><span class="comment"># 没有 gcc</span></span><br><span class="line">yum install gcc</span><br><span class="line"><span class="comment"># 更新 gcc</span></span><br><span class="line">yum update gcc</span><br></pre></td></tr></table></figure></li><li><p>源代码构建安装 <code>Python3.7</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/installPy.png" width="600" height="210"></li><li><p>解压缩和接归档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line">xz -d Python-3.7.3.tar.xz </span><br><span class="line"><span class="comment"># 解归档</span></span><br><span class="line">tar -xvf Python-3.7.3.tar </span><br></pre></td></tr></table></figure></li><li><p>补充依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有两个可能下载失败 Eg. db4-devel···</span></span><br><span class="line"><span class="comment"># Error: Unable to find a match: db4-devel libpcap-devel</span></span><br></pre></td></tr></table></figure></li><li><p>进入 <code>Python</code>源代码目录安装前准备工作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> Python-3.7.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装到指定位置</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python37 --enable-optimizations</span><br><span class="line"><span class="comment"># --enable-optimizations 启用优化</span></span><br></pre></td></tr></table></figure></li><li><p>构建和安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>检测是否安装成功</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/python37.png"></li><li><p>配置环境变量</p><ul><li><p>编辑文件<code>.bash_profile</code>(注册 python 环境变量 )</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/bashfile.png"></li><li><p>添加安装时<code>python</code>位置</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/pythonPath.png"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加: :/usr/<span class="built_in">local</span>/python37/bin</span><br></pre></td></tr></table></figure></li><li><p>激活环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure></li></ul></li><li><p>符号链接</p><ul><li><p>硬链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">相当于文件备份,但是不会增加磁盘存储，只要引用不为 0, 文件就不会被删除</span><br><span class="line"></span><br><span class="line">ln 文件 /路径/文件名.py</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>软连接</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-安装与使用</title>
      <link href="2021/01/13/Nginx-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2021/01/13/Nginx-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx-安装与使用"><a href="#Nginx-安装与使用" class="headerlink" title="Nginx-安装与使用"></a>Nginx-安装与使用</h3><ul><li><p><code>Nginx</code>是什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Nginx(engine x) 是一个高性能的 HTTP(解决 C10k的问题)和反向代理服务器，也是一个 IMAP/POP3/SMTP 服务器</span><br><span class="line"></span><br><span class="line">特点:</span><br><span class="line">占用内存少，并发能力强</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>Nginx</code>的优势</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IO 多路复用:</span><br><span class="line">    高并发</span><br><span class="line">    epoll</span><br><span class="line">    异步</span><br><span class="line">    非阻塞</span><br></pre></td></tr></table></figure></li><li><p><code>nginx</code>目录介绍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置目录: /etc/nginx</span><br><span class="line">执行文件: /usr/sbin/nginx</span><br><span class="line">日志目录: /var/<span class="built_in">log</span>/nginx</span><br><span class="line">启动文件: /var/init.d/nginx</span><br><span class="line">web 目录: /var/www/html </span><br><span class="line">nginx配置文件: /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></li><li><p>前提: 拥有服务器(推荐阿里云)</p></li><li><p>连接服务器(<code>ssh</code>)</p></li><li><p>搜索<code>nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yun search nginx</span><br></pre></td></tr></table></figure></li><li><p>查看已安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed</span><br></pre></td></tr></table></figure></li><li><p>搜索某个软件是否安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep search-name</span><br></pre></td></tr></table></figure></li><li><p>安装<code>nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure></li><li><p>查看<code>nginx</code>的具体信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info nginx</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nginx.png" width="600" height="300" alt="nginx"></li><li><p>检查配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[sudo] nginx -t [可选参数: 权限不足添加 Centos无需添加sudo]</span><br><span class="line"></span><br><span class="line">输出以下信息: </span><br><span class="line"></span><br><span class="line">    [root@VM-0-3-centos ~]<span class="comment"># nginx -t</span></span><br><span class="line">    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">    nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>重新加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure></li><li><p>启动<code>nginx</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以启动有缺点</span></span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐启动方式</span></span><br><span class="line">centos6 / ubuntu: service nginx start <span class="comment"># 启动服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 高版本 Linux / ubuntu</span></span><br><span class="line">systemctl start nginx  <span class="comment"># 启动 nginx 服务</span></span><br><span class="line">systemctl stop nginx <span class="comment"># 关闭 nginx 服务</span></span><br><span class="line">systemctl restart nginx <span class="comment"># 重启 nginx</span></span><br><span class="line">systemctl status nginx <span class="comment"># 查看 nginx 状态</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nginx <span class="comment"># 开机自启</span></span><br><span class="line">systemctl <span class="built_in">disable</span> nginx <span class="comment"># 关闭开机自启</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>通过公网<code>IP</code>访问,进入首页</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/rehatNginx.png" width="600" heihgt="200" alt="nginx"></li><li><p>访问不了的话查看安全组(<code>添加端口号: 80</code>,阿里云防火墙只开启 <code>22</code>)</p></li></ul></li><li><p>停止<code>nginx</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure></li><li><p>卸载<code>nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove nginx</span><br></pre></td></tr></table></figure></li><li><p>静态资源存放路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/nginx/html [腾讯云]</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nginxHt.png"></li></ul><h3 id="Nginx-常见配置"><a href="#Nginx-常见配置" class="headerlink" title="Nginx 常见配置"></a>Nginx 常见配置</h3><ul><li><p>全局段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置影响 nginx 全局的指令,一般有运行 nginx 服务器的用户组, nginx 进程 pid 存放路径,允许生成 worker process 数等</span><br></pre></td></tr></table></figure></li><li><p><code>events</code>段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置影响 nginx 服务与用户的网络连接,有每个进程的最大链接数、选取那种事件驱动模型处理连接请求，是否允许同时接受多个网络连接，开启多个网络连接序列化等。</span><br></pre></td></tr></table></figure></li><li><p><code>http段</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以嵌套多个 server、配置代理、缓存、日志定义等绝大数功能和第三方模块的配置、如文件引入，mime-type定义，日志自定义，是否使用 sendfile 传输文件、连接超时等时间，单连接请求数等。</span><br></pre></td></tr></table></figure></li><li><p><code>server段</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置虚拟主机的相关参数m主要有 IP 地址、端口号、域名</span><br></pre></td></tr></table></figure></li><li><p><code>location段</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置请求的处理方式</span><br></pre></td></tr></table></figure></li></ul><h3 id="代理"><a href="#代理" class="headerlink" title="代理:"></a>代理:</h3><ul><li><p>正向代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在客户端(浏览器)配置代理服务器,通过代理服务器进行互联网访问。</span><br></pre></td></tr></table></figure></li><li><p>反向代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upstream&#123;</span><br><span class="line">···</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><h3 id="其他安装软件方法"><a href="#其他安装软件方法" class="headerlink" title="其他安装软件方法"></a>其他安装软件方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 搜索</span></span><br><span class="line">yum search install-package-name </span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">yum install -y install-package-name </span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">yum remove -y uninstall-package-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数意义</span></span><br><span class="line">-y 遇到自动 yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索 python</span></span><br><span class="line">yum search python3 | grep programing <span class="comment"># 源代码构建安装</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 软件更新,更新所有</span></span><br><span class="line">yum update -y </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Re在线练习</title>
      <link href="2021/01/12/Python-Re%E5%9C%A8%E7%BA%BF%E7%BB%83%E4%B9%A0/"/>
      <url>2021/01/12/Python-Re%E5%9C%A8%E7%BA%BF%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-Re在线练习"><a href="#Python-Re在线练习" class="headerlink" title="Python-Re在线练习"></a>Python-Re在线练习</h3><ul><li><p>在线网站: <a href="https://regexone.com/lesson/letters_and_digits?">前往练习</a></p></li><li><p>规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Lesson Notes</span><br><span class="line">abc…Letters</span><br><span class="line">123…Digits</span><br><span class="line">\dAny Digit</span><br><span class="line">\DAny Non-digit character</span><br><span class="line">.Any Character</span><br><span class="line">\.Period</span><br><span class="line">[abc]Only a, b, or c</span><br><span class="line">[^abc]Not a, b, nor c</span><br><span class="line">[a-z]Characters a to z</span><br><span class="line">[0-9]Numbers 0 to 9</span><br><span class="line">\wAny Alphanumeric character</span><br><span class="line">\WAny Non-alphanumeric character</span><br><span class="line">&#123;m&#125;m Repetitions</span><br><span class="line">&#123;m,n&#125;m to n Repetitions</span><br><span class="line">*Zero or more repetitions</span><br><span class="line">+One or more repetitions</span><br><span class="line">?Optional character</span><br><span class="line">\sAny Whitespace</span><br><span class="line">\SAny Non-whitespace character</span><br><span class="line">^…$Starts and ends</span><br><span class="line">(…)Capture Group</span><br><span class="line">(a(bc))Capture Sub-group</span><br><span class="line">(.*)Capture all</span><br><span class="line">(abc|def)Matches abc or def</span><br></pre></td></tr></table></figure></li></ul><h3 id="基础练习"><a href="#基础练习" class="headerlink" title="基础练习"></a>基础练习</h3><h4 id="或-："><a href="#或-：" class="headerlink" title="或 ："></a>或 ：</h4><ul><li><p>练习一</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">abc123xyz</td></tr><tr><td align="center">Match</td><td align="center">define”123”</td></tr><tr><td align="center">Match</td><td align="center">var g =  123</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>个人: <code>[a-z]+ | \s [\d]+ | [&quot;123&quot;]</code></p></div></div></li><li><p>练习二</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">cat.</td></tr><tr><td align="center">Match</td><td align="center">896.</td></tr><tr><td align="center">Match</td><td align="center">?=+.</td></tr><tr><td align="center">Skip</td><td align="center">abc1</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>答案: <code>...\.</code></p></div></div></li><li><p>练习三</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">can</td></tr><tr><td align="center">Match</td><td align="center">man</td></tr><tr><td align="center">Match</td><td align="center">fan</td></tr><tr><td align="center">Skip</td><td align="center">dan</td></tr><tr><td align="center">Skip</td><td align="center">ran</td></tr><tr><td align="center">Skip</td><td align="center">pan</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>理解:  <code>Skip是排除在外的</code></p><p>个人答案: <code>[cmf]an</code></p></div></div></li><li><p>练习三</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">hog</td></tr><tr><td align="center">Match</td><td align="center">dog</td></tr><tr><td align="center">Skip</td><td align="center">bog</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>个人答案: <code>[hd]og</code></p></div></div></li></ul><h4 id="非"><a href="#非" class="headerlink" title="非:"></a>非:</h4><ul><li><p>练习一</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">Ana</td></tr><tr><td align="center">Match</td><td align="center">Bob</td></tr><tr><td align="center">Match</td><td align="center">Cpc</td></tr><tr><td align="center">Skip</td><td align="center">aax</td></tr><tr><td align="center">Skip</td><td align="center">bby</td></tr><tr><td align="center">Skip</td><td align="center">ccz</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>个人答案:  [^(a-c)]</p></div></div></li><li><p>练习二</p><table><thead><tr><th align="center">Task</th><th align="center">Text</th></tr></thead><tbody><tr><td align="center">Match</td><td align="center">aaaabcc</td></tr><tr><td align="center">Match</td><td align="center">aabbbbc</td></tr><tr><td align="center">Match</td><td align="center">aacc</td></tr><tr><td align="center">Skip</td><td align="center">a</td></tr></tbody></table><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看    </button><div class="hide-content"><p>个人答案:  <code>a*b*c</code></p></div></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm-Settings</title>
      <link href="2021/01/12/Pycharm-Settings/"/>
      <url>2021/01/12/Pycharm-Settings/</url>
      
        <content type="html"><![CDATA[<h3 id="解释器选择"><a href="#解释器选择" class="headerlink" title="解释器选择"></a>解释器选择</h3><ul><li>推荐<code>Anaconda</code>安装</li><li>为<code>Pycharm</code>使用<code>anaconda</code>作为<code>python</code>解释器</li></ul><h3 id="去除Pycharm的各种波浪线"><a href="#去除Pycharm的各种波浪线" class="headerlink" title="去除Pycharm的各种波浪线"></a>去除Pycharm的各种波浪线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File --&gt; Setting --&gt; Editor --&gt; Colors Scheme --&gt; General</span><br><span class="line"></span><br><span class="line">右侧区域: Errors and Warnings</span><br></pre></td></tr></table></figure><ul><li><p>去除后</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/lineP.png"></li></ul><h3 id="注释修改"><a href="#注释修改" class="headerlink" title="注释修改"></a>注释修改</h3><ul><li><p>颜色修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">settings -&gt; Editor -&gt; Color Scheme -&gt; python</span><br><span class="line"></span><br><span class="line">右侧区域: Line Comment</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/finshPych.png"></li></ul><h3 id="Pycharm-结合git使用"><a href="#Pycharm-结合git使用" class="headerlink" title="Pycharm 结合git使用"></a>Pycharm 结合git使用</h3><ul><li><p>新建项目存储路径(上传<code>github</code>或者<code>gitee</code>)</p><ul><li><p>打开<code>pycharm</code>,选择<code>Get from VCS</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitp.png"></li><li><p>获取远程地址，修改本地仓库位置</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210112094245.png"></li></ul></li><li><p>直观显示差异</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitPych.png"></li></ul><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><ul><li><p>个人使用主题: <code>One Dark Visid Italic</code> ,<a href="https://plugins.jetbrains.com/search?products=pycharm">前往官网选择</a></p></li><li><p>常规设置</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/baseSet.png"></li></ul><h3 id="导入基本配置-上传云保留"><a href="#导入基本配置-上传云保留" class="headerlink" title="导入基本配置,上传云保留"></a>导入基本配置,上传云保留</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/export.png"><h3 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/TerMinal.png"><h3 id="阅读配置"><a href="#阅读配置" class="headerlink" title="阅读配置"></a>阅读配置</h3><ul><li><p>配置空格显示与函数之间进行区分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Settings --&gt; Appearance --&gt; :</span><br><span class="line"></span><br><span class="line">1. show line number </span><br><span class="line"></span><br><span class="line">2. show method separators</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/settings.png"></li></ul><h3 id="格式化添加空格"><a href="#格式化添加空格" class="headerlink" title="格式化添加空格"></a>格式化添加空格</h3><ul><li><p>在格式化后等号两边自动添加空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">settings --&gt; Code style --&gt; python --&gt; Space</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/codeFormat.png"><ul><li><p>最终效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/finishCode.png"></li></ul></li></ul><h3 id="多行编辑"><a href="#多行编辑" class="headerlink" title="多行编辑"></a>多行编辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">双击 ctrl, 按住 ctrl, 上下键移动</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/ctrlss.png">]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Anaconda安装与使用</title>
      <link href="2021/01/11/Python-Anaconda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2021/01/11/Python-Anaconda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-Anaconda安装与使用"><a href="#Python-Anaconda安装与使用" class="headerlink" title="Python-Anaconda安装与使用"></a>Python-Anaconda安装与使用</h3><h4 id="1-Anaconda-安装-推荐"><a href="#1-Anaconda-安装-推荐" class="headerlink" title="1. Anaconda 安装(推荐)"></a>1. Anaconda 安装(推荐)</h4><ul><li><p>安装 <code>Anaconda</code></p><blockquote><p>维基百科: Anaconda是一个免费开源的Python和R语言的发行版本，用于计算科学，Anaconda致力于简化软件包管理系统和部署。Anaconda的包使用软件包管理系统Conda进行管理。</p></blockquote></li></ul><ol><li> 进入官网进行软件包下载: <a href="https://www.anaconda.com/products/individual"> 点击前往Anaconda 官网</a></li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/anaconda.png" width="400"><ol start="2"><li><p> 下载后进行正常安装即可</p></li><li><p>很重要的一步</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/anacondai.png" width="400"></li><li><p>忘记步骤3时: 配置<code>Anaconda</code>环境变量 <code>Eg. D:\ProgramData\Anaconda3</code></p></li><li><p>测试安装<code>conda --version</code>,输出版本号即为安装成功</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210111110046.png"></li><li><p>  全局升级</p></li></ol><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Anaconda 的 Scripts 路径下执行</span></span><br><span class="line"> </span><br><span class="line">    conda update --<span class="built_in">all</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></code></pre><h4 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h4><ul><li><p>发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pycharm 后台会自行下载一些东西,电脑风扇可能会加快转速</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>作为<code>Pycharm</code>的解释器,环境包很多,后续几乎不用再进行安装</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/pycharmA.png" title=""></li><li><p><code>Jupyter NoteBook</code>不用再单独进行安装,已经集成再<code>Anaconda</code>环境中</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/jupyterN.png"></li><li><p><code>Jupyter Notebook</code>主题(Dos 窗口下执行)</p><ol><li><p>安装主题库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyterthemes</span><br></pre></td></tr></table></figure></li><li><p> 列出可选主题</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -l (小写 L )</span><br></pre></td></tr></table></figure><ol start="3"><li><p>主题选择</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -t choice-themes-name</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/jtl.png" width="400"></li></ol></li><li><p>恢复默认主题（建议使用默认主题）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jt -r</span><br><span class="line"></span><br><span class="line">注意: 运行后需要删除浏览器缓存 </span><br></pre></td></tr></table></figure><p>Google Chrome:浏览器： <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>Del</kbd></p></li><li><p>设置字体大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 markdown 和 notebook（界面）字体、字体大小</span></span><br><span class="line">jt -t oceans16 -tf merriserif -tfs 10 -nf ptsans -nfs 13</span><br></pre></td></tr></table></figure></li><li><p>调正单元格屏幕宽度％</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不建议执行 </span></span><br><span class="line">jt -t chesterish -cellw 90% -lineh 170</span><br></pre></td></tr></table></figure></li><li><p>参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">jt -t chesterish：选择皮肤（chesterish）</span><br><span class="line">-f consolamono：代码的字体（consolamono）</span><br><span class="line">-fs 140：代码字体大小（140）</span><br><span class="line">-altp：Alt键提示布局（默认）</span><br><span class="line">-tfs 13：Text/MD 单元格字体大小（13）</span><br><span class="line">-nfs 115：Notebook 字体大小（115）</span><br><span class="line">-ofs 14：输出面积字形大小（14）</span><br><span class="line">-cellw 80%：单元格的宽度（80%）</span><br><span class="line">-T：工具栏可见</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-第三方包安装"><a href="#3-第三方包安装" class="headerlink" title="3. 第三方包安装"></a>3. 第三方包安装</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择自己的解释器对应使用 </span></span><br><span class="line"></span><br><span class="line">conda解释器: conda install package-name</span><br><span class="line">    </span><br><span class="line">windows全局解释器: pip/pip3 install package-name</span><br><span class="line">    </span><br><span class="line">也可以添加镜像加速下载:</span><br><span class="line">    </span><br><span class="line">    推荐清华镜像: https://mirrors.tuna.tsinghua.edu.cn/<span class="built_in">help</span>/pypi/ </span><br><span class="line">    </span><br><span class="line">    其他可自行查阅</span><br></pre></td></tr></table></figure><h3 id="更新提示"><a href="#更新提示" class="headerlink" title="更新提示:"></a>更新提示:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">update: 2021.01.12  9:07:23</span><br><span class="line"></span><br><span class="line">prompt: 前面提及到的包</span><br><span class="line"></span><br><span class="line">注意: </span><br><span class="line">新手练习建议保留,由于 pip 下载一些所需环境超时难以下载</span><br><span class="line">     </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/notC.png" width="400" height="130" title="点击查看大图"><ul><li><p>更新后</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210112091551.png" width="400" height="130" title="点击查看大图"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦回童年</title>
      <link href="2021/01/10/%E6%88%91%E7%9A%84%E7%AB%A5%E5%B9%B4/"/>
      <url>2021/01/10/%E6%88%91%E7%9A%84%E7%AB%A5%E5%B9%B4/</url>
      
        <content type="html"><![CDATA[<h3 id="梦回童年-珍惜眼前人"><a href="#梦回童年-珍惜眼前人" class="headerlink" title="梦回童年,珍惜眼前人"></a>梦回童年,珍惜眼前人</h3><h4 id="童年事···"><a href="#童年事···" class="headerlink" title="童年事···"></a>童年事···</h4><p>   从哪里说起呢!</p><p>   在 2021-01-09 日晚 21:10左右时,由于家里过于安静,早早的睡着了，我做了一个梦,那个梦，很美好,可···，同学的一个电话将我惊醒,当时我心里那个气啊。</p><p>​        梦回童时,我极其喜悦,又在后悔现在,因为当初自己做了一些难以启齿的一些事。这些事情放在现在说起时,我的脸都是通红的。我看着眼前的事物,急忙起身,一切都是那么真实,黄牛,小黄狗,小花猫,它们都在,一声”xxx,快进来吃饭!“,将我拉进屋里,一切即是那么熟悉又是那么陌生,我看着眼前的人儿,我的妈妈,她还是那么瘦小,但是,做起事情来却一点也不马虎,她看向我了,心里还有点害怕,因为小时候,我可是一直处于棍棒的教育下,想想都可怕,都不知道自己是怎么过来的.</p><p>​         不想了,赶快吃完饭,我看着家里的一切,寻找起我的玩具呢,哦！想了想自己好像从没有玩具。失落,沮丧，许许多多不满的情绪一下子涌上心头.</p><p>​     时间一点点的来到 9 岁,这一年中,充满了许多变故,我很幸运,我们的家乡因为偏僻,它没有发生自然灾害,相对来说我们这里过的平顺,由于当初没有及时的通讯设备,一切外界的事物只能通过新闻联播获取。可在当初自己什么也不懂.</p><h4 id="与你初遇···"><a href="#与你初遇···" class="headerlink" title="与你初遇···"></a>与你初遇···</h4><p>  考试了,因为我刚开始在的学校，他没有试卷,我们(这里只有我和哥哥两个人)只能去很远的一处学校,幸好,老爸这个时候在家,他当天起的很早,让妈妈为我们早早的做了早饭,煮了几个鸡蛋带着,一路上,我们完全没有考试紧张,说说笑笑,也不知到过了几个小时,天已经蒙蒙亮了，我的腿走的很乏,爸爸说就到了,不远了,我一笑,心想老爸还骗我呢,自己却再也没有说什么.</p><p>  啊·，终于到了考点,我一想这是第一次遇见她，自己可得精神点,刚看到她的时候，她胖嘟嘟的,脸很红润,一笑露出两颗小虎牙。一切都是那么的美好，考试的铃声响起,我赶紧去自己的座位···</p><p>  由于她不认识现在的我,我只能一闪而过,因为在以后,我见了她居然不能说出一句话,两个人就像个陌生人。心里还有些许酸楚呢！</p><p>回到家中,父母问起考的怎么样时,自己也是一阵恍惚,居然想不起考了什么!</p><p>   爸爸没待几天又去工作了,我却什么也没说出口,爸爸督促妈妈,一定要抓紧我的学习,啊,想了想我真不是学习的料呢！</p><p>  洗了个澡,找衣服穿,可怎么也穿不上,看着这些衣服，哎····，一心拉着妈妈让给我卖新衣服,o,我又为这不富裕的家庭加重了一点负担,家里可是人多饭量大呢,虽然都是孩子，妈妈说也是,许久没有为你们几个添置新衣服了！也就许可了。</p><p>   开学了,en，这可真是可坏消息，一直被催促去上学,可当我到了学校时,听说，老师有事交不了了,我们这里没有老师了！，虽然都知道原因,自己却之能装作什么也不知道的样子，一切都是按部就班。 </p><p>   又到领新书的时候了,这一天,太阳很暖,我的姐姐极其不耐烦的为我跑东跑西,带我去找班级,领我去宿舍,为我默默的做着一个大人该承担的一切,还有点心疼的,自己却也被她的不耐烦惹得有点生气呢!心想: 老姐这是怎么回事!,可看着她做的那些事,心里一下就释然了.</p><p>  第二天到了,我迫不急待的冲进教室,等待老师调整座位,一切都是妙不可言,她的小个子正好和我是同桌，我特别欣喜，因为我又见到她了,她离我那么近, 就这样看着她,她一整天也没理睬我，就这样一个礼拜过去了,两个礼拜过去了,三个礼拜过去了,我有点沉不住气了···,我开始捣蛋了,惹她生气,她有点嫌弃我了呢,我赶紧停下自己愚昧的恶作剧,她理我了,虽然话语是那么的刺耳。可是我还是欣喜的,因为是她!</p><p>  她慢慢的对我转变了态度，还挺信任我,她居然让我传递小情书,她又开始欺骗我了,可是,hahahaha,她确不知道那些小东西没有几个是真实被传递到的,我还替他添油加醋了,自己越想越想笑,她不够的数量,我还替她补写,艾玛,真想抽下自己,这是我做的是吗？有点难以相信啊！</p><p>  我们每天都能遇见,我在吃饭的时候,她由于离家远,有时不回家,我就早早的吃完,赶紧去找她,陪她说说话,让她一个人不那么的无聊,辅导着她的小妹妹写作业,她和我的姐姐很像,她是那么的不耐烦,冲着她的小妹就发脾气了!一切都是那么的真实,我拍了拍自己,没有醒,这依然不是梦,我很开心,因为遇见!</p><p>  这天放假,你突然的经过我家,我是那么的不知所措,你也没有停留!</p><h4 id="有点冷了···"><a href="#有点冷了···" class="headerlink" title="有点冷了···"></a>有点冷了···</h4><p>  听说班里要转来个女孩子,o,她成了我的同桌,看着你有点小生气,我只好在招惹你,可你这次真的生气了,慢慢的,我们又变得极其陌生,你不再理我，我又变成了一个人了,沮丧呢!</p><p>  又到了放假的时刻,这个寒假格外的冷,我们不在见,因为我转校了,我再也不用走那么长的路程,每周两天就奔波于学校之间的路程，我到底是开心还是悲伤,在这冷冽的寒风中，脸色是煞白的,看不出一点情感,就这样,不知过了多久,我都开始淡忘你,可一不小心你又浮现再我的脑海里,那么的根深蒂固!</p><h4 id="回忆再起···"><a href="#回忆再起···" class="headerlink" title="回忆再起···"></a>回忆再起···</h4><p>  我姐有个同学,她和你的名字,就多了个姓氏,这次,一切思念犹如江河之水涛涛不觉得一涌而来,我期待拥有手机,一切都像是安排好了的,我莫名奇妙的加上了你的QQ,可我们之间的对话,并没有因为时间而冰释前嫌,你有点冷,冷的我难以接近,那晚,我们聊的很少，谁也没有提当初的事。</p><p>  我每天就看着QQ,将它置顶,我生怕错过了你的任何消息,我也没有主动发消息,可我却不在你的好友列表中了，</p><p>这年,高考了,我又回来了,我这是又遇见你了,你离我很近,却又那么遥远，再考试的日子里,你带我去了家里,我是那么的感激,还有点忐忑呢,因为这是第一次去女孩家里,我慌乱无措,可你却很淡然,这几天中,是另我难忘的,很快，考试的时间就是那么三天而已,最后一天了,你带我逛了很久,我想给你拍张照,却被你拒绝了,enen，我又迫不及待的逃离了,你挽留了,可我却没有停留,我又成了你好友列表中多余的一个了···,</p><h4 id="我的诉说···"><a href="#我的诉说···" class="headerlink" title="我的诉说···"></a>我的诉说···</h4><p>  时间真快,我已经 19 了,我再也没有顾虑,我向你诉说我的想法,我们依然是这么的平静,隔着手机,我们无话不谈,可是见了面,我们就像第一次遇到的陌生人! 我特别想关心你，可我没有做任何事,我的行为是那么的多余,我不知道自己该怎么做了，男生吗!不应该矫情,我有不快乐我就会有动态,我想通过这种方式想让你知道,可是不然····</p><p>  我在想,为什么冲动了,自己不说该多好,以致于我们相隔不足百米,低头不见抬头见的，现在处的是那么的尴尬,</p><h4 id="梦醒时分···"><a href="#梦醒时分···" class="headerlink" title="梦醒时分···"></a>梦醒时分···</h4><p>  电话铃声是那么刺耳，也是那么的令人讨厌,终究是梦!    我看着手机来电铃声,心里对他问候了个遍!我想对你说,我们不是朋友吗？为何却是陌生人？</p><h4 id="最后···"><a href="#最后···" class="headerlink" title="最后···"></a>最后···</h4><p>  我不希望你看到这篇文章,现在的安宁对我来说还挺不容易,我们没有喜悦也没有过于冷场,感谢遇见你,因为我的一生要遇到 8 万人之多,可我能记住的人不过尔尔,再次感谢遇见你,一切都是那么的美好···</p><p>  QQ音乐电台定时播放响起,一首 ”暗恋你十年,你让我成长不少“渐渐响起,第一次见她,那年 8 岁·········</p>]]></content>
      
      
      <categories>
          
          <category> 成长 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON-序列化</title>
      <link href="2021/01/06/JSON-%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2021/01/06/JSON-%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h3 id="JSON-序列化"><a href="#JSON-序列化" class="headerlink" title="JSON-序列化"></a>JSON-序列化</h3><ul><li><p>在线练习<code>JSON</code></p><blockquote><p><a href="https://www.json.cn//">JSON在线编译练习</a></p></blockquote></li><li><p><code>json</code>序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们把程序的各种类型数据对象 变成 表示该数据对象的字符串这个过程称之为 序列化</span><br><span class="line"></span><br><span class="line">而把字节字符串转化为 程序中的数据对象 这个过程称之为 反序列化</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">historyTransactions = [</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;time&#x27;</span>: <span class="string">&#x27;20170101070311&#x27;</span>,  <span class="comment"># 交易时间</span></span><br><span class="line">        <span class="string">&#x27;amount&#x27;</span>: <span class="string">&#x27;3088&#x27;</span>,  <span class="comment"># 交易金额</span></span><br><span class="line">        <span class="string">&#x27;productid&#x27;</span>: <span class="string">&#x27;45454455555&#x27;</span>,  <span class="comment"># 货号</span></span><br><span class="line">        <span class="string">&#x27;productname&#x27;</span>: <span class="string">&#x27;iphone7&#x27;</span>  <span class="comment"># 货名</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;time&#x27;</span>: <span class="string">&#x27;20170101050311&#x27;</span>,  <span class="comment"># 交易时间</span></span><br><span class="line">        <span class="string">&#x27;amount&#x27;</span>: <span class="string">&#x27;18&#x27;</span>,  <span class="comment"># 交易金额</span></span><br><span class="line">        <span class="string">&#x27;productid&#x27;</span>: <span class="string">&#x27;453455772955&#x27;</span>,  <span class="comment"># 货号</span></span><br><span class="line">        <span class="string">&#x27;productname&#x27;</span>: <span class="string">&#x27;奥妙洗衣液&#x27;</span>  <span class="comment"># 货名</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment"># ensure_ascii=False 中文编码不会改变, indent = 4 (输出格式化一样)</span></span><br><span class="line">jsonStr = json.dumps(historyTransactions, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line">print(jsonStr)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>反序列化操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 反序列化操作</span></span><br><span class="line">print(<span class="string">&#x27;------------------------------------&#x27;</span>)</span><br><span class="line">obj = json.loads(jsonStr)</span><br><span class="line">print(<span class="built_in">type</span>(obj))</span><br><span class="line">print(obj)</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>JSON</code>深度拷贝</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Json </tag>
            
            <tag> JSON 序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-基础</title>
      <link href="2021/01/03/Python-%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/03/Python-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-基础"><a href="#Python-基础" class="headerlink" title="Python-基础"></a>Python-基础</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 生成文件 pip freeze &gt; requirements.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 依赖项安装: pip install -r requirements.txt</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-格式化输出-format"><a href="#1-格式化输出-format" class="headerlink" title="1. 格式化输出 format"></a>1. 格式化输出 <code>format</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">person_name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line"></span><br><span class="line">person_age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line">person_sex = <span class="string">&#x27;男&#x27;</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    姓名: &#123;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    年龄: &#123;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    性别: </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(person_name, person_age, person_sex))</span><br></pre></td></tr></table></figure><h4 id="2-s"><a href="#2-s" class="headerlink" title="2. %s"></a>2. <code>%s</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">person_name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line"></span><br><span class="line">person_age = <span class="string">&#x27;18&#x27;</span></span><br><span class="line"></span><br><span class="line">person_sex = <span class="string">&#x27;男&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;姓名:%s 年龄:%s 性别:%s&#x27;</span>%(person_name,person_age,person_sex))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-input输入"><a href="#3-input输入" class="headerlink" title="3. input输入"></a>3. <code>input</code>输入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># input</span></span><br><span class="line"></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;请输入 python: &#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;学习语言: &#x27;</span>+name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-进制转换"><a href="#4-进制转换" class="headerlink" title="4. 进制转换"></a>4. 进制转换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-三目运算符"><a href="#5-三目运算符" class="headerlink" title="5. 三目运算符"></a>5. 三目运算符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 三目运算符</span></span><br><span class="line">a = <span class="number">4</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">result = a + b <span class="keyword">if</span> a &lt; b <span class="keyword">else</span> b - a</span><br><span class="line"><span class="comment"># 10 </span></span><br><span class="line">print(result) </span><br></pre></td></tr></table></figure><h4 id="6-if-语句"><a href="#6-if-语句" class="headerlink" title="6. if 语句"></a>6. <code>if</code> 语句</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if</span></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a&gt;b:</span><br><span class="line">    print(a)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(b)</span><br><span class="line">   </span><br></pre></td></tr></table></figure><h4 id="7-for-循环"><a href="#7-for-循环" class="headerlink" title="7.  for 循环"></a>7.  <code>for</code> 循环</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用系统 range 指定范围</span></span><br><span class="line">arr = [<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,&#123;<span class="string">&#x27;value&#x27;</span>:<span class="string">&#x27;bin&#x27;</span>&#125;]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">    print(arr[i])</span><br><span class="line"></span><br><span class="line">-------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 3 遍 hello world</span></span><br><span class="line"><span class="keyword">for</span> ia <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    print(<span class="string">&#x27;Hello world&#x27;</span>)</span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 九九乘法口诀表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;x&#123;&#125;=&#123;&#125;\t&#x27;</span>.<span class="built_in">format</span>(j, i, i*j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print()</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="8-for-else结构"><a href="#8-for-else结构" class="headerlink" title="8. for else结构"></a>8. <code>for else</code>结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pass 空语句</span></span><br></pre></td></tr></table></figure><h4 id="9-while循环"><a href="#9-while循环" class="headerlink" title="9. while循环"></a>9. <code>while</code>循环</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n&lt;=<span class="number">30</span>:</span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">3</span>==<span class="number">0</span> <span class="keyword">and</span> n%<span class="number">5</span>==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">&#x27;----------------&gt;&#x27;</span>,n)</span><br><span class="line">    n+=<span class="number">1</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># python 独有方法</span></span><br><span class="line">ceng = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> ceng&lt;=<span class="number">5</span>:</span><br><span class="line">    print(<span class="string">&#x27;*&#x27;</span>*ceng)</span><br><span class="line">    </span><br><span class="line">    ceng+=<span class="number">1</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 逻辑</span></span><br><span class="line">ceng = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> ceng &lt;= <span class="number">5</span>:</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> count &lt;= ceng:</span><br><span class="line">        print(<span class="string">&#x27;*&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    print()</span><br><span class="line">    ceng += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="10-字符串"><a href="#10-字符串" class="headerlink" title="10. 字符串"></a>10. 字符串</h4><ul><li><p>常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line">s2 = <span class="string">&quot;abc&quot;</span></span><br><span class="line">s3 = <span class="string">&#x27;&#x27;&#x27;abc&#x27;&#x27;&#x27;</span></span><br><span class="line">print(<span class="built_in">id</span>(s1),<span class="built_in">id</span>(s2),<span class="built_in">id</span>(s3))</span><br><span class="line"></span><br><span class="line">s1: <span class="number">2128137317424</span></span><br><span class="line">s2: <span class="number">2128137317424</span> </span><br><span class="line">s3: <span class="number">2128137317424</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 三引号占用的内存空间与单双引号不同</span></span><br><span class="line"></span><br><span class="line">print(s1==s2) <span class="comment"># 比较的是内容 True</span></span><br><span class="line">print(s1 <span class="keyword">is</span> s2) <span class="comment"># 比较的是地址 True</span></span><br></pre></td></tr></table></figure></li><li><p>变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="built_in">input</span>(<span class="string">&#x27;请输入:&#x27;</span>)</span><br><span class="line">s2 = <span class="built_in">input</span>(<span class="string">&#x27;请输入:&#x27;</span>)</span><br><span class="line">print(s1==s2) <span class="comment"># True</span></span><br><span class="line">print(s1 <span class="keyword">is</span> s2) <span class="comment"># False ,常量是True， input()底层做了处理，所以最后地址是不一样的</span></span><br></pre></td></tr></table></figure></li><li><p>切片使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">filename = <span class="string">&#x27;picture.png&#x27;</span></span><br><span class="line"></span><br><span class="line">filename[<span class="number">5</span>] <span class="comment"># 从0 开始 取第 5 位</span></span><br><span class="line"></span><br><span class="line">filename[<span class="number">0</span>:<span class="number">5</span>] <span class="comment"># 取出 5 位</span></span><br><span class="line"></span><br><span class="line">filename[::-<span class="number">1</span>] <span class="comment"># 倒叙输出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>字符串的内置方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大小写相关</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;abc bb&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.capitalize()) <span class="comment"># 首字母大写 Abc bb</span></span><br><span class="line">print(<span class="built_in">str</span>.title()) <span class="comment">#  单词的每个首字母大写 Abc Bb</span></span><br><span class="line">print(<span class="built_in">str</span>.upper()) <span class="comment"># 所有字母大写 ABC BB</span></span><br><span class="line">print(<span class="built_in">str</span>.lower()) <span class="comment"># 所有字母小写  abc bb</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>随机数应用(验证码)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 验证码案例</span></span><br><span class="line">code = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">s = <span class="string">&#x27;QWERTYUIOPASDFGHJKLZXCBN&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    ran = random.randint(<span class="number">1</span>, <span class="built_in">len</span>(s) - <span class="number">1</span>)</span><br><span class="line">    code += s[ran]</span><br><span class="line">print(code)</span><br><span class="line">user_input = <span class="built_in">input</span>(<span class="string">&#x27;请输入验证码: &#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> user_input.lower() == code.lower():</span><br><span class="line">    print(<span class="string">&#x27;验证码输入正确&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;验证码输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>查找相关的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find()  rfind() lfind() index rindex() replace()</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;abcd&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.find(<span class="string">&#x27;e&#x27;</span>)) <span class="comment"># 找不见返回 -1 ,找见输出起始位置</span></span><br><span class="line">print(<span class="built_in">str</span>.rfind(<span class="string">&#x27;e&#x27;</span>)) <span class="comment"># 找不见返回 -1 ,找见输出起始位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index() 找不见报异常</span></span><br><span class="line"><span class="comment"># ValueError: substring not found</span></span><br><span class="line">      </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rfind()</span></span><br><span class="line">x = path.rfind(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">filename = path[x+<span class="number">1</span>::]</span><br><span class="line">print(filename)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># replace()</span></span><br><span class="line"></span><br><span class="line">replace(old,new[,<span class="built_in">max</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将空格替换为 # 号</span></span><br><span class="line">s1 = <span class="string">&#x27;indec lucy luks gooes&#x27;</span></span><br><span class="line">s2 = s1.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">print(s2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定替换的做大次数</span></span><br><span class="line">s2 = s1.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li><p>编码相关</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encode 编码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># decode 解码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码编码</span></span><br><span class="line">msg = <span class="string">&#x27;人生苦短,我学 Python&#x27;</span></span><br><span class="line"><span class="comment"># encode(&#x27;指定编码&#x27;) decode(&#x27;&#x27;)</span></span><br><span class="line">result = msg.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">decode =result.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">print(decode)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>endswith() startwith()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">应用: 文件上传 只能上传(jpg，png,bmp,gif)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 返回值都是布尔类型 True False  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># endswith() </span></span><br><span class="line">filename = <span class="string">&#x27;python.png&#x27;</span></span><br><span class="line">result = filename.endswith(<span class="string">&#x27;png&#x27;</span>) <span class="comment">#  filename 是否以 png 结尾</span></span><br><span class="line">print(result) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="comment"># startwith() </span></span><br><span class="line">s = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">result = s.startswith(<span class="string">&#x27;he&#x27;</span>) <span class="comment"># 判断是否以 he 开头</span></span><br><span class="line">print(result) <span class="comment"># True </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>join</code>使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># join</span></span><br><span class="line">new_str = <span class="string">&#x27;_&#x27;</span>.join(<span class="string">&#x27;abc&#x27;</span>) <span class="comment"># 用符号连接字符串</span></span><br><span class="line">print(new_str) <span class="comment"># a_b_c</span></span><br></pre></td></tr></table></figure></li><li><p>去除左右空格</p><ul><li><p>去除左边空格</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去除左空格</span></span><br><span class="line">s = <span class="string">&#x27;   hello &#x27;</span></span><br><span class="line">s = s.lstrip()</span><br><span class="line">print(s+<span class="string">&#x27;1&#x27;</span>) <span class="comment"># hello  1</span></span><br></pre></td></tr></table></figure></li><li><p>去除右边空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 去除右空格</span><br><span class="line">s &#x3D; &#39;   hello &#39;</span><br><span class="line">s &#x3D; s.rstrip()</span><br><span class="line">print(&#39;a&#39;+s+&#39;1&#39;) # a   hello1</span><br></pre></td></tr></table></figure></li><li><p>去除左右两边的空格</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同时去除空格</span></span><br><span class="line">s = <span class="string">&#x27;   hello  &#x27;</span></span><br><span class="line">s = s.strip()</span><br><span class="line">print(<span class="string">&#x27;a&#x27;</span>+s+<span class="string">&#x27;1&#x27;</span>) <span class="comment"># ahello1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>分割字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split(&#x27;指定字符切割&#x27;,&#x27;分割次数 int &#x27;)</span></span><br><span class="line">s = <span class="string">&#x27;hello world hello kitty&#x27;</span></span><br><span class="line">result = s.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果是 列表</span></span><br><span class="line"><span class="comment"># [&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;hello&#x27;, &#x27;kitty&#x27;]</span></span><br></pre></td></tr></table></figure></li><li><p>求取定个数(统计)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;aaaaaaaaa&#x27;</span></span><br><span class="line">s.count(<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="11-列表"><a href="#11-列表" class="headerlink" title="11. 列表"></a>11. 列表</h4><ul><li><p>遍历列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(movies)):</span><br><span class="line">    print(movies[i])</span><br></pre></td></tr></table></figure></li><li><p>修改列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">branch = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line">branch[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">print(branch) <span class="comment"># [0, &#x27;b&#x27;, &#x27;c&#x27;]</span></span><br></pre></td></tr></table></figure></li><li><p>列表元素删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> branch[<span class="number">0</span>]</span><br><span class="line">print(branch)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除相关</span></span><br><span class="line">remove()</span><br><span class="line">pop()</span><br><span class="line">clear()</span><br></pre></td></tr></table></figure></li><li><p>列表的切片操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">branch[<span class="number">1</span>::]</span><br><span class="line">print(branch[<span class="number">1</span>::])</span><br></pre></td></tr></table></figure></li><li><p>列表的函数使用</p><ul><li><p><code>append()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># append() 末尾追加</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>extend()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># extend() </span></span><br><span class="line"></span><br><span class="line">+、  extends() 列表的合并</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>insert()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">指定位置插入</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>列表的排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">100</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">45</span>,<span class="number">11</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认升序</span></span><br><span class="line"><span class="built_in">sorted</span>(列表)</span><br><span class="line"><span class="comment"># print(sorted(a)) [1, 5, 11, 20, 45, 100]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 翻转</span></span><br><span class="line"><span class="built_in">sorted</span>(a, reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># print(sorted(a, reverse=True)) [100, 45, 20, 11, 5, 1]</span></span><br></pre></td></tr></table></figure></li><li><p>冒泡排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>选择排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h4 id="12-元组"><a href="#12-元组" class="headerlink" title="12 . 元组"></a>12 . 元组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">特点: </span><br><span class="line">    <span class="number">1.</span> 定义的符号: ()</span><br><span class="line">    <span class="number">2.</span> 元组中的内容不可修改</span><br><span class="line">    <span class="number">3.</span> 关键字: <span class="built_in">tuple</span></span><br><span class="line">    </span><br><span class="line">    只能执行 查 的操作</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  random</span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    ran = random.randint(<span class="number">1</span>,<span class="number">20</span>)</span><br><span class="line">    list1.append(ran)</span><br><span class="line">print(list1)</span><br><span class="line">t = <span class="built_in">tuple</span>(list1)</span><br><span class="line">print(t)</span><br><span class="line"></span><br><span class="line">[<span class="number">3</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">7</span>, <span class="number">19</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">15</span>]</span><br><span class="line">(<span class="number">3</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">7</span>, <span class="number">19</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用列表进行增删改查</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="13-字典"><a href="#13-字典" class="headerlink" title="13. 字典"></a>13. 字典</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 空字典 dict1 = dict()</span></span><br><span class="line"><span class="comment"># 空列表 list1 = list()</span></span><br><span class="line"><span class="comment"># 空元组 tuple1 = tuple()</span></span><br><span class="line"><span class="built_in">dict</span> = &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li><p>增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span>[key] = value;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同名则为修改</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> 字典名[key]</span><br><span class="line"></span><br><span class="line">对应的函数:</span><br><span class="line">    字典名.remove(<span class="string">&#x27;key&#x27;</span>) <span class="comment"># 没有报错</span></span><br><span class="line">    字典名.pop(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">    字典名.clear()</span><br><span class="line">    字典名.popitem()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">注意:</span><br><span class="line">    pop([key,default])</span><br><span class="line">    根据 key 删除字典中的键值对,返回值是 只要删除成功，怎返回键值对的值 value</span><br><span class="line">    pop 的默认值,往往是在删除的时候没有找到对应的 key ，则返回 default 默认值</span><br><span class="line">    </span><br><span class="line">    popitem(): 随机删除字典中键值对(一般都是从末尾删除元素)</span><br><span class="line">        </span><br></pre></td></tr></table></figure></li><li><p>修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同名则为修改</span></span><br></pre></td></tr></table></figure></li><li><p>查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span>[key]</span><br></pre></td></tr></table></figure></li><li><p>字典的拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update() </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210104101610.png"></li></ul><ul><li><p>形式转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fromkeys(seq)</span><br><span class="line"></span><br><span class="line">将 seq 转成字典的形式,如果没有指定默认的 value 则用 <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">list1 = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line">new_dict = <span class="built_in">dict</span>.fromkeys(list1);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="14-集合"><a href="#14-集合" class="headerlink" title="14. 集合"></a>14. 集合</h4><ul><li><p>关键字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">集合: <span class="built_in">set</span> 关键字 无序不重复的元素</span><br><span class="line">    </span><br><span class="line">作用: 不重复的特点</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>声明集合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>() <span class="comment"># 创建空集合,只能使用 set()</span></span><br></pre></td></tr></table></figure></li><li><p>应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">newList = <span class="built_in">set</span>(list1)</span><br><span class="line">print(newList) <span class="comment"># &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>增</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="built_in">set</span>()</span><br><span class="line"><span class="comment"># 增</span></span><br><span class="line"><span class="comment"># 增加一个</span></span><br><span class="line">    s1.add(<span class="string">&#x27;add-01&#x27;</span>)</span><br><span class="line">    s1.add(<span class="string">&#x27;add-02&#x27;</span>)</span><br><span class="line">    s1.add(<span class="string">&#x27;add-03&#x27;</span>)</span><br><span class="line">    print(s1) <span class="comment"># &#123;&#x27;add-03&#x27;, &#x27;add-01&#x27;, &#x27;add-02&#x27;&#125;</span></span><br><span class="line"><span class="comment"># 增加多个</span></span><br><span class="line">update()</span><br><span class="line">    t1 = (<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">    s1.update(t1)</span><br><span class="line">    print(s1) <span class="comment"># 输出无序</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>删</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">remove() <span class="comment"># 存在删除,没有报错 keyValue</span></span><br><span class="line">pop() <span class="comment"># 随机删除,在集合中删除第一个</span></span><br><span class="line">clear() <span class="comment"># 清空</span></span><br><span class="line"></span><br><span class="line">dicard() <span class="comment"># 类似remove() 在移除没有元素不报错</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>改</p></li><li><p>查</p></li><li><p>可变和不可变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">不可变: 对象指向的内存中的值是不可以改变</span><br><span class="line">    </span><br><span class="line">不可变的类型: <span class="built_in">int</span> <span class="built_in">str</span> <span class="built_in">float</span> 元组<span class="built_in">tuple</span></span><br><span class="line">    </span><br><span class="line">----------------------------------------------    </span><br><span class="line">    </span><br><span class="line">可变的； 对象所指向的内存中的值是可以改变的</span><br><span class="line"></span><br><span class="line">可变类型: 字典<span class="built_in">dict</span>  列表<span class="built_in">list</span></span><br><span class="line">    </span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>类型转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>()  <span class="built_in">int</span>()  <span class="built_in">list</span>()  <span class="built_in">dict</span>()  <span class="built_in">set</span>()  <span class="built_in">tuple</span>()</span><br></pre></td></tr></table></figure><ul><li><p><code>str</code>可转类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> <span class="built_in">list</span> <span class="built_in">set</span> <span class="built_in">tuple</span></span><br><span class="line"></span><br><span class="line">----------------------------  str--&gt; int  --------------------</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;1234&#x27;</span> <span class="comment"># 字符串类型</span></span><br><span class="line">i = <span class="built_in">int</span>(s) <span class="comment"># 字符串转换为数字</span></span><br><span class="line">print(<span class="built_in">type</span>(i)) <span class="comment"># &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">-----------------------------  str--&gt; list --------------------</span><br><span class="line">list1 = <span class="built_in">list</span>(s)</span><br><span class="line">print(list1) <span class="comment"># [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;]</span></span><br><span class="line"></span><br><span class="line">-----------------------------  str--&gt; set --------------------</span><br><span class="line"></span><br><span class="line">set1 = <span class="built_in">set</span>(s)</span><br><span class="line">print(set1) <span class="comment"># &#123;&#x27;3&#x27;, &#x27;4&#x27;, &#x27;1&#x27;, &#x27;2&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line">-----------------------------  str--&gt; tuple --------------------</span><br><span class="line">tupl1 = <span class="built_in">tuple</span>(s)</span><br><span class="line">print(tupl1) <span class="comment"># (&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>list</code>可转类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>()  <span class="built_in">tuple</span>() 可以转换成字典 [(key,value),()···]</span><br></pre></td></tr></table></figure></li><li><p><code>dict可转类型</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span></span><br></pre></td></tr></table></figure></li><li><p><code>tuple可转类型</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span></span><br></pre></td></tr></table></figure></li><li><p><code>set可转类型</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="15-函数"><a href="#15-函数" class="headerlink" title="15. 函数"></a>15. 函数</h4><ul><li><p>函数简介</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">作用: 将重复的代码,封装到函数,只要使用直接找函数 函数可以增强代码的模块化和提高代码的重复利用率</span><br><span class="line">    </span><br><span class="line">格式:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> 函数名:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>拆包装包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">装包: 把传递的参数,包装成一个集合,称之为“装包”</span><br><span class="line">    </span><br><span class="line">拆包: 把集合参数,再次分解成单独的个体,称之为<span class="string">&quot;拆包&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 封装一个求和函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">            <span class="built_in">sum</span> += i</span><br><span class="line">        print(<span class="built_in">sum</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;没有元素可以计算&#x27;</span>)</span><br><span class="line">add()</span><br><span class="line">add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">注意: 可变参数必须放在后面</span><br></pre></td></tr></table></figure></li><li><p>关键字参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关键字参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a,b=<span class="number">1</span></span>):</span></span><br><span class="line">    print(a+b)</span><br><span class="line">add(<span class="number">1</span>,<span class="number">2</span>) <span class="comment"># 3  b=1 相当于默认值，后来的值会将其覆盖</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可变 值必须是 key=value</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">**args</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">调用函数时有 ** 叫拆包</span><br><span class="line"></span><br><span class="line">定义时有 ** 叫装包</span><br><span class="line"></span><br><span class="line">应用:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bb</span>(<span class="params">a, b, *c, **d</span>):</span></span><br><span class="line">        print(a, b, c, d)</span><br><span class="line"></span><br><span class="line">    bb(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># 1 2 () &#123;&#125;</span></span><br><span class="line">    bb(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)  <span class="comment"># 1 2 (3, 4) &#123;&#125;</span></span><br><span class="line">    bb(<span class="number">1</span>, <span class="number">2</span>, x=<span class="number">100</span>, y=<span class="number">20</span>)  <span class="comment"># 1 2 () &#123;&#x27;x&#x27;: 100, &#x27;y&#x27;: 20&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>函数的返回值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">有 <span class="keyword">return</span> 需要用变量接受</span><br></pre></td></tr></table></figure></li><li><p><code>global</code>问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">函数内部声明的变量,局部变量</span><br><span class="line"></span><br><span class="line">声明在函数外侧的变量是全局变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>():</span></span><br><span class="line">    <span class="keyword">global</span> name <span class="comment"># 不修改全局变量,只是获取打印,但是如果要发生修改全局变量,则要在函数内部声明, global 变量名</span></span><br><span class="line">    </span><br><span class="line">全局变量如果是不可变在函数中进行修改需要添加 <span class="keyword">global</span> 关键字</span><br><span class="line">如果全局变量是可变的,在函数中修改的时候就不需要添加 <span class="keyword">global</span> </span><br></pre></td></tr></table></figure></li><li><p>嵌套函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span></span><br><span class="line">    <span class="comment"># 声明变量</span></span><br><span class="line">    n = <span class="number">100</span>  <span class="comment"># 局部变量</span></span><br><span class="line">    list1 = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 声明内部函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner_func</span>():</span></span><br><span class="line">        <span class="keyword">nonlocal</span> n <span class="comment"># 内部函数修改局部变量需要使用 nonlocal</span></span><br><span class="line">        <span class="comment"># 对 list1 的元素进行 +5 操作</span></span><br><span class="line">        <span class="keyword">for</span> index, i <span class="keyword">in</span> <span class="built_in">enumerate</span>(list1):</span><br><span class="line">            list1[index] = i + n</span><br><span class="line">        list1.sort()</span><br><span class="line">        print(list1)  <span class="comment">#  [102, 103, 105, 145]</span></span><br><span class="line">    inner_func()</span><br><span class="line">func()</span><br><span class="line"></span><br><span class="line">内部函数的特点:</span><br><span class="line">    <span class="number">1.</span> 可以访问外部函数的变量</span><br><span class="line">    <span class="number">2.</span> 内部函数可以修改外部函数的可变类型的变量 比如: list1</span><br><span class="line">    <span class="number">3.</span> 内部函数修改全局的不可变变量时,需要在内部函数声明 <span class="keyword">global</span> 变量名</span><br><span class="line">    内部函数修改外部函数的不可变的变量时,需要在内部函数中声明； <span class="keyword">nonlocal</span> 变量名</span><br><span class="line">  <span class="number">4.</span> <span class="built_in">locals</span>() 查看本地变量有哪些,以字典的形式输出</span><br><span class="line">    <span class="built_in">globals</span>() 可以查看全局变量有那些,以字典的形式输出(会出系统的一些键值对)</span><br></pre></td></tr></table></figure></li></ul><h4 id="16-闭包"><a href="#16-闭包" class="headerlink" title="16. 闭包"></a>16. 闭包</h4><ul><li><p>闭包的概念</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在函数中提出的概念</span><br></pre></td></tr></table></figure></li><li><p>条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 外部函数中定义了内部函数</span><br><span class="line"><span class="number">2.</span> 外部函数是有返回值</span><br><span class="line"><span class="number">3.</span> 返回值是: 内部函数域名</span><br><span class="line"><span class="number">4.</span> 内部函数引用了外部函数的变量</span><br><span class="line"></span><br><span class="line">语法格式:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> 外部函数():</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> 内部函数():</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> 内部函数名</span><br></pre></td></tr></table></figure></li><li><p>闭包的应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>闭包的缺点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">闭包的缺点: </span><br><span class="line">    <span class="number">1.</span> 作用域没有那么直观</span><br><span class="line">    <span class="number">2.</span> 因为变量不会被垃圾回收所以有一定的内存占用问题</span><br></pre></td></tr></table></figure></li><li><p>闭包的作用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">闭包的作用: </span><br><span class="line">    <span class="number">1.</span> 可以使用同级的作用域</span><br><span class="line">    <span class="number">2.</span> 读取其他元素的内部变量</span><br><span class="line">    <span class="number">3.</span> 延长作用域</span><br></pre></td></tr></table></figure></li><li><p>闭包的总结</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">总结:</span><br><span class="line">    <span class="number">1.</span> 闭包似优化了变量,原来需要类对象完成工作,闭包也可以完成</span><br><span class="line">    <span class="number">2.</span> 由于闭包引用；额外部函数的局部变量,则外部函数的局部变量没有及时释放,消耗内存</span><br><span class="line">    <span class="number">3.</span> 闭包的好处,使代码变得简洁,便于阅读代码</span><br><span class="line">    <span class="number">4.</span> 闭包是理解装饰器的基础</span><br></pre></td></tr></table></figure></li></ul><h4 id="17-装饰器-重点"><a href="#17-装饰器-重点" class="headerlink" title="17. 装饰器(重点)"></a>17. 装饰器(重点)</h4><ul><li><p>装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">特点: </span><br><span class="line">    <span class="number">1.</span> 函数 A 是作为参数出现的(函数B就会接受函数A作为参数)</span><br><span class="line">    <span class="number">2.</span> 要有闭包的特点</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 定义一个装饰器 (含有闭包特点)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate</span>(<span class="params">func</span>):</span></span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>():</span></span><br><span class="line">        print(<span class="string">&#x27;----------------------&gt; 内部函数 输出&#x27;</span>)</span><br><span class="line">        func()</span><br><span class="line">        print(<span class="string">&#x27;----------------------- 111111111111112222222222222&#x27;</span>, a)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用装饰器</span></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">house</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;我是毛坯房······················&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">house()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>带参数的装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*args,**kwargs 作为参数传递</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果装饰器是多层的,谁距离函数最近就优先使用那个装饰器</span><br></pre></td></tr></table></figure></li></ul><h4 id="18-匿名函数"><a href="#18-匿名函数" class="headerlink" title="18. 匿名函数"></a>18. 匿名函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">f = add</span><br><span class="line"></span><br><span class="line">s = <span class="keyword">lambda</span> a,b:a+b</span><br><span class="line"></span><br><span class="line">result = s(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210104145533.png"><ul><li><p>匿名函数作为参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>map()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">6</span>]</span><br><span class="line">result = <span class="built_in">map</span>(<span class="keyword">lambda</span> x:x <span class="keyword">if</span> x%<span class="number">2</span>==<span class="number">0</span> eldr x+<span class="number">1</span>,list1)</span><br><span class="line">print(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure></li><li><p><code>reduce()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对列表中的元素进行加减乘除运算的函数</span><br></pre></td></tr></table></figure></li><li><p><code>filter()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤出 大于 10 的数子</span></span><br><span class="line">list1 = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">19</span>]</span><br><span class="line">result = <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x &gt; <span class="number">10</span>, list1)</span><br><span class="line">print(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure></li><li><p>递归函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">普通函数: <span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span> <span class="keyword">pass</span></span><br><span class="line">匿名函数: <span class="keyword">lambda</span> 参数: 返回结果</span><br><span class="line">递归函数: 普通函数的一种表现形式</span><br></pre></td></tr></table></figure></li></ul><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><ul><li><p>文件操作</p><ul><li><p>文件读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 以 txt 文件练习  其他读取 有 gbk 错误</span></span><br><span class="line"><span class="comment"># 读取路径 print(os.getcwd()) D:\python就业视频\python基础</span></span><br><span class="line">stream = <span class="built_in">open</span>(<span class="string">r&#x27;D:\python就业视频\python基础\hello.txt&#x27;</span>)</span><br><span class="line">container = stream.read()</span><br><span class="line">txt = stream.readable()  <span class="comment"># 判断文件是否可读  True</span></span><br><span class="line">readLine = stream.readline()  <span class="comment"># 读取一行</span></span><br><span class="line">lines = stream.readlines()  <span class="comment"># 读取多行</span></span><br><span class="line">print(container, txt, readLine)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>文件写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mode = &#x27;a&#x27; </span></span><br><span class="line">stream = <span class="built_in">open</span>(<span class="string">r&#x27;D:\python就业视频\python基础\hello.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">print(stream.write(<span class="string">&#x27;aaaaaaaaaaaaaaaa&#x27;</span>))  <span class="comment"># 覆盖源文件</span></span><br><span class="line"></span><br><span class="line">print(stream.writelines(<span class="built_in">str</span>)) <span class="comment"># 保留源文件 追加</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>文件复制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;D:\python就业视频\python基础\hello.txt&#x27;</span>) <span class="keyword">as</span> stream:</span><br><span class="line">    container = stream.read()  <span class="comment"># 读取文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;D:\python就业视频\hello.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> writeFile:</span><br><span class="line">        writeFile.write(container)</span><br><span class="line">        print(<span class="string">&#x27;文件写入&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><code>os</code>模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径读取</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="异常机制"><a href="#异常机制" class="headerlink" title="异常机制"></a>异常机制</h3><ul><li><p>异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    可能出现异常的代码</span><br><span class="line"><span class="keyword">except</span> 类型<span class="number">1</span>:</span><br><span class="line">    如果有异常执行的代码</span><br><span class="line"><span class="keyword">except</span> 类型<span class="number">1</span>:</span><br><span class="line">    如果有异常执行的代码</span><br><span class="line">···</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    无论是否存在异常都会执行的代码</span><br></pre></td></tr></table></figure></li><li><p><code>try-except-else</code>结构:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>try-finally</code>结构:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>抛出异常(<code>126集</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 抛出异常</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refister</span>():</span></span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&#x27;请输入用户名: &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(username) &lt; <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;我是抛出的异常···&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;输入的用户名是: &#x27;</span> + username)</span><br><span class="line"><span class="comment"># 接受异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    refister()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br><span class="line">    print(<span class="string">&#x27;注册失败&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;注册成功&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="列表推导式-128集"><a href="#列表推导式-128集" class="headerlink" title="列表推导式(128集)"></a>列表推导式(<code>128集</code>)</h3><ul><li><p>列表推导式</p><ul><li><p><code>[表达式 for 变量 in 旧列表] </code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p><code>[表达式 for 变量 in 旧列表 if 条件]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">list1 = [<span class="number">10</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">90</span>, <span class="number">30</span>, <span class="number">60</span>]</span><br><span class="line"><span class="comment"># 取出 大于 10的数</span></span><br><span class="line">newList = [i <span class="keyword">for</span> i <span class="keyword">in</span> list1 <span class="keyword">if</span> i &gt;= <span class="number">10</span>]</span><br><span class="line">print(newList)</span><br></pre></td></tr></table></figure></li><li><p><code>if else</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;salary&#x27;</span>: <span class="number">5000</span>&#125;</span><br><span class="line">dict2 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;lucy&#x27;</span>, <span class="string">&#x27;salary&#x27;</span>: <span class="number">8000</span>&#125;</span><br><span class="line">dict3 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;salary&#x27;</span>: <span class="number">4500</span>&#125;</span><br><span class="line">dict4 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;lily&#x27;</span>, <span class="string">&#x27;salary&#x27;</span>: <span class="number">3000</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># if 薪资大于 5000 加 200,低于 5000 加 500</span></span><br><span class="line"></span><br><span class="line">newList = [person[<span class="string">&#x27;salary&#x27;</span>] + <span class="number">200</span> <span class="keyword">if</span> person[<span class="string">&#x27;salary&#x27;</span>] &gt; <span class="number">5000</span> <span class="keyword">else</span> person[<span class="string">&#x27;salary&#x27;</span>] + <span class="number">500</span> <span class="keyword">for</span> person <span class="keyword">in</span> list1]</span><br><span class="line">print(newList) <span class="comment"># [5500, 8200, 5000, 3500] </span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>字典推导式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集合推导式</span></span><br><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>]</span><br><span class="line">set1 = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> list1&#125;</span><br><span class="line">print(set1) <span class="comment"># &#123;1, 2, 3, 4, 5, 6&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>集合推导式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;B&#x27;</span>&#125;</span><br><span class="line">newdict = &#123;value: key <span class="keyword">for</span> key, value <span class="keyword">in</span> dict1.items()&#125;</span><br><span class="line">print(newdict) <span class="comment"># &#123;&#x27;A&#x27;: &#x27;a&#x27;, &#x27;B&#x27;: &#x27;b&#x27;&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在 python 中,这种一边循环一边计算的机制,称为生成器: generator</span><br><span class="line"></span><br><span class="line">得到生成器的方式:</span><br><span class="line">    <span class="number">1.</span> 列表推导式</span><br><span class="line">    <span class="number">2.</span> 借助函数完成 (<span class="keyword">yield</span>)</span><br><span class="line">    </span><br><span class="line">    注意: 只要函数中出现；了 <span class="keyword">yield</span> 关键字,说明函数就不是函数,就是生成器</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">步骤:</span><br><span class="line">    <span class="number">1.</span> 定义一个函数,函数中使用 <span class="keyword">yield</span> 关键字</span><br><span class="line">    <span class="number">2.</span> 调用函数,接受调用的结果</span><br><span class="line">    <span class="number">3.</span> 得到的结果就是生成器</span><br><span class="line">    <span class="number">4.</span> 借助于 <span class="built_in">next</span>()</span><br><span class="line">    </span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>():</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">g =  fun()</span><br><span class="line"><span class="comment"># next()  __next__()</span></span><br><span class="line">print(<span class="built_in">next</span>(g))</span><br></pre></td></tr></table></figure><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><ul><li><p>面向对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名[(<span class="params">父类</span>)]:</span></span><br><span class="line">    属性: 特征</span><br><span class="line">    方法: 动作</span><br></pre></td></tr></table></figure></li><li><p>构造器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>对象方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;call············&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">phone = Phone()</span><br><span class="line"><span class="comment"># 通过对象调用的方法</span></span><br><span class="line">phone.call()</span><br></pre></td></tr></table></figure></li><li><p>类方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">特点: </span><br><span class="line">    <span class="number">1.</span> 定义需要依赖装饰器 @<span class="built_in">classmethod</span></span><br><span class="line">    <span class="number">2.</span> 类方法中参数不是一个对象,而是类</span><br><span class="line">    <span class="number">3.</span> 类方法中只可以使用类属性</span><br><span class="line">    4. 类方法中是否使用普通方法? 不能</span><br><span class="line">类方法的作用:</span><br><span class="line">    因为只能访问类属性和类方法,所以可以在对象创建之前,如果需要完成一些动作(功能)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__index__</span>(<span class="params">self,nikename</span>):</span></span><br><span class="line">        self.nikename = nikename</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;在院子里跑来跑去&#x27;</span>.<span class="built_in">format</span>(self.nikename))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;吃饭饭····&#x27;</span>)</span><br><span class="line">       <span class="comment"># self.run() # 类中方法的调用 需要通过 self.方法名()</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">cls</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;cls&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>静态方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><ul><li><p>魔术方法(参考资料:<a href="https://www.cnblogs.com/zhangboblogs/p/7860929.html">Python常用魔术方法</a>)</p><ul><li><p>魔术方法是什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">魔术方法就是一个类/对象中的方法，和普通方法唯一的不同时，普通方法需要调用！而魔术方法是在特定时刻自动触发。</span><br></pre></td></tr></table></figure></li><li><p><code>__init__</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">初始化魔术方法</span><br><span class="line"></span><br><span class="line">触发时机：初始化对象时触发（不是实例化触发，但是和实例化在一个操作中）</span><br></pre></td></tr></table></figure></li><li><p><code>__str__</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单纯打印对象名称,出来的是一个地址,地址对于开发者来说没有太大意义</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果想在打印对象名的时候能够给开发者更多一些信息量</span></span><br><span class="line"></span><br><span class="line">Eg.</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, nickname, age</span>):</span></span><br><span class="line">        self.nickname = nickname</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;姓名是: &#x27;</span> + self.nickname + <span class="string">&#x27;,年龄是: &#x27;</span> + <span class="built_in">str</span>(self.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">person = Person(<span class="string">&#x27;Bin&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">print(person) <span class="comment"># 姓名是: Bin,年龄是: 18</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">_str__</span><br><span class="line">触发时机: 使用 print(对象) 或者 <span class="built_in">str</span>(对象) 的时候触发</span><br><span class="line">参数: 一个self接收对象</span><br><span class="line">返回值: 必须是字符串类型</span><br><span class="line">作用: <span class="built_in">print</span>（对象时）进行操作，得到字符串，通常用于快捷操作</span><br><span class="line">注意: 无</span><br></pre></td></tr></table></figure></li><li><p><code>__new__</code>(向内存要空间–&gt; 地址)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">实例化魔术方法</span><br><span class="line">触发时机: 在实例化对象时触发</span><br><span class="line">参数: 至少一个 cls 接收当前类</span><br><span class="line">返回值: 必须返回一个对象实例</span><br><span class="line">作用: 实例化对象</span><br><span class="line">注意: 实例化对象是 Object 类底层实现，其他类继承了 Object 的 __new__ 才能够实现实例化对象。</span><br><span class="line"></span><br><span class="line">没事别碰这个魔术方法，先触发 __new__ 才会触发 __init__</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>__call_</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">调用对象的魔术方法</span><br><span class="line">触发时机: 将对象当作函数调用时触发 对象() </span><br><span class="line">参数: 至少一个self接收对象，其余根据调用时参数决定</span><br><span class="line">返回值: 根据情况而定</span><br><span class="line">作用: 可以将复杂的步骤进行合并操作，减少调用的步骤，方便使用</span><br><span class="line">注意: 无</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ul></li><li><p>知识补充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 对象赋值</span><br><span class="line">    p = Person()</span><br><span class="line">    p1 = p</span><br><span class="line">    说明: p 和 p1 共同指向同一个地址</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> 删除地址的引用</span><br><span class="line"></span><br><span class="line">    <span class="keyword">del</span> p1 删除 p1 对地址的引用</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> 查看对地址的引用次数</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    sys.getrefcount(对象名)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span> 当一块空间没有了任何引用,默认执行 __del__</span><br><span class="line"></span><br><span class="line">ref = <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p> 总结魔术方法</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">重点: __init__ , __str__</span><br><span class="line">    </span><br><span class="line">了解:</span><br><span class="line">    __new__ 作用: 开辟空间</span><br><span class="line">    __del__ 作用: 没有指针引用的时候会调用,<span class="number">99</span>%都不需要重写</span><br><span class="line">    __call__ 作用: 想不想将对象当成函数使用</span><br><span class="line">        </span><br></pre></td></tr></table></figure><ul><li><p>私有化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">私有化</span><br><span class="line"></span><br><span class="line">封装: </span><br><span class="line">    <span class="number">1.</span> 私有化属性</span><br><span class="line">    <span class="number">2.</span> 定义公有 <span class="built_in">set</span> 和 get 方法</span><br><span class="line">    </span><br><span class="line">_ _属性: 就是将属性私有化</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setName</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(name) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>(name) &lt;= <span class="number">6</span>:</span><br><span class="line">            self.__name = name</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27;名字必须是 6 位&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;姓名:&#123;&#125;,年龄是:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.__name, self.__age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">person = Person(<span class="string">&#x27;Bin&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">person.setName(<span class="string">&#x27;asasa&#x27;</span>)</span><br><span class="line">print(person)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>@property</code>装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">···</span><br></pre></td></tr></table></figure></li><li><p>关联关系(以后补充)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">····</span><br></pre></td></tr></table></figure></li><li><p>继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fu</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zi</span>-1(<span class="params">fu</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zi</span>-2(<span class="params">fu</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">注意: 可以重写 __init__</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">super</span>().__init__() <span class="comment"># 调用父类的 __init__</span></span><br></pre></td></tr></table></figure><ul><li><p>继承案例练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">编写一个简单的工资管理程序,系统可以管理以下四类人,工人(worker)，销售员(salesman),经理(manager)销售经理(salemanager)所有的员工都具有工号,姓名,工资等属性,有设置姓名,获取姓名,获取员工号,计算工资等</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 工人: 工人具有工作小时数和时薪的属性,工资计算方法为工作小时数 * 时薪</span><br><span class="line"><span class="number">2.</span> 销售员: 具有销售额和提成比例的属性,工资计算方法为销售额 * 提成比例</span><br><span class="line"><span class="number">3.</span> 经理: 具有固定月薪的属性,工资计算方法为固定月薪</span><br><span class="line"><span class="number">4.</span> 销售经理: 工资计算方法为销售额 * 提成比例 + 固定月薪</span><br><span class="line">    </span><br><span class="line">    请根据以上要求设计合理的类,完成一下功能:</span><br><span class="line">        <span class="number">1.</span> 添加所有类型的人员</span><br><span class="line">        <span class="number">2.</span> 计算月薪</span><br><span class="line">        <span class="number">3.</span> 显示所有人工工资情况</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">python 有多继承的特点</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>多态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>单例模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><ul><li><p>实现单例有几种模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><ul><li><p>模块的导入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在 python 中,模块是代码组织中的一种方式,把功能相近的函数或者类放到一个文件中,一个文件(.py)就是一个模块(model)</span><br><span class="line"></span><br><span class="line">模块名就是文件名去掉后缀 py，</span><br><span class="line"></span><br><span class="line">好处:</span><br><span class="line">    - 提高代码的可复用,可维护性,一个模块编写完毕后,可以很方便的在其他项目中导入</span><br><span class="line">    - 解决了命名冲突,不同模块中相同的命名不会冲突</span><br></pre></td></tr></table></figure></li><li><p>导入模块的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">import</span> 模块名(文件名 去除后缀)</span><br><span class="line"><span class="number">2.</span> <span class="keyword">from</span> name <span class="keyword">import</span> fun_name,变量名,类名</span><br><span class="line"><span class="number">3.</span> <span class="keyword">from</span> 模块名 <span class="keyword">import</span> * (该模块中的所有内容)</span><br><span class="line">   但是如果像限制获取的内容,可以在模块中使用 __all__ =[]</span><br><span class="line">    </span><br><span class="line">    注意: 无论是 <span class="keyword">import</span> 还是 <span class="keyword">from</span> 的形式,都会将模块内容进行加载</span><br><span class="line">        如果不希望其进行调用,就会用到 __name__</span><br><span class="line">        在自己的模块里面 __name__ 叫:  __main__</span><br><span class="line">        如果在其他模块中通过导入的方式调用的话叫: __name__ : 模块名</span><br><span class="line">        <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>导包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> 包名.模块名 <span class="keyword">import</span> 类名，变量名,函数名</span><br></pre></td></tr></table></figure></li><li><p><code>sys</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>time</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">-----------------------------------  重点 -----------------------------</span><br><span class="line"><span class="comment"># 时间戳</span></span><br><span class="line">print(time.time())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 延迟</span></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将元组的时间转成字符串</span></span><br><span class="line">s = time.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">t = time.time()</span><br><span class="line">print(t) <span class="comment"># 1609993679.9369621</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将时间戳转换成字符串</span></span><br><span class="line">print(time.ctime(t)) <span class="comment"># Thu Jan  7 12:27:59 2021</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将时间戳转换成元组</span></span><br><span class="line">t = time.localtime(t)</span><br><span class="line">print(t)</span><br><span class="line">print(t.tm_yday)</span><br><span class="line">print(t.tm_hour)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将元组的转换成时间戳</span></span><br><span class="line">print(time.mktime(t))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>random</code></p><ul><li><p>小数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># 随机小数</span></span><br><span class="line">  r = random.random()</span><br><span class="line">  print(r)</span><br></pre></td></tr></table></figure></li><li><p>前 10 位随机数，奇数位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">前 <span class="number">10</span> 位随机数  <span class="comment"># 奇数 1--&gt; 起始值 10--&gt; 终点值 2--&gt; 步进值</span></span><br><span class="line">  ran = random.randrange(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">  print(ran)</span><br></pre></td></tr></table></figure></li><li><p>前 10 位随机数整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机整数</span></span><br><span class="line">ran = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">print(ran)</span><br></pre></td></tr></table></figure></li><li><p>随机选择</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机选择</span></span><br><span class="line">list1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">ran = random.choice(list1)</span><br><span class="line">print(ran)</span><br></pre></td></tr></table></figure></li><li><p>打乱顺序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打乱顺序</span></span><br><span class="line">pai = [<span class="string">&#x27;红梅 A&#x27;</span>,<span class="string">&#x27;方片K&#x27;</span>,<span class="string">&#x27;黑2&#x27;</span>]</span><br><span class="line">ran = random.shuffle(pai)</span><br><span class="line">print(pai) <span class="comment"># 输出原列表</span></span><br></pre></td></tr></table></figure></li><li><p>小应用: 验证码功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证码案例</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">fun</span>():</span></span><br><span class="line">      code = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">          <span class="comment"># 随机整数</span></span><br><span class="line">          ranNum = <span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">          <span class="comment"># A-Z</span></span><br><span class="line">          ranUpperStr = <span class="built_in">chr</span>(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line">          <span class="comment"># a-z</span></span><br><span class="line">          ranLowerStr = <span class="built_in">chr</span>(random.randint(<span class="number">97</span>, <span class="number">122</span>))</span><br><span class="line">          <span class="comment"># 存放大小写组合</span></span><br><span class="line">          ranList = [ranNum, ranUpperStr, ranLowerStr]</span><br><span class="line">          <span class="comment"># 随机选择</span></span><br><span class="line">          rChoice = random.choice(ranList)</span><br><span class="line">          <span class="comment"># 拼接得到最终组合</span></span><br><span class="line">          code += rChoice</span><br><span class="line">      <span class="keyword">return</span> code</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 函数调用</span></span><br><span class="line">  code = fun()</span><br><span class="line">  <span class="comment"># 输出</span></span><br><span class="line">  print(code)</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>hashlib</code>加密模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;--------------------- content: 2021-01-11 ------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密算法</span></span><br><span class="line">print(<span class="string">&#x27;--------------------- Md5 ------------------------&#x27;</span>)</span><br><span class="line">pwd = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"><span class="comment"># md5 不可逆 --&gt; 单向</span></span><br><span class="line">md5 = hashlib.md5(pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="comment"># 16 进制加密</span></span><br><span class="line">print(md5.hexdigest())  <span class="comment"># e10adc3949ba59abbe56e057f20f883e</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;------------------------- sha1 ----------------------------------&#x27;</span>)</span><br><span class="line">sha1 = hashlib.sha1(pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="comment"># sha1 加密</span></span><br><span class="line">print(sha1.hexdigest())  <span class="comment"># 7c4a8d09ca3762af61e59520943dc26494f8941b</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;------------------------- sha256 ----------------------------------&#x27;</span>)</span><br><span class="line">sha256 = hashlib.sha256(pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="comment"># sha1 加密</span></span><br><span class="line">print(sha256.hexdigest())  <span class="comment"># 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>小案例: 登录注册</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 登录注册</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"><span class="comment"># encode</span></span><br><span class="line">str_en = hashlib.sha256(<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="comment"># 加密</span></span><br><span class="line">str_pwd = str_en.hexdigest()</span><br><span class="line"></span><br><span class="line">str_list = []</span><br><span class="line">str_list.append(str_pwd)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户输入密码加密之后进行对比</span></span><br><span class="line">user_input = <span class="built_in">input</span>(<span class="string">&#x27;请输入密码: &#x27;</span>)</span><br><span class="line">user_sha256 = hashlib.sha256(user_input.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">sha256_pwd = user_sha256.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str_list:</span><br><span class="line">    <span class="keyword">if</span> sha256_pwd == i:</span><br><span class="line">        print(<span class="string">&#x27;登录成功!&#x27;</span>,i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;请重新输入···&#x27;</span>)  </span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>Unicode</code>之间的转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chr  ord</span></span><br><span class="line">print(<span class="built_in">chr</span>(<span class="number">65</span>))  <span class="comment"># Unicode --&gt; str</span></span><br><span class="line">print(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)) <span class="comment"># str --&gt; Unicode</span></span><br></pre></td></tr></table></figure></li><li><p>第三方<code>pillow</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure></li></ul><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><ul><li><p>正则表达式的定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正则表达式是对字符串的一种逻辑公式,就是用事先定义好的一些特殊字符,以及这些特殊字符组成规则的字符串</span><br><span class="line">正则表达式是对字符串和特殊字符操作的一种逻辑公式</span><br></pre></td></tr></table></figure></li><li><p>正则表达式的作用和特点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">给定一个正则表达式和另一个字符串,达到一定目的</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 给定的字符串是否符合正则表达式的过滤逻辑(称作匹配)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 可以通过正则表达式,从字符串中获取我们想要的特定部分</span><br><span class="line"></span><br><span class="line">正则表达式的特点是:</span><br><span class="line">    <span class="number">1.</span> 灵活性,逻辑性和功能性非常强</span><br><span class="line">    <span class="number">2.</span> 可以迅速的用极简单的方式达到字符串的复杂控制</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用正则 re 模块的方法: match 从头开始匹配,如果不成功则就返回 None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用正则 re 模块的方法: search  进行正则字符串匹配方法,匹配的是整个字符串 输出索引位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># group()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sub(’正则表达式‘,&#x27;新内容&#x27;,&#x27;替换&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># split() 切割</span></span><br></pre></td></tr></table></figure><ul><li><p><code>re.match</code>与<code>re.search</code>的区别</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">re.match 只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回 <span class="literal">None</span>，</span><br><span class="line"></span><br><span class="line">re.search 匹配整个字符串，直到找到一个匹配。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>检索和替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">re 模块提供了 re.sub 用于替换字符串中的匹配项</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"></span><br><span class="line">    re.sub(pattern, repl, string, count=<span class="number">0</span>, flags=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    pattern : 正则中的模式字符串。</span><br><span class="line">    repl : 替换的字符串，也可为一个函数。</span><br><span class="line">    string : 要被查找替换的原始字符串。</span><br><span class="line">    count : 模式匹配后替换的最大次数，默认 <span class="number">0</span> 表示替换所有的匹配。</span><br><span class="line">    flags : 编译时用的匹配模式，数字形式。</span><br></pre></td></tr></table></figure></li><li><p><code>compile</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">compile</span> 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象，供 match() 和 search() 这两个函数使用。</span><br></pre></td></tr></table></figure></li><li><p><code>findall</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表。</span><br><span class="line"></span><br><span class="line">注意: match 和 search 是匹配一次 findall 匹配所有。</span><br></pre></td></tr></table></figure></li><li><p><code>split</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">split 方法按照能够匹配的子串将字符串分割后返回列表</span><br></pre></td></tr></table></figure></li></ul></li><li><p>正则预定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\A: 表示从字符串的开始处匹配</span><br><span class="line">\Z: 表示从字符串的结束处匹配，如果存在换行，只匹配到换行前的结束字符串。</span><br><span class="line">\b: 匹配-一个单词边界，也就是指单词和空格间的位置。例如，’py\<span class="string">b&#x27; 可以匹配’ python” 中的’ py’，但不能匹配”oenpyx1&quot;中的 &#x27;</span>py<span class="string">&#x27;</span></span><br><span class="line"><span class="string">\B: 匹配非单词边界。’ py\b’可以匹配”openpyx1&quot;中的’ py&#x27;</span>，但不能匹配”python<span class="string">&quot;中的’ py&#x27;</span></span><br><span class="line"><span class="string">\d: 匹配任意数字，等价于[0-9] 。</span></span><br><span class="line"><span class="string">\D: 匹配任意非数字字符，等价于[ \d]。</span></span><br><span class="line"><span class="string">\s: 匹配任意空白字符，等价于[\t\n\r\f] </span></span><br><span class="line"><span class="string">\S: 匹配任意非空白字符，等价于[^\s]。</span></span><br><span class="line"><span class="string">\w: 匹配任意字母数字及下划线，等价于[a-zA-Z0-9_ ] </span></span><br><span class="line"><span class="string">\W: 匹配任意非字母数字及下划线，等价于[^ \w]</span></span><br><span class="line"><span class="string">\\: 匹配原义的反斜杠\</span></span><br></pre></td></tr></table></figure></li><li><p>总结</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">. 任意字符除(\n)</span><br><span class="line">^ 开头</span><br><span class="line">$ 结尾</span><br><span class="line">[] 范围</span><br><span class="line"></span><br><span class="line">量词:</span><br><span class="line">    * &gt;= <span class="number">0</span></span><br><span class="line">    + &gt;= <span class="number">1</span></span><br><span class="line">? 0,1</span><br><span class="line">    &#123;m&#125;  =m 位</span><br><span class="line">    &#123;m,&#125; &gt;=m</span><br><span class="line">    &#123;m,n&#125; phone&gt;=m  phone&lt;=n(范围内的大小)</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>起名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">起名方式: (?P&lt;name&gt;正则)</span><br><span class="line">    </span><br><span class="line">分组: ()</span><br><span class="line">    </span><br><span class="line">    分组可以使用 group(n组) 获取</span><br></pre></td></tr></table></figure></li><li><p><code>group</code>小应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">path = <span class="string">&#x27;&#x27;&#x27;&lt;img data-original=&quot;http://browser9.qhimg.com/bdm/768_474_0/t010448c46c1ecf7cab.jpg&quot; alt=&quot;卡通人物 动漫卡通&quot; title=&quot;关键字：卡通人物 动漫卡通&quot; data-realurl=&quot;http://browser9.qhimg.com/bdr/__85/t010448c46c1ecf7cab.jpg&quot; src=&quot;http://browser9.qhimg.com/bdm/768_474_0/t010448c46c1ecf7cab.jpg&quot; style=&quot;display: inline;&quot;&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">result = re.match(<span class="string">r&#x27;&lt;img data-original=&quot;http://browser9.qhimg.com/bdm/768_474_0/t010448c46c1ecf7cab.jpg&quot; alt=&quot;卡通人物 动漫卡通&quot; title=&quot;关键字：卡通人物 动漫卡通&quot; data-realurl=&quot;http://browser9.qhimg.com/bdr/__85/t010448c46c1ecf7cab.jpg&quot; src=&quot;(.*?)&quot;&#x27;</span>,path)</span><br><span class="line">print(result.group(<span class="number">1</span>)) <span class="comment"># http://browser9.qhimg.com/bdm/768_474_0/t010448c46c1ecf7cab.jpg</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="进程（实现快速执行某任务-不论顺序）"><a href="#进程（实现快速执行某任务-不论顺序）" class="headerlink" title="进程（实现快速执行某任务,不论顺序）"></a>进程（实现快速执行某任务,不论顺序）</h3><ul><li><p>进程概念</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">进程是操作系统分配资源的最小单元···</span><br><span class="line"></span><br><span class="line">线程是操作系统调度的最小单元···</span><br></pre></td></tr></table></figure></li><li><p>创建进程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span>(<span class="params">timer, name</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sleep(timer)</span><br><span class="line">        print(os.getpid(), <span class="string">&#x27;--------------------&gt; &#x27;</span>, os.getppid())</span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task2</span>(<span class="params">timer, name</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sleep(timer)</span><br><span class="line">        print(os.getpid(), <span class="string">&#x27;--------------------&gt; &#x27;</span>, os.getppid())</span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;主进程···········&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子进程</span></span><br><span class="line">    p1 = Process(target=task1, args=(<span class="number">1</span>, <span class="string">&#x27;p1&#x27;</span>), name=<span class="string">&#x27;任务一&#x27;</span>)</span><br><span class="line">    print(p1.name)</span><br><span class="line">    p1.start()</span><br><span class="line"></span><br><span class="line">    p2 = Process(target=task2, args=(<span class="number">2</span>, <span class="string">&#x27;p2&#x27;</span>), name=<span class="string">&#x27;任务二&#x27;</span>)</span><br><span class="line">    print(p2.name)</span><br><span class="line">    p2.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">总结:</span></span><br><span class="line"><span class="string">    process.start() 启动进程并执行任务</span></span><br><span class="line"><span class="string">    process.run() 只是执行了任务但没有启动进程</span></span><br><span class="line"><span class="string">    terminate() 终止</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">主进程:  <span class="comment"># (解释器的 run )</span></span><br><span class="line"> </span><br><span class="line">子进程: </span><br></pre></td></tr></table></figure></li><li><p>终止进程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line"><span class="comment"># 进程练习源码 2021-01-11</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span>(<span class="params">timer, name</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sleep(timer)</span><br><span class="line">        print(os.getpid(), <span class="string">&#x27;--------------------&gt; &#x27;</span>, os.getppid())</span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task2</span>(<span class="params">timer, name</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sleep(timer)</span><br><span class="line">        print(os.getpid(), <span class="string">&#x27;--------------------&gt; &#x27;</span>, os.getppid())</span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">number = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;主进程···········&#x27;</span>, os.getpid())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子进程</span></span><br><span class="line">    p1 = Process(target=task1, args=(<span class="number">1</span>, <span class="string">&#x27;p1&#x27;</span>), name=<span class="string">&#x27;任务一&#x27;</span>)</span><br><span class="line">    print(p1.name)</span><br><span class="line">    p1.start()</span><br><span class="line"></span><br><span class="line">    p2 = Process(target=task2, args=(<span class="number">2</span>, <span class="string">&#x27;p2&#x27;</span>), name=<span class="string">&#x27;任务二&#x27;</span>)</span><br><span class="line">    print(p2.name)</span><br><span class="line">    p2.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        number += <span class="number">1</span></span><br><span class="line">        sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="keyword">if</span> number == <span class="number">10</span>:</span><br><span class="line">            <span class="comment"># 终止进程</span></span><br><span class="line">            p1.terminate()</span><br><span class="line">            p2.terminate()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27;number: &#x27;</span>, number)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>全局变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">多进程对于全局变量访问,在每一个全局变量里面都放一个 m 变量</span><br><span class="line"></span><br><span class="line">保证每个进程访问变量互不干扰</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>非阻塞式进程池</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    当需要创建的子进程数量不多时,可以直接利用 multiprocessing 中的 Process 动态生成多个进程</span></span><br><span class="line"><span class="string">    但如果是上百甚至上千个目标,手动的的去创建进程的工作量巨大,此时就可以用到 multiprocessing 模块提供的 Pool 方法</span></span><br><span class="line"><span class="string">    初始化 Pool 时,可以指定一个最大进程数,当有新的请求提交到 Pool 时,如果池还没有满,那么就会创建一个新的进程来执行该请求,但</span></span><br><span class="line"><span class="string">    如果池中的进程数已经达到指定的最大值,那么该请就就会等待,直到池中有进程结束,才会创建新的进程来执行</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    非阻塞式: 全部添加到队列中,立刻返回,并没有等待其他的进程完毕,但是回调函数是等待任务完成后才调用</span></span><br><span class="line"><span class="string">    阻塞式: 区别在 apply()  apply_async() </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进程池</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task_fun</span>(<span class="params">task_name</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;任务开始啦·············&#x27;</span>, task_name, os.getpid())</span><br><span class="line">    <span class="comment"># 获取时间戳</span></span><br><span class="line">    start = time.time()</span><br><span class="line">    <span class="comment"># 使用 sleep</span></span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">&#x27;用时: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(start - end))</span><br><span class="line">    <span class="comment"># 需要 return</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;用时: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(start - end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback_fun</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="comment"># 必须添加参数</span></span><br><span class="line">    container_list.append(n)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">container_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 创建进程池 开启 5 个子进程</span></span><br><span class="line">    pool = Pool(<span class="number">5</span>)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    源码,Pool 中的参数: </span></span><br><span class="line"><span class="string">    def Pool(processes: Optional[int] = ..., # 最大进程数 整数类型</span></span><br><span class="line"><span class="string">             initializer: Optional[Callable[..., Any]] = ...,</span></span><br><span class="line"><span class="string">             initargs: Iterable[Any] = ...,</span></span><br><span class="line"><span class="string">             maxtasksperchild: Optional[int] = ...) -&gt; pool.Pool: ...</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">list</span> = [<span class="string">&#x27;1a&#x27;</span>, <span class="string">&#x27;2a&#x27;</span>, <span class="string">&#x27;3a&#x27;</span>, <span class="string">&#x27;4a&#x27;</span>, <span class="string">&#x27;5a&#x27;</span>, <span class="string">&#x27;6a&#x27;</span>, <span class="string">&#x27;7a&#x27;</span>, <span class="string">&#x27;8a&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        <span class="comment"># 非阻塞式</span></span><br><span class="line">        pool.apply_async(task_fun, args=(task,), callback=callback_fun)</span><br><span class="line">    pool.close()  <span class="comment"># 添加任务结束</span></span><br><span class="line">    pool.join()  <span class="comment"># 堵住主进程 插队，不会执行后续 over,会等待 子进程执行完毕··········</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 主进程任务</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> container_list:</span><br><span class="line">        print(i)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>阻塞式进程池</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">特点: 添加一个执行一个任务,如果一个任务不结束另一个任务就进不来</span><br></pre></td></tr></table></figure></li><li><p>进程间的通信</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进程通信</span></span><br><span class="line"><span class="comment"># 通信是通过同一个 args=(参数1,···)</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">q</span>):</span></span><br><span class="line">    imglist = [<span class="string">&#x27;a.jpg&#x27;</span>, <span class="string">&#x27;b.jpg&#x27;</span>, <span class="string">&#x27;c.jpg&#x27;</span>, <span class="string">&#x27;d.jpg&#x27;</span>, <span class="string">&#x27;e.jpg&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> imglist:</span><br><span class="line">        print(<span class="string">&#x27;正在下载: &#x27;</span>, img)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="comment"># 放入</span></span><br><span class="line">        q.put(img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getfile</span>(<span class="params">q</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 获取</span></span><br><span class="line">            file = q.get(timeout=<span class="number">5</span>)</span><br><span class="line">            print(<span class="string">&#x27;&#123;&#125; 保存成功&#x27;</span>.<span class="built_in">format</span>(file))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">&#x27;全部保存完毕·········&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 通信桥梁</span></span><br><span class="line">    q = Queue(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    down = Process(target=download, args=(q,))</span><br><span class="line">    gets = Process(target=getfile, args=(q,))</span><br><span class="line">    <span class="comment"># 创建进程</span></span><br><span class="line">    down.start()</span><br><span class="line">    <span class="comment"># down 阻塞</span></span><br><span class="line">    down.join()</span><br><span class="line"></span><br><span class="line">    gets.start()</span><br><span class="line">    gets.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><ul><li><p>线程的概念</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">线程: 有时被称为轻量进程(Lightweight Process LWP)，是程序执行流的最小单位。一个标准的线程由线程ID，当前指令指针(PC) 寄存器集合和堆栈组成,另外,线程是进程中的一个实体,是被系统独立调度和分排的基本单位，线程自己不拥有系统资源,只拥有一点儿在运行中必不可少的资源,但它可与同属一个进程的其他线程共享进程所拥有的全部资源.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">一个线程可以创建和撤销另一个线程,同一个进程中的多个线程之间可以并发执行。由于线程之间的相互制约,致使线程在运行中呈现出间断性。线程也有就绪，阻塞和运行三种基本状态。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">就绪状态: 是指线程具备运行的所有条件m逻辑上可以运行,在等待处理机；</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">运行状态: 是指线程占有处理机正在运行</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">阻塞状态: 阻塞状态是指线程在等待一个事件(如某个信号量),逻辑上不可执行。每一个程序都至少有一个线程，若程序只有一个线程,那就是程序本身。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>多线程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">线程是程序中一个单一的顺序控制流程。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">程序内有一个相对独立的、可调度的执行单元.是系统独立调度和分派 CPU 的基本单位指令运行时的程序的调度单位。在单个程序中同时运行</span></span><br><span class="line"><span class="string">多个线程完成不同的工作称为多线程</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">多线程: 多线程(multithreading) 是指从软件或者硬件上实现多个线程并发执行的技术。具有多线程能力的计算机因有硬件支持而能够</span></span><br><span class="line"><span class="string">在同一时间执行多于一个线程,进而提升整体处理性能.具有这种能力的系统包括多对处理机,多核心处理器以及芯片级多处理或同时多线处理器。</span></span><br><span class="line"><span class="string">在一个程序中,这些独立运行的程序片段就做 &quot;线程&quot;，利用它的编程的概念就叫做&quot;多线程处理&quot;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>优点</p><ul><li>使用线程可以把占据很长时间的程序中的任务放到后台去处理</li><li>用户界面可以更加吸引人,这样比如用户点击了一个按钮去触发某些事件的处理,可以弹出一个进度条<br>来显示用户处理的进度</li><li>程序的运行速度可能加快</li><li>在一些等待的任务实现上如用户输入，文件读写和网络收发数据等,线程就比较有用了.这种情况下我们可以释放一些<br>珍贵的资源如内存占用等等</li></ul></li><li><p>线程的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新建 就绪  运行  阻塞  结束</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/threadg.png"></li><li><p>全局解释器锁</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Global Interpreter Lock,缩写 GIL 是计算机程序设计语言解释器用于同步线程的一种机制，它使得任何时刻仅有一个线程在执行。即</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">便在多核心处理器上，使用 GIL 的解释器也只允许同一时间执行一个线程。常见的使用 GIL 的解释器有CPython与Ruby MRI。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">线程用于: 耗时操作,爬虫 IO</span><br><span class="line"></span><br><span class="line">进程用于: 计算密集型</span><br></pre></td></tr></table></figure></li><li><p>多线程同步</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">数据共享:</span><br><span class="line">    如果多个线程共同对某个数据修改，则可能出现不可预料的结果,为了保证数据的正确性,需要对多个线程进行同步</span><br><span class="line">    </span><br><span class="line">同步: 一个一个的完成,一个<span class="number">1</span>做完另一个才能进来</span><br><span class="line">    效率会降低</span><br><span class="line">    </span><br><span class="line">    使用 Thread 对象的 Lock 和 RLock 可以实现简单的线程同步,这个对象都有 acquire 方法 和 release方法,对于那些需要每次</span><br><span class="line">    只允许一个线程操作的数据,可以将其操作放在 acquire 和 release 方法之间</span><br><span class="line">    </span><br><span class="line">    多线程的优势在于可以同时运行多个任务。但是当线程需要共享数据时,可能存在数据不同步的问题,为了避免这种情况,引入锁的概念</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁对象</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可变类型</span></span><br><span class="line">list1 = [<span class="number">0</span>] * <span class="number">10</span>  <span class="comment"># [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------- S: 加锁任务 ----------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span>():</span></span><br><span class="line">    <span class="comment"># 获取线程锁,如果已经上锁,则等待锁的释放</span></span><br><span class="line">    lock.acquire()  <span class="comment"># 阻塞</span></span><br><span class="line">    <span class="comment"># 任务</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">        list1[i] = <span class="number">1</span></span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">    lock.release()  <span class="comment"># 释放锁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task2</span>():</span></span><br><span class="line">    lock.acquire()  <span class="comment"># 阻塞</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">        print(<span class="string">&#x27;--------------&gt; &#x27;</span>, i)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">    lock.release()  <span class="comment"># 释放锁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 创建线程</span></span><br><span class="line">    th1 = threading.Thread(target=task1)</span><br><span class="line">    th2 = threading.Thread(target=task2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开启线程</span></span><br><span class="line">    th2.start()</span><br><span class="line">    th1.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 阻塞</span></span><br><span class="line">    th2.join()</span><br><span class="line">    th1.join()</span><br><span class="line"></span><br><span class="line">    print(list1)</span><br><span class="line"><span class="comment"># --------------------------------- E: 加锁任务 ----------------------------------------------</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>死锁</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 死锁</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  开发过程中，在线程间共享多个资源的时候,如果两个线程分别占有一部分资源并且同时等待对方的资源，就会造成死锁.</span></span><br><span class="line"><span class="string">  尽管死锁很少发生,但一旦发生就会造成应用的停止响应,程序不做任何事情</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  避免死锁</span></span><br><span class="line"><span class="string">  解决:</span></span><br><span class="line"><span class="string">      1. 重构代码</span></span><br><span class="line"><span class="string">      2. 使用 timeout 参数</span></span><br><span class="line"><span class="string">  &#x27;&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line">  <span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------- S: 死锁 --------------------------------------</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 准备两把锁</span></span><br><span class="line"></span><br><span class="line">  lockA = Lock()</span><br><span class="line">  lockB = Lock()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 自定义线程</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">MyThreadA</span>(<span class="params">Thread</span>):</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span>  <span class="comment"># start()</span></span><br><span class="line">          <span class="comment">#  源码: def acquire(self, blocking: bool = ..., timeout: float = ...) -&gt; bool: ...</span></span><br><span class="line">          <span class="keyword">if</span> lockA.acquire():  <span class="comment"># 如果可以获取锁则返回 True (源码可知)</span></span><br><span class="line">              print(self.name + <span class="string">&#x27;拿到了A锁&#x27;</span>)</span><br><span class="line">              sleep(<span class="number">0.1</span>)</span><br><span class="line">              <span class="keyword">if</span> lockB.acquire():</span><br><span class="line">                  print(self.name + <span class="string">&#x27;又获取了B锁,原来还有A锁&#x27;</span>)</span><br><span class="line">                  lockB.release()  <span class="comment"># 释放 B 锁</span></span><br><span class="line">              lockA.release()  <span class="comment"># 释放 A 锁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">MyThreadB</span>(<span class="params">Thread</span>):</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span>  <span class="comment"># start()</span></span><br><span class="line">          <span class="comment">#  源码: def acquire(self, blocking: bool = ..., timeout: float = ...) -&gt; bool: ...</span></span><br><span class="line">          <span class="keyword">if</span> lockB.acquire():  <span class="comment"># 如果可以获取锁则返回 True (源码可知)</span></span><br><span class="line">              print(self.name + <span class="string">&#x27;拿到了B锁&#x27;</span>)</span><br><span class="line">              sleep(<span class="number">0.1</span>)</span><br><span class="line">              <span class="keyword">if</span> lockA.acquire():</span><br><span class="line">                  print(self.name + <span class="string">&#x27;又获取了A锁,原来还有B锁&#x27;</span>)</span><br><span class="line">                  lockA.release()  <span class="comment"># 释放 B 锁</span></span><br><span class="line">              lockB.release()  <span class="comment"># 释放 A 锁</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">      th1 = MyThreadA()</span><br><span class="line">      th2 = MyThreadB()</span><br><span class="line">      th1.start()</span><br><span class="line">      th2.start()</span><br><span class="line">    </span><br><span class="line"><span class="comment"># -------------------------------------------------------- E: 死锁 --------------------------------------</span></span><br></pre></td></tr></table></figure>  <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/dblock.png" width="400" height="120"></li><li><p>解决死锁</p>  <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/reblock.png" width="600" height="300" alt="python 死锁 全局解释器锁"></li><li><p>生产者与消费者(线程之间的通信)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">生产者与消费者: 两个线程之间的通信</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python 的 queue 模块中提供了同步的,包括 FIFO(先进先出)队列 Queue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">LIFO(后入先出) 队列 LifoQueue 和优先级队列 PriorityQueue。这些队列都实现了锁原语(可以理解为原子操作，即要么不做,要么就全做),能够在多线程中直接使用</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">可以使用队列来实现线程间的同步</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> queue</span><br><span class="line">  <span class="keyword">import</span> threading</span><br><span class="line">  <span class="keyword">import</span> random</span><br><span class="line">  <span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">produce</span>(<span class="params">q</span>):</span></span><br><span class="line">      i = <span class="number">0</span></span><br><span class="line">      <span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line">          num = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">          q.put(<span class="string">&#x27;生产者产生的数据: %d&#x27;</span> % num)</span><br><span class="line">          print(<span class="string">&#x27;生产者产生的数据: %d&#x27;</span> % num)</span><br><span class="line">          sleep(<span class="number">1</span>)</span><br><span class="line">          i += <span class="number">1</span></span><br><span class="line">      q.put(<span class="literal">None</span>)</span><br><span class="line">      <span class="comment"># 完成任务</span></span><br><span class="line">      q.task_done()  <span class="comment"># task_done() 源码附有</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">consume</span>(<span class="params">q</span>):</span></span><br><span class="line">      <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">          item = q.get()</span><br><span class="line">          <span class="keyword">if</span> item <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">              <span class="keyword">break</span></span><br><span class="line">          print(<span class="string">&#x27;消费者获取到: %s&#x27;</span> % item)</span><br><span class="line">          sleep(<span class="number">4</span>)</span><br><span class="line">      <span class="comment"># 完成任务</span></span><br><span class="line">      q.task_done()</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">      q = queue.Queue(<span class="number">10</span>)</span><br><span class="line">      arr = []</span><br><span class="line">  </span><br><span class="line">      <span class="comment"># 创建生产者</span></span><br><span class="line">      th1 = threading.Thread(target=produce, args=(q,))</span><br><span class="line">      th1.start()</span><br><span class="line">  </span><br><span class="line">      <span class="comment"># 创建消费者</span></span><br><span class="line">      th2 = threading.Thread(target=consume, args=(q,))</span><br><span class="line">      th2.start()</span><br><span class="line">  </span><br><span class="line">      th1.join()</span><br><span class="line">      th2.join()</span><br><span class="line">  </span><br><span class="line">      print(<span class="string">&#x27;END···············&#x27;</span>)</span><br></pre></td></tr></table></figure>  <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Threadqueue.png" width="600" height="500" alt="线程 生产者与消费者 python"></li><li><p>数据共享总结</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">进程共享数据与线程共享数据的区别:</span><br><span class="line">    进程是每个进程中都有一份</span><br><span class="line">    线程是共同一个数据 --&gt; 数据安全问题</span><br><span class="line">    </span><br><span class="line">    GIL --&gt; 伪线程</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>协程</p><ul><li><p>使用生成器创建协程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Coroutine 协程</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">协程: 耗时操作</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">耗时操作: 网络请求 网络下载(爬虫), IO：文件的读写 阻塞</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">&#x27;A&#x27;</span>+<span class="built_in">str</span>(i))</span><br><span class="line">        <span class="keyword">yield</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task2</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">&#x27;B&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">        <span class="keyword">yield</span></span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 生成器</span></span><br><span class="line">    t1 = task1()</span><br><span class="line">    t2 = task2()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">next</span>(t1)</span><br><span class="line">            <span class="built_in">next</span>(t2)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>第三方<code>greenlet</code>创建协程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># greenlet</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入  anaconda 安装的 Scripts下</span></span><br><span class="line"></span><br><span class="line">  conda: conda install greenlet </span><br><span class="line"></span><br><span class="line">  windows: pip/pip3 install greenlet</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> greenlet <span class="keyword">import</span> greenlet</span><br><span class="line"> <span class="keyword">import</span> time</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">a</span>():</span></span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">         print(<span class="string">&#x27;A&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">         gb.switch()</span><br><span class="line">         time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">b</span>():</span></span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">         print(<span class="string">&#x27;B&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">         gc.switch()</span><br><span class="line">         time.sleep(<span class="number">0.2</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">c</span>():</span></span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">         print(<span class="string">&#x27;C&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">         ga.switch()</span><br><span class="line">         time.sleep(<span class="number">0.3</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">     ga = greenlet(a)</span><br><span class="line">     gb = greenlet(b)</span><br><span class="line">     gc = greenlet(c)</span><br><span class="line">     <span class="comment"># 需要调一下</span></span><br><span class="line">     ga.switch()</span><br><span class="line">    </span><br><span class="line"> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"> 结果输出: A0 B0 C0 A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"> 交替输出</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"> &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>第三方<code>gevent</code></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  conda解释器安装 gevent:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    conda install gevent</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    成功后显示:  All requested packages already installed.</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">    全局解释器安装: pip/pip3 install gevent</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">greenlet已经实现了协程，但是这个人工切换，是不是觉得太麻烦了，python 还有一个比 greenlet 更强大的并且能够自动切换任务的模块`gevent`,其原理是当一个 greentlet 遇到 IO（指的是<span class="built_in">input</span> ouput输入输出，比如网络、文件操作等）操作时，比如访问网络，就自动切换到其他的greenlet,等到 IO 完成，再适当的时候切换回来继续执行。</span><br><span class="line"></span><br><span class="line">由于IO操作非常耗时，经常使程序处于等待状态，有了gevent我们自动切换协程，就保证总有greenlet在运行，而不是等待IO</span><br><span class="line">  </span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">  <span class="keyword">from</span> greenlet <span class="keyword">import</span> greenlet</span><br><span class="line">  <span class="keyword">import</span> gevent</span><br><span class="line">  <span class="keyword">import</span> time</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 猴子补丁</span></span><br><span class="line">  <span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line">  monkey.patch_all()</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">a</span>():</span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">          print(<span class="string">&#x27;A&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">          time.sleep(<span class="number">0.1</span>)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">b</span>():</span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">          print(<span class="string">&#x27;B&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">          time.sleep(<span class="number">0.2</span>)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">c</span>():</span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">          print(<span class="string">&#x27;C&#x27;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">          time.sleep(<span class="number">0.3</span>)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">      g1 = gevent.spawn(a)</span><br><span class="line">      g2 = gevent.spawn(b)</span><br><span class="line">      g3 = gevent.spawn(c)</span><br><span class="line">  </span><br><span class="line">      g1.join()</span><br><span class="line">      g2.join()</span><br><span class="line">      g3.join()</span><br><span class="line">  </span><br><span class="line">  <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  没有猴子补丁的输出: A0 A1 A2 A3 A4 B0 B1 B2 B3 B4 C0 C1 C2 C3 C4</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  添加猴子补丁后输出: A0 B0 C0 A1 B1 A2 C1 A3 B2 A4 B3 C2 B4 C3 C4 # 实现协程</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p><font color="red">实现协程小应用</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 协程案例</span></span><br><span class="line"><span class="keyword">import</span> urllib  <span class="comment"># 错误</span></span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">erro: 由于暂时不了解爬虫,错误无法排除 </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">date: 2021.01.13 13:40:31 </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python: 完结 python 基础学习</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 猴子补丁</span></span><br><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line"></span><br><span class="line">monkey.patch_all()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downUrl</span>(<span class="params">url</span>):</span></span><br><span class="line">    response = urllib.request.urlopen(url)</span><br><span class="line">    content = response.read()</span><br><span class="line">    print(<span class="string">&#x27;下载了&#123;&#125; 的数据,长度是:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url, <span class="built_in">len</span>(content)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    urls = [<span class="string">&#x27;http://www.163.com&#x27;</span>, <span class="string">&#x27;http://www.qq.com&#x27;</span>, <span class="string">&#x27;http://www.baidu.com&#x27;</span>]</span><br><span class="line">    g1 = gevent.spawn(downUrl, urls[<span class="number">0</span>])</span><br><span class="line">    g2 = gevent.spawn(downUrl, urls[<span class="number">1</span>])</span><br><span class="line">    g3 = gevent.spawn(downUrl, urls[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">    g1.join()</span><br><span class="line">    g2.join()</span><br><span class="line">    g3.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="PYMYSQL模块"><a href="#PYMYSQL模块" class="headerlink" title="PYMYSQL模块"></a>PYMYSQL模块</h3><ul><li><p>查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入相应参数</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    conn = pymysql.connect(host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">                           port = <span class="number">3306</span>,</span><br><span class="line">                           user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           passwd = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           db = <span class="string">&#x27;student&#x27;</span>,</span><br><span class="line">                           charset = <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                           cursorclass = pymysql.cursors.DictCursor)  <span class="comment"># 修改类型 元组类型需要去除该参数</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 执行 sql 注意参数位置</span></span><br><span class="line">            cursor.execute(<span class="string">&#x27;select eno,ename,sal from tb_emp&#x27;</span>)</span><br><span class="line">            <span class="comment"># 元组类型结果集</span></span><br><span class="line">            <span class="comment"># for row in cursor.fetchall():</span></span><br><span class="line">            <span class="comment">#     print(&#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="comment">#     ----------- 查询所有 -------</span></span><br><span class="line">            <span class="comment">#     eno: &#123;&#125;</span></span><br><span class="line">            <span class="comment">#     ename: &#123;&#125;</span></span><br><span class="line">            <span class="comment">#     sal: &#123;&#125;</span></span><br><span class="line">            <span class="comment">#     -------------------------</span></span><br><span class="line">            <span class="comment">#</span></span><br><span class="line">            <span class="comment">#     &#x27;&#x27;&#x27;.format(row[0], row[1], row[2]))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 字典类型结果集 如果查询时带别名, 那么字典的键要更改为 别名</span></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">                <span class="comment"># print(row)</span></span><br><span class="line">                print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                -------------------------</span></span><br><span class="line"><span class="string">                eno: &#123;&#125;</span></span><br><span class="line"><span class="string">                ename: &#123;&#125;</span></span><br><span class="line"><span class="string">                sal: &#123;&#125;</span></span><br><span class="line"><span class="string">                --------------------------</span></span><br><span class="line"><span class="string">                &#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(row[<span class="string">&#x27;eno&#x27;</span>], row[<span class="string">&#x27;ename&#x27;</span>], row[<span class="string">&#x27;sal&#x27;</span>]))</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> erro:</span><br><span class="line">        print(erro)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭连接释放资源</span></span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pymysql 的使用</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成文件 pip freeze &gt; requirements.txt</span></span><br><span class="line"><span class="comment"># 依赖项安装: pip install -r requirements.txt</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    conn = pymysql.connect(host = <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">                           port = <span class="number">3306</span>,</span><br><span class="line">                           user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           password = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           db = <span class="string">&#x27;student&#x27;</span>,</span><br><span class="line">                           charset = <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获得游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># execute 执行</span></span><br><span class="line">            result = cursor.execute(<span class="string">&#x27;insert into tb_emp values(1001,&quot;张三&quot;,4500)&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">&#x27;添加成功&#x27;</span>)</span><br><span class="line">                <span class="comment"># commit() 很重要 否则看不到响应结果</span></span><br><span class="line">                conn.commit()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&#x27;添加失败，操作已经回滚···&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> error:</span><br><span class="line">        print(e)</span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = main()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入相应参数</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    conn = pymysql.connect(host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">                           port = <span class="number">3306</span>,</span><br><span class="line">                           user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           passwd = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           db = <span class="string">&#x27;student&#x27;</span>,</span><br><span class="line">                           charset = <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    eno = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入要删除的员工编号: &#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 执行 sql</span></span><br><span class="line">            result = cursor.execute(<span class="string">&#x27;delete from tb_emp where eno=%s&#x27;</span>, (eno,))</span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">&#x27;删除数据成功···&#x27;</span>)</span><br><span class="line">                conn.commit()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&#x27;删除数据失败,操作已经回滚····&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> erro:</span><br><span class="line">        print(erro)</span><br><span class="line">        <span class="comment"># 回滚</span></span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭连接释放资源</span></span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>更新</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入相应参数</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    conn = pymysql.connect(host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">                           port = <span class="number">3306</span>,</span><br><span class="line">                           user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           passwd = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                           db = <span class="string">&#x27;student&#x27;</span>,</span><br><span class="line">                           charset = <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 输入内容</span></span><br><span class="line">    oldeno = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入原编号: &#x27;</span>))</span><br><span class="line">    neweno = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入新编号: &#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 执行 sql 注意参数位置</span></span><br><span class="line">            result = cursor.execute(<span class="string">&#x27;update tb_emp set eno = %s where eno = %s&#x27;</span>, (neweno, oldeno))</span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">&#x27;更新数据成功···&#x27;</span>)</span><br><span class="line">                conn.commit()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&#x27;更新数据失败,操作已经回滚····&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> erro:</span><br><span class="line">        print(erro)</span><br><span class="line">        <span class="comment"># 回滚</span></span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭连接释放资源</span></span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python-基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链接直达</title>
      <link href="2021/01/03/%E9%93%BE%E6%8E%A5%E7%9B%B4%E8%BE%BE/"/>
      <url>2021/01/03/%E9%93%BE%E6%8E%A5%E7%9B%B4%E8%BE%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="链接直达"><a href="#链接直达" class="headerlink" title="链接直达"></a>链接直达</h3><div class="tabs" id="l-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#l-1-1">域名</button></li><li class="tab"><button type="button" data-href="#l-1-2">LearnColud</button></li><li class="tab"><button type="button" data-href="#l-1-3">壁纸</button></li><li class="tab"><button type="button" data-href="#l-1-4">云开发</button></li><li class="tab"><button type="button" data-href="#l-1-5">GIF制作</button></li><li class="tab"><button type="button" data-href="#l-1-6">学习课程</button></li><li class="tab"><button type="button" data-href="#l-1-7">简历制作</button></li><li class="tab"><button type="button" data-href="#l-1-8">友情链接</button></li><li class="tab"><button type="button" data-href="#l-1-9">PDF转换工具</button></li><li class="tab"><button type="button" data-href="#l-1-10">邮箱</button></li><li class="tab"><button type="button" data-href="#l-1-11">标签</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="l-1-1"><p>免费域名:  <code>http://free.3v.do/</code></p><p>FTP: <code>011.3vftp.com</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-2"><p>国际版<code>LearnCloud</code>: <code>https://console.leancloud.app/app.html?appid=mBJmPXWzwyV04mxhgYDlcesh-MdYXbMMI#/key</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-3"><ul><li>壁纸: <code>http://www.bizhi88.com/</code></li><li>动漫壁纸: <code>http://fxrcxjq.com/t/</code></li><li>兔二工具壁纸: <code>https://www.tool22.com/</code></li><li>桌面壁纸: <code>http://www.netbian.com/</code></li><li>国外壁纸: <code>https://wallhaven.cc/</code></li><li>创可贴: <code>https://www.chuangkit.com/templatecenter/videoclassify?kind=2</code></li><li><code>Windows整理工具</code>:<code>https://hkj52.lanzous.com/iuQDwm6yj6h</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-4"><ul><li>云开发地址: <code>https://yuanyuci.coding.net/user/projects</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-5"><ul><li>GIF压缩：<code> https://www.soogif.com/scale</code></li><li>GIF压缩: <code>https://docsmall.com/gif-compress</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-6"><div class="tabs" id="course-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#course-1-1">Python</button></li><li class="tab"><button type="button" data-href="#course-1-2">Linux</button></li><li class="tab"><button type="button" data-href="#course-1-3">MYSQL</button></li><li class="tab"><button type="button" data-href="#course-1-4">Java</button></li><li class="tab"><button type="button" data-href="#course-1-5">Javascript</button></li><li class="tab"><button type="button" data-href="#course-1-6">Vue</button></li><li class="tab"><button type="button" data-href="#course-1-7">HTML+CSS</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="course-1-1"><ul><li>Pytho基础:  <code>https://www.bilibili.com/video/BV1R7411F7JV?t=67</code></li><li>Python数据可视化: <code>https://www.imooc.com/learn/1210</code></li><li>Python3爬虫入门: <code>https://www.bilibili.com/video/BV1Wp4y1y7Y2?from=search&amp;seid=9025678209887251197</code></li><li>Python-Flask: <code>https://www.bilibili.com/video/BV17z4y1X7UZ?p=3&amp;t=2588</code></li><li>Python-Django: <code>https://www.bilibili.com/video/BV1Uz411e7Cb?t=9</code></li><li>Python-嵩天爬虫: <code>https://www.bilibili.com/video/BV1qs411n79v?from=search&amp;seid=10289071326620204351</code></li><li>Python-数据分析: <code>https://www.bilibili.com/video/BV1HE411N7v1?from=search&amp;seid=10289071326620204351</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-2"><ul><li>Linux： <code>https://www.bilibili.com/video/BV1z54y1z7bx?t=8</code></li><li>HTTP：</li><li>JSON：</li><li>GIT： <code>https://www.bilibili.com/video/BV1Fi4y1x7GK?from=search&amp;seid=14547903304851216450</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-3"><ul><li>MYSQL：<code>https://www.bilibili.com/video/BV1bt411u7mz?from=search&amp;seid=7211060704645698177</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-4"><ul><li><p>Java基础: <code>https://www.bilibili.com/video/BV1ti4y1G7zW?p=2</code></p></li><li><p>Mybatis课程 ： <code>https://www.bilibili.com/video/BV1fE411T7pH?p=6</code></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-5"><ul><li>Pink-Javascript： <code>https://www.bilibili.com/video/BV1Sy4y1C7ha?p=223</code></li><li>Pink-JQuery：<code>https://www.bilibili.com/video/BV1a4411w7Gx?p=10</code></li><li>尚硅谷Javascript: <code>https://www.bilibili.com/video/BV1YW411T7GX?p=87</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-6"><ul><li>Vue-coderwhy：<code>https://www.bilibili.com/video/BV17j411f74d?from=search&amp;seid=320188601766148487</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="course-1-7"><ul><li>尚硅谷: </li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-7"><ul><li>全民简历: <code>https://www.qmjianli.com/</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-8"><ul><li>童哥: <code>https://xugaoxiang.com/</code></li><li>糖果屋:  <code>https://akilar.top/</code></li><li>Xu’sBlog: <code>https://hasaik.com/</code></li><li>个人<code>gitee部署</code>: <code>http://wang_hong_bin.gitee.io/hexoblog</code></li><li><code>aidou3vfree部署</code>: <code>http://aidou.3vfree.com/</code></li><li>JSON：<code>https://www.json.cn/blog/qianduan/</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-9"><p>PDF转换工具:  <code>https://lightpdf.com/zh/pdf-to-word</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-10"><p>QQ 邮箱:<code> 3327511395@qq.com</code></p><p>网易邮箱大师: <code>yuanyuci@yeah.net </code></p><p>谷歌云: <code>aidou321@gmail.com</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="l-1-11"><p>版本标签: <code>https://shields.io/</code></p><p>Zulu-8JDK:<code>https://www.azul.com/downloads/zulu-community/?version=java-16-ea&amp;os=windows&amp;architecture=x86-64-bit&amp;package=jdk</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 链接直达 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-MYSQL 安装</title>
      <link href="2021/01/03/Linux-MYSQL-%E5%AE%89%E8%A3%85/"/>
      <url>2021/01/03/Linux-MYSQL-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-MYSQL-安装"><a href="#Linux-MYSQL-安装" class="headerlink" title="Linux-MYSQL 安装"></a>Linux-MYSQL 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CentOS7安装MySQL以及密码修改</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>下载并安装<code>MySQL</code>官方的 <code>Yum Repository</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装用的Yum Repository</span></span><br><span class="line"></span><br><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>yum 安装</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum 安装</span></span><br><span class="line"></span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103122153.png"></blockquote></li><li><p>MYSQL服务器安装</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MYSQL 服务器安装</span></span><br><span class="line"></span><br><span class="line"> yum -y install mysql-community-server</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103122400.png"></blockquote></li><li><p><code>MySQL</code>数据库设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 mysql</span></span><br><span class="line"></span><br><span class="line"> systemctl status mysqld.service</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码</span></span><br><span class="line"></span><br><span class="line">grep <span class="string">&quot;password&quot;</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>进入<code>MYSQL</code>数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入初始密码，此时不能做任何事情，因为 MySQL 默认必须修改密码之后才能操作数据库：</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;new password&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里有个问题，新密码设置的时候如果设置的过于简单会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#原因是因为MySQL有密码设置的规范，具体是与validate_password_policy的值有关:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL完整的初始密码规则可以通过如下命令查看：</span></span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE <span class="string">&#x27;validate_password%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#密码的长度是由validate_password_length决定的</span></span><br><span class="line"></span><br><span class="line">修改:</span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉;</span></span><br><span class="line"></span><br><span class="line">yum -y remove mysql57-community-release-el7-10.noarch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>MYSQL</code> 允许外部链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p <span class="comment"># 是以权限用户root登录</span></span><br><span class="line"></span><br><span class="line">use mysql; <span class="comment"># 选择mysql库</span></span><br><span class="line"></span><br><span class="line">select <span class="string">&#x27;host&#x27;</span> from user <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>; <span class="comment"># 查看mysql库中的user表的host值（即可进行连接访问的主机/IP名称）</span></span><br><span class="line"></span><br><span class="line">update user <span class="built_in">set</span> host = <span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user =<span class="string">&#x27;root&#x27;</span>;<span class="comment"># 修改host值（以通配符%的内容增加主机/IP地址），当然也可以直接增加IP地址</span></span><br><span class="line"></span><br><span class="line">flush privileges; <span class="comment"># 刷新MySQL的系统权限相关表</span></span><br><span class="line"></span><br><span class="line">select <span class="string">&#x27;host&#x27;</span>  from user <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重起 mysql 服务即可完成。</span><br><span class="line"></span><br><span class="line">打开 mysql配置文件vi /etc/mysql/mysql.conf.d/mysqld.cnf :</span><br><span class="line"></span><br><span class="line">    将bind-address = 127.0.0.1注销​</span><br><span class="line"></span><br><span class="line">    bind-address = 0.0.0.0 <span class="comment"># 表示允许任何主机登陆MySQL</span></span><br><span class="line"></span><br><span class="line">    port=3306 <span class="comment"># 表示MySQL运行端口为3306</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">支持root用户允许远程连接mysql数据库</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123456&#x27;</span> with grant option;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>密码及权限设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql5.6</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;127.0.0.1&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    drop database <span class="keyword">if</span> exists <span class="built_in">test</span>;</span><br><span class="line">    use mysql;</span><br><span class="line">    delete from user <span class="built_in">where</span> not (user=<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">    delete from db <span class="built_in">where</span> user=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    UPDATE user SET password=PASSWORD(<span class="string">&#x27;mysql_pwd&#x27;</span>) WHERE user=<span class="string">&#x27;root&#x27;</span> AND host=<span class="string">&#x27;127.0.0.1&#x27;</span> OR host=<span class="string">&#x27;%&#x27;</span> OR host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">    delete from user <span class="built_in">where</span> password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    flush privileges;</span><br><span class="line">    select user,password,host from mysql.user;</span><br><span class="line">    <span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql5.7:</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    grant all privileges on *.* to root@<span class="string">&#x27;127.0.0.1&#x27;</span> identified by <span class="string">&quot;mysql_pwd&quot;</span> with grant option;</span><br><span class="line">    drop database <span class="keyword">if</span> exists <span class="built_in">test</span>;</span><br><span class="line">    use mysql;</span><br><span class="line">    delete from user <span class="built_in">where</span> not (user=<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">    delete from db <span class="built_in">where</span> user=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    delete from user <span class="built_in">where</span> authentication_string=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;mysql_pwd&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> AND host=<span class="string">&#x27;127.0.0.1&#x27;</span> OR host=<span class="string">&#x27;%&#x27;</span> OR host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">    flush privileges;</span><br><span class="line">    select user,authentication_string,host from mysql.user;</span><br><span class="line">    <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>转载自: <a href="https://www.cnblogs.com/shaozhu520/p/12830607.html">https://www.cnblogs.com/shaozhu520/p/12830607.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-虚拟环境</title>
      <link href="2021/01/03/Python-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
      <url>2021/01/03/Python-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h3><ul><li> 虚拟环境的意义</li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟环境(进入虚拟环境工作时的包安装不能添加 sudo ):</span></span><br><span class="line">   </span><br><span class="line">什么是虚拟环境:  </span><br><span class="line"></span><br><span class="line">    虚拟环境是真实 python 环境的复制版本</span><br></pre></td></tr></table></figure><ul><li><p>虚拟环境的安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">安装虚拟环境的命令:</span><br><span class="line">      </span><br><span class="line">      sudo pip install virtualenv -- 安装虚拟环境的命令</span><br><span class="line">      </span><br><span class="line">      sudo pip install virtualevwarpper -- 安装虚拟环境扩展包</span><br><span class="line">      </span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>虚拟环境配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">编辑家目录下的 .bashrc 文件 添加下面的语句:</span><br><span class="line">    </span><br><span class="line">       export WORKON_HOME = $HOME/.virtualenv</span><br><span class="line">       </span><br><span class="line">       source/usr/local/<span class="built_in">bin</span>/virtualevwarpper.sh</span><br><span class="line"> </span><br><span class="line"> 使用 source .bashrc 使其生效</span><br><span class="line"> </span><br><span class="line"> 创建虚拟环境命令:</span><br><span class="line">    </span><br><span class="line">    mkvirtualenv 虚拟环境名</span><br><span class="line">    </span><br><span class="line">    创建 python3 虚拟环境:</span><br><span class="line">    </span><br><span class="line">       mkvirtualenv -p python3 虚拟环境名</span><br><span class="line"> </span><br><span class="line"> -- 退出虚拟环境:</span><br><span class="line"> </span><br><span class="line">       deactivate</span><br><span class="line">       </span><br><span class="line"> -- 进入虚拟环境工作:</span><br><span class="line"> </span><br><span class="line">    workon 虚拟环境名</span><br><span class="line"> </span><br><span class="line"> -- 删除虚拟环境:</span><br><span class="line">    </span><br><span class="line">    rmvirtualenv 虚拟环境名</span><br><span class="line">    </span><br><span class="line"> -- 安装 Django 框架:</span><br><span class="line"> </span><br><span class="line">    pip install django==<span class="number">1.8</span><span class="number">.2</span>(可以省略版本)</span><br><span class="line">    </span><br><span class="line">    查看已经安装的 django 版本:</span><br><span class="line">    </span><br><span class="line">       pip freeze</span><br><span class="line">       </span><br><span class="line">          </span><br></pre></td></tr></table></figure></li><li><p>创建<code>Flask</code>项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>Flask</code> 项目结构分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>创建 <code>Django</code>项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   django-admin startproject 项目名</span><br><span class="line">   </span><br><span class="line">   文件分析:</span><br><span class="line">   </span><br><span class="line">      __init__.py : 说明 xxx 是一个· python 包</span><br><span class="line">      </span><br><span class="line">      settings.py : 项目的配置文件</span><br><span class="line">      </span><br><span class="line">      uris.py : 进行 url 路由配置</span><br><span class="line">      </span><br><span class="line">      wsgi.py : web 服务器和 django 交互的入口</span><br><span class="line">      </span><br><span class="line">      manage.py : 项目的管理文件</span><br><span class="line">   </span><br><span class="line">一个项目是很多个应用组成的，每一个应用玩成一个待定的特定功能 </span><br><span class="line">   </span><br><span class="line">   常见应用的命令:</span><br><span class="line">   </span><br><span class="line">      python manager.py startapp 应用名</span><br><span class="line">      </span><br><span class="line">      注意: 创建应用时首先进入项目目录</span><br><span class="line">      </span><br><span class="line">      应用下的文件:</span><br><span class="line">      </span><br><span class="line">         __init__.py : 说明目录是一个 python 模块</span><br><span class="line">         </span><br><span class="line">         models.py : 写和数据库项目的内容</span><br><span class="line">         </span><br><span class="line">         views.py : 接受请求,进行处理(定义处理函数,视图函数)</span><br><span class="line">         </span><br><span class="line">         test.py : 写测试代码的文件</span><br><span class="line">         </span><br><span class="line">         admin.py : 网站后台管理相关的文件</span><br><span class="line">         </span><br><span class="line">         建立应用和项目之间的联系,需要对应用进行注册:</span><br><span class="line">         </span><br><span class="line">            修改(主) settings.py 中的 installed_apps  配置项 添加: <span class="string">&quot;应用名&quot;</span></span><br><span class="line">            </span><br><span class="line">      运行开发 web 服务器命令:</span><br><span class="line">         </span><br><span class="line">         python manager.py runserver</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 虚拟环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 说说页添加</title>
      <link href="2021/01/01/Hexo-%E8%AF%B4%E8%AF%B4%E9%A1%B5%E6%B7%BB%E5%8A%A0/"/>
      <url>2021/01/01/Hexo-%E8%AF%B4%E8%AF%B4%E9%A1%B5%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="主题升级"><a href="#主题升级" class="headerlink" title="主题升级"></a>主题升级</h3><ul><li><p><code>Butterfly</code> 主题更新了</p></li><li><p>升级步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">进入主题目录下:</span><br><span class="line"><span class="comment"># 查看下仓库 我的仓库信息将会是 jerry 的 buffterfly</span></span><br><span class="line"></span><br><span class="line">git remote -v </span><br></pre></td></tr></table></figure></li><li><p>仓库信息</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210101165527.png"></li><li><p>执行升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull </span><br></pre></td></tr></table></figure></li><li><p>主题版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag: 3.5.1</span><br></pre></td></tr></table></figure></li></ul><h3 id="Hexo-说说页添加"><a href="#Hexo-说说页添加" class="headerlink" title="Hexo 说说页添加"></a>Hexo 说说页添加</h3><ul><li><p>效果预览</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/shuoshuo.png"></li></ul><h3 id="Artitalk-具体实现"><a href="#Artitalk-具体实现" class="headerlink" title="Artitalk 具体实现"></a>Artitalk 具体实现</h3><ul><li><p>引用</p><blockquote><p><a href="https://artitalk.js.org/doc.html#%F0%9F%8C%88-leancloud-%E7%9A%84%E7%9B%B8%E5%85%B3%E5%87%86%E5%A4%87"> Artitalk.js](https://artitalk.js.org/)</p></a></blockquote></li></ul><h3 id="步骤剖析"><a href="#步骤剖析" class="headerlink" title="步骤剖析"></a>步骤剖析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 前往 LeanCloud 国际版，注册账号。</span><br><span class="line"></span><br><span class="line">国际版: https://console.leancloud.app/<span class="comment">#/apps(英文页面)</span></span><br><span class="line"></span><br><span class="line">使用国际版的理由: 因为国际版的 LeanCloud 不需要配置 serverurl，所以推荐使用国际版，速度没有区别，如果使用国内版的 LeanCloud 别忘了填写 </span><br><span class="line"></span><br><span class="line">serverurl 即可</span><br></pre></td></tr></table></figure><ul><li><p>右上角显示<code>国际版</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210101163320.png"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. 注册完成之后根据 LeanCloud 的提示绑定手机号和邮箱。</span><br></pre></td></tr></table></figure><ul><li><p>不弹出添加方法</p><div class="tabs" id="card-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#card-1-1">配置手机号</button></li><li class="tab"><button type="button" data-href="#card-1-2">配置邮箱</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="card-1-1"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210101163822.png"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="card-1-2"><p>该页面左侧导航栏</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3. 绑定完成之后点击创建应用，应用名称随意，接着在结构化数据中创建 class，命名为 shuoshuo</span><br><span class="line"></span><br><span class="line">注意: shuoshuo  [改名字很重要 也可以不是 shuoshuo 进行自定义名称]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4. 在你新建的应用中找到结构化数据下的用户。点击添加用户，输入想用的用户名及密码。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">5. 回到结构化数据中，点击 class 下的 shuoshuo。找到权限，在 Class 访问权限中将 add_fields 以及 create 权限设置为指定</span><br><span class="line"></span><br><span class="line">用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 delete 和 update 也设置为跟它们一样的权限。</span><br><span class="line"></span><br><span class="line">注意: 注意权限第五步,就按照上述规定执行即可</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6. 然后新建一个名为atComment的class，权限什么的使用默认的即可。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">7. 点击 class 下的 _User 添加列，列名称为 img，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像</span><br><span class="line"></span><br><span class="line">会显示为默认头像 —— Artitalk 的 logo。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8. 在最菜单栏中找到设置-&gt; 应用 keys，记下来 AppID 和 AppKey ，一会会用。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">9. 最后将 _User 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</span><br><span class="line"></span><br><span class="line">注意: 指定用户名与密码谨记,因为发布需要</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210101164559.png"><h3 id="Hexo-Buffterfly的-config-yml-搜索-artitalk"><a href="#Hexo-Buffterfly的-config-yml-搜索-artitalk" class="headerlink" title="Hexo Buffterfly的_config.yml 搜索 [artitalk]"></a>Hexo Buffterfly的<code>_config.yml</code> 搜索 [<code>artitalk</code>]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">添加：</span><br><span class="line">appID: </span><br><span class="line">appKey: </span><br></pre></td></tr></table></figure><h3 id="新建页面-根据shuoshuo这个类同名【自定义就是用自定义类名-必须同名】"><a href="#新建页面-根据shuoshuo这个类同名【自定义就是用自定义类名-必须同名】" class="headerlink" title="新建页面 根据shuoshuo这个类同名【自定义就是用自定义类名  必须同名】"></a>新建页面 <code>根据shuoshuo</code>这个类同名【自定义就是用自定义类名  必须同名】</h3><h3 id="Typora-下的添加信息"><a href="#Typora-下的添加信息" class="headerlink" title="Typora 下的添加信息"></a>Typora 下的添加信息</h3><ul><li><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">shuoshuo</span></span><br><span class="line"><span class="attr">type:</span>  <span class="string">shuoshuo</span></span><br><span class="line"><span class="attr">noDate:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line"><span class="attr">comments:</span> <span class="string">&#x27;false&#x27;</span></span><br><span class="line"><span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>标题栏下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;!-- 引用 artitalk --&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 存放说说的容器 --&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;artitalk_main&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">new</span> Artitalk(&#123;</span><br><span class="line">    appId: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your LeanCloud appId</span></span><br><span class="line">    appKey: <span class="string">&#x27;&#x27;</span> <span class="comment">// Your LeanCloud appKey</span></span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="说说美化-等待中"><a href="#说说美化-等待中" class="headerlink" title="说说美化(等待中)"></a>说说美化(等待中)</h3>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode-注释颜色斜体修改</title>
      <link href="2020/12/31/Vscode-%E6%B3%A8%E9%87%8A%E9%A2%9C%E8%89%B2%E6%96%9C%E4%BD%93%E4%BF%AE%E6%94%B9/"/>
      <url>2020/12/31/Vscode-%E6%B3%A8%E9%87%8A%E9%A2%9C%E8%89%B2%E6%96%9C%E4%BD%93%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="Vscode-注释颜色斜体修改"><a href="#Vscode-注释颜色斜体修改" class="headerlink" title="Vscode-注释颜色斜体修改"></a>Vscode-注释颜色斜体修改</h3><ul><li><p>修改后的注释显示状态</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231173933.png"></li><li><p>添加的具体步骤</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231174252.png"></li><li><p>找不见请搜索<code>settings.json</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231174559.png"></li><li><p><code>json</code>添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&quot;editor.tokenColorCustomizations&quot;: &#123;</span><br><span class="line">       &quot;comments&quot;: &quot;#62f5a2&quot;, // 注释</span><br><span class="line">      <span class="comment">// &quot;keywords&quot;: &quot;#0a0&quot;, // 关键字</span></span><br><span class="line">      <span class="comment">// &quot;variables&quot;: &quot;#f00&quot;, // 变量名</span></span><br><span class="line">       <span class="comment">// &quot;strings&quot;: &quot;#e2d75dbd&quot;, // 字符串</span></span><br><span class="line">        &quot;functions&quot;: &quot;#5b99fcc9&quot;, // 函数名</span><br><span class="line">        &quot;numbers&quot;: &quot;#AE81FF&quot;, // 数字</span><br><span class="line">           &quot;textMateRules&quot;: [</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Comment&quot;</span>,</span><br><span class="line">               <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">                   <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;comment.block&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;comment.block.documentation&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;comment.line&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;comment.line.double-slash&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;punctuation.definition.comment&quot;</span>,</span><br><span class="line">               ],</span><br><span class="line">               <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;fontStyle&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">       ]</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="目前在用-Vscode-插件安装"><a href="#目前在用-Vscode-插件安装" class="headerlink" title="目前在用 Vscode 插件安装"></a>目前在用 Vscode 插件安装</h3><ol><li><p>TODO: 注释一下 <code>Todo Highlighter</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/todo.png"></li><li><p><code>Bracket Pair Colorizer 2</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/kh.png"></li><li><p>汉化插件<code>Chinese</code></p></li><li><p> 对齐，提高阅读 <code>Indent-Rainbow</code></p></li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/iR.png"><ol start="5"><li><p> 代码格式化插件<code>Prettier</code></p></li><li><p> css 定义颜色直观显示<code>Color Highlight</code></p></li><li><p>Vue 高亮插件<code>Vetur</code></p></li><li><p>运行各种代码 <code>Code Runner</code></p></li><li><p> <code>Open-In-Browser</code></p></li><li><p> 可视化<code>git</code> 提交 <code>Git Graph</code></p></li><li><p> <code>koroFileHeader</code>,这个插件主要用于自动的插入头文件开头的说明和函数的说明</p></li></ol><h3 id="Vscode修改默认终端为bash-exe"><a href="#Vscode修改默认终端为bash-exe" class="headerlink" title="Vscode修改默认终端为bash.exe"></a>Vscode修改默认终端为<code>bash.exe</code></h3><blockquote><p> // 修改终端为 <code>bin/bash</code></p><p> <code> &quot;terminal.integrated.shell.windows&quot;: &quot;D:\\Program Files\\Git\\bin\\bash.exe&quot;,</code></p><p>注意: 该<code>bash</code>为<code>git-bash</code>安装目录中:<code>bin目录下的 bash.exe，而非git-bash.exe</code>,否则会唤起<code>bash</code>单独终端</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript-立即执行函数</title>
      <link href="2020/12/31/javascript-%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/"/>
      <url>2020/12/31/javascript-%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="javascript-立即执行函数"><a href="#javascript-立即执行函数" class="headerlink" title="javascript-立即执行函数"></a>javascript-立即执行函数</h3><ul><li><p>立即执行函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 立即执行函数</span></span><br><span class="line">       (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;匿名的立即执行函数&#x27;</span>);</span><br><span class="line">       &#125;())</span><br></pre></td></tr></table></figure></li><li><p>如何理解立即执行函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 立即执行函数</span></span><br><span class="line">       (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;匿名的立即执行函数&#x27;</span>);</span><br><span class="line">       &#125;())</span><br><span class="line">     </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如何理解立即执行函数</span></span><br><span class="line">       <span class="keyword">var</span> a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="keyword">var</span> b = (<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line">         </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如何调用一个函数呢？</span></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;我是被执行的函数···&#x27;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 函数调用</span></span><br><span class="line">       sum();</span><br><span class="line">  </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 理解立即执行函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">var a =  function () &#123;</span></span><br><span class="line"><span class="comment">           console.log(&#x27;匿名的立即执行函数&#x27;);</span></span><br><span class="line"><span class="comment">       &#125;()</span></span><br><span class="line"><span class="comment">    // 联想 不就是立即执行函数</span></span><br><span class="line"><span class="comment">       (a())</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">       (  </span><br><span class="line">           </span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;匿名的立即执行函数&#x27;</span>);</span><br><span class="line">       &#125;() </span><br><span class="line">       </span><br><span class="line">       )</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML-完美视口</title>
      <link href="2020/12/31/HTML-%E5%AE%8C%E7%BE%8E%E8%A7%86%E5%8F%A3/"/>
      <url>2020/12/31/HTML-%E5%AE%8C%E7%BE%8E%E8%A7%86%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML-完美视口"><a href="#HTML-完美视口" class="headerlink" title="HTML-完美视口"></a>HTML-完美视口</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">移动端的视口大小是: 980px (css像素)</span><br><span class="line"></span><br><span class="line">默认情况下,移动端的像素比是 980 / 移动端宽度 </span><br><span class="line"></span><br><span class="line">- 可以通过 meat 标签来设置视口大小</span><br><span class="line"></span><br><span class="line">将网页设置为完美视口:</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web-测试</title>
      <link href="2020/12/31/Web-%E6%B5%8B%E8%AF%95/"/>
      <url>2020/12/31/Web-%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="Web-测试"><a href="#Web-测试" class="headerlink" title="Web-测试"></a>Web-测试</h3><ul><li><p>什么是 web 测试？</p><blockquote><p>Web 测试属于软件测试的范畴,是针对 Web 服务特征进行的软件测试工作。由于Web 应用于用户直接相关,通常需要长时间的大量操作,因此需要针对 Web 项目展开全面测试,保障 Web项目功能和性能的可靠性。</p></blockquote></li><li><p>测试内容</p><ul><li>功能测试<ul><li>主要针对具体功能测试，主要包括链接，表单测试，数据验证Cookies···</li></ul></li><li>性能测试<ul><li>针对高并发，高压力下服务情况测试</li></ul></li><li>用户界面测试<ul><li>主要针对 Web 和 UI测试···</li></ul></li><li>兼容想测试</li><li>安全测试</li><li>接口测试</li></ul></li><li><p>测试目的</p><ul><li>验证 Web 需求和功能是否得到完整实现，再正常情况和非正常情况下的功能显示状态</li><li>发现Web的缺陷,错误,进而较为准确的推测出Web 应用潜在缺陷,获取Web 应用的质量信息</li><li>根据当前发现的问题进行分析，为下一步开发提供支持</li><li>发现影响用户使用的错误,预防用户访问或使用时可能出现的问题</li><li>通过测试结果数据,测试问题记录等数据，了解并分析Web 应用存在的问题,提高Web开发效率</li><li>验证Web 是否可以发布并使用</li></ul></li><li><p>平台兼容性测试</p><blockquote><p>使用 BrowserShots 在线测试工具</p><p>官网地址:<a href=" http://browsershots.org">  http://browsershots.org&lt;/a </a></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231133021.png"></blockquote></li><li><p>浏览器兼容性测试</p><ul><li><p>7种工具(知乎搜索)</p></li><li><p>云工具</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LambdaTest(https://www.lambdatest.com/)</span><br><span class="line"></span><br><span class="line">作为一款基于云的自动化跨浏览器测试平台，LambdaTest提供了2000多种浏览器和操作系统的组合，以方便您测试自己的Web应用程序。它可以让您在基于云的selenium grid上执行自动化的selenium脚本，并针对网页进行各种实时的交互式测试。LambdaTest能够提供自动化测试、实时测试、响应式测试、屏幕截图测试、以及可视化测试。如果您在测试Web应用或网站时遇到任何技术问题，LambdaTest都能提供24x7的全天候支持。可以说，它是最为常见的跨浏览器测试工具之一。</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231133810.png"></li></ul></li><li><p>分辨率测试</p><ul><li>测试结果</li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231134331.png"  width="640"><ul><li>修改上图红框位置(<code>分辨率修改</code>)</li></ul><ul><li><p><code>TestSize</code>官方网址</p><blockquote><p><a href="http://testsize.com">前往 http://testsize.com</a></p></blockquote></li></ul></li><li><p>功能测试</p><ul><li>链接测试</li><li>软件···</li></ul></li><li><p>性能测试</p><ul><li>使用 Chrome的NetWork工具进行网页连接速度测试</li></ul><ul><li><p><code>Timeline</code></p><ul><li><p>蓝色线表示网络和<code>HTML</code> 解析时间</p></li><li><p>紫色线表示 <code>DomContentLoaded </code>事件,即该时间点页面中的<code>DOM</code>建立完成,发生了 <code>DomContentLoaded</code>事件</p></li><li><p>红色线表示 <code>load</code>事件,即该时间点页面加载完了所有资源,发生了<code>Load</code>事件将鼠标放到单个文件的时间轴上,会弹出时间加载每个阶段的详细信息</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231140124.png"><ul><li><p>绿色线表示网页渲染和绘制时间</p><p>加载中每个阶段的过程及含义</p><ul><li><code>Stalled</code>请求处于阻塞状态</li><li><code>Proxy negotiation</code> 与代理服务器的连接通信阶段</li><li><code>DNS Lookup</code> DNS 查找阶段</li><li><code>Initial Content/connecting</code> 建立连接的过程,包含 <code>TCP</code>握手/重试</li><li><code>SSL</code>完成<code>SSL</code>握手阶段</li><li><code>Request sent</code>发送请求</li><li><code>Waiting(TTFB)</code>发出请求后等待服务器响应的时间,响应时间为第一个字节发送过来的时间</li><li><code>Content Download</code> 接受响应数据的时间</li></ul></li></ul></li><li><p>使用<code>Pingdom Tools</code>分析网站访问性能</p><blockquote><p>简介</p><p>PringDom 是免费在线网站速度检测工具</p><ul><li>主界面</li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/pinfdom.png"></blockquote></li><li><p>对主站博客进行性能分析</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231141347.png"></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231141557.png"></li><li><p>压力测试</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo matery-iconfont</title>
      <link href="2020/12/31/Hexo-matery-iconfont/"/>
      <url>2020/12/31/Hexo-matery-iconfont/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-matery-iconfont"><a href="#Hexo-matery-iconfont" class="headerlink" title="Hexo matery-iconfont:"></a>Hexo matery-iconfont:</h3><blockquote><p><a href="https://www.iconfont.cn/">跳转ICON-FONT: https://www.iconfont.cn/</a></p></blockquote><ul><li><p>登录 <code>or</code> 注册 阿里矢量图库</p></li><li><p>挑选想用图标</p></li><li><p>添加至购物车</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231122502.png"></li><li><p>添加至项目</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231122616.png" height="300"></li><li><p>进入项目</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/iconfontcss.png"></li><li><p>选中<code>点击复制代码下的链接</code></p><blockquote><p>进入该链接,获取图标的<code>css</code>样式</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231122822.png"></li><li><p>（已经生效，使用该方法）选中所有信息复制到<code>matery: my.css中</code></p><blockquote><p>使用该方法的理由:  </p><ol><li><p>由于使用外链引入,不知为何不生效(已经考虑了权重问题)</p></li><li><p>下载了<code>font</code>的压缩包引入未生效</p></li></ol></blockquote></li><li><p>修改</p><ul><li><p>原样式</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231123400.png" width="600"></li><li><p>修改后</p></li><li><p>效果查看</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修改内容:</span><br><span class="line">+ 添加 link 图标</span><br><span class="line">+ 添加 hover 效果</span><br><span class="line">+ 修改显示颜色</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/h16.gif" title="h1~h6: Hover"></li><li><p>修改<code>my.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* my.css 全部内容 */</span></span><br><span class="line"><span class="comment">/* Here is your custom css styles. */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/t/font_2301842_zbxhtw82wpa.eot?t=1609385220731&quot;</span>); <span class="comment">/* IE9 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/t/font_2301842_zbxhtw82wpa.eot?t=1609385220731#iefix&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;embedded-opentype&quot;</span>),</span><br><span class="line">    /* IE6-IE8 */</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&quot;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAANUAAsAAAAABzQAAAMFAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqCQIIXATYCJAMICwYABCAFhG0HLhs7BhHVk/9kf0nuVG0v4EQocLqiZycaymFh22Qvr1glm4PFLC6xH2LSM8EDv7/3XPz/7/ecyLZ1CFFKS3Ta4kIRKtSlhjqH/I62OfGSLiQskjbvmsB3r+hxs78fV7tOQmiukvLORpWyvvvvoLZsB0YwGfnsAWeXC5FlGbkAeIkyuJ0D8ZhiL2Pq//vNkvdXGUwEwMLhtCt+B5RagPdcPBcwsDTQc69gViCBecPYBS9wPQTgIlI6kW8vr8egsbsJQAwUu1sxBRsazYIGgb1hrEasMsfIZRlGrETfF78EGZDYFHZa9RZ0kP0kJ0xNWY2iAAF9OQ3AJoEC0oEGUd+oq6QSXzqFS/dpYnGsZAGfrAPaYf94IEDYsRM9AIRD2jPRPcajJkoAdNLYAcYnpYPMgJyrc0c2uyv93SyJXcUR10XAgR4vMj3NneOO+Tv2jSvlkTB6dRW7vk40HDJXurmKatEsZ10GPN63uttq64fSfW2IF3mHPjuIEGeWAyPO9vWt5lSSuL3hlcLH5drucPa0QrqOUONnCH2qXQ87tXEzbRrqavDbl79sS3PCO1MhcNxu+0OO69JIbcM7rj7I2tmDqPuVXO2/mp/ZnajvDgTF4WriFUHGqLwxztHzFLoJQCimntgCsG561fLnf0Pf/L8Kfm2GBuBtFyGyWDfDMAOY+9ML+M/0gRXaYNpyqTV6o0HSMamrBFy4AAs2BfmYKgp9qZDAEPpqBgcRGSgM8UiNTQcbbjLBjiELXKQpmuwm2CCF0E4g1TwAQYBDkPi4BEWAW6TGvoONMP9gJyAFLhpjzekmMURvDoQ54wuKP+iybYSr5E2cfEX5rnLKMyPcE2nQTvAdrxy8YIO0xIDhIwNmAYLaGs5gM6yqFjpqDZbsKOYudF3R9CKnbOvRZnQgzBlfUPxBl20jgvq8qXz+ivJd5dSRUyd/Ig26efAdbwDywmsG5TzKJcNHBswCBLU1nIEGK8fXQtfcymDJjprg6UIX1RJDec72gvoHUlkBtliOnWzFrNKNHY0AAAAA&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;woff2&quot;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/t/font_2301842_zbxhtw82wpa.woff?t=1609385220731&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;woff&quot;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/t/font_2301842_zbxhtw82wpa.ttf?t=1609385220731&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;truetype&quot;</span>),</span><br><span class="line">    /* chrome, firefox, opera, Safari, Android, iOS <span class="number">4.2</span>+ */</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/t/font_2301842_zbxhtw82wpa.svg?t=1609385220731#iconfont&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;svg&quot;</span>); <span class="comment">/* iOS 4.1- */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  -webkit-<span class="attribute">font</span>-smoothing: antialiased;</span><br><span class="line">  -moz-osx-<span class="attribute">font</span>-smoothing: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-link</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e706&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-id">#toc-heading-1</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-id">#toc-heading-2</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-id">#toc-heading-3</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-id">#toc-heading-4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;\e706&quot;</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">visibility</span>: visible;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f47466</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#artDetail</span> <span class="selector-id">#articleContent</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f47466</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> matery-theme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> matery </tag>
            
            <tag> iconfont </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-选择器的使用</title>
      <link href="2020/12/30/CSS-%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/12/30/CSS-%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS-选择器的使用"><a href="#CSS-选择器的使用" class="headerlink" title="CSS-选择器的使用"></a>CSS-选择器的使用</h3><ul><li><p>常用选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">元素选择器:</span><br><span class="line">作用: 根据标签名选中指定的元素</span><br><span class="line">    语法: 标签名&#123;&#125;</span><br><span class="line">    Eg. <span class="selector-tag">div</span>&#123;&#125;  <span class="selector-tag">p</span>&#123;&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ID 选择器:</span><br><span class="line">作用: 根据元素的 id 属性值选中一个元素</span><br><span class="line">语法:#id-属性值&#123;&#125;</span><br><span class="line">Eg. <span class="selector-id">#box</span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">类选择器:</span><br><span class="line">作用: 根据元素的 class 属性值选中一组元素</span><br><span class="line">语法: .class-属性值</span><br><span class="line"></span><br><span class="line">注意: class 是一个标签的属性，它和 id 类似,不同的是 class 可以重复使用,可以通过 class 属性来为元素分组</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">通配选择器:</span><br><span class="line">作用: 选中页面中的所有元素</span><br><span class="line">语法: *</span><br></pre></td></tr></table></figure></li><li><p>复合选择器</p><ul><li><p>交集选择器</p><div class="tip cogs"><p>交集选择器:</p><p>​    作用: 选中同时符合多个条件的元素</p><p>​    语法: 选择器1选择器2···</p><p>​    注意点: 交集选择器中如果有元素选择器,必须使用元素选择器开头</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 将 class 为 red 的 div 的字体 大小设置为 30px */</span></span><br><span class="line">条件解析:</span><br><span class="line">  类名: red</span><br><span class="line">  元素: div</span><br><span class="line"></span><br><span class="line">  &lt;style&gt;</span><br><span class="line">        .red&#123;</span><br><span class="line">            color: red;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span><span class="selector-class">.red</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>HTML结构</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span> 变红色 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span> 变红色 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">请问效果将会是什么样?    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/choice.png" width="400" height="400"></div></div></li></ul></li><li><p>分组选择器(并集选择器)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 同时选中 div 和 span 元素 */</span></span><br><span class="line"><span class="selector-tag">div</span>,<span class="selector-tag">span</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 通过类名同时选中 */</span></span><br><span class="line"><span class="selector-class">.nav</span>&#123;&#125;,<span class="selector-class">.siderbar</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 使用逗号分割多个选择器  */</span></span><br><span class="line">        <span class="selector-class">.nav</span>,</span><br><span class="line">        <span class="selector-class">.siderbar</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: blue;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">            <span class="attribute">background</span>: pink;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span> 我是 nav <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;siderbar&quot;</span>&gt;</span> 我是 siderbar <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">效果查看    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/splitNav.png" width="400" height="420" alt="资源加载中"></div></div></li><li><p>元素之间的关系</p><div class="tabs" id="yuansu-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#yuansu-1-1">父元素</button></li><li class="tab"><button type="button" data-href="#yuansu-1-2">子元素</button></li><li class="tab"><button type="button" data-href="#yuansu-1-3">祖先元素</button></li><li class="tab"><button type="button" data-href="#yuansu-1-4">后代元素</button></li><li class="tab"><button type="button" data-href="#yuansu-1-5">兄弟元素</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="yuansu-1-1"><p>父元素:</p><ul><li>直接包含子元素的元素叫父元素</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="yuansu-1-2"><p>子元素: </p><ul><li>直接被父元素包含的元素是子元素</li></ul><p>子元素选择器: </p><ul><li> 作用: 选中指定元素的指定子元素</li><li>语法: <code>父元素 &gt; 子元素</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="yuansu-1-3"><p>祖先元素:</p><ul><li>直接或间接包含后代的元素叫做祖先元素</li><li>一个元素的父元素也是它的祖先元素</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="yuansu-1-4"><p>后代元素:</p><ul><li> 直接或间接被祖先元素包含的叫做后代元素</li><li>子元素也是后代元素</li></ul><p>后代元素选择器:</p><ul><li>作用: 选中指定元素内的指定后代元素</li><li>语法: <code>祖先  后代(之间空格隔开)</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="yuansu-1-5"><p>兄弟元素：</p><ul><li>拥有相同父元素的元素是兄弟元素</li></ul><p>兄弟选择器:</p><ul><li>寻找<code>下一个</code>(紧挨着的)</li><li>语法: <code>前一个元素 + 下一个</code></li><li>选择下边<code>所有</code>的兄弟</li><li>语法:<code> 兄 ~ 弟</code></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p>属性选择器</p><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">属性选择器使用</button></li><li class="tab"><button type="button" data-href="#-2">内容图解</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>[属性名]  选择含有指定属性的元素:</p><p>[属性名=属性值] 选择含有指定属性和属性值的元素</p><p>[属性名 ^= 属性值] 选择属性值以指定值开头的元素</p><p>[属性名 $=属性值] 选择属性值以指定结尾的元素</p><p>[属性名 *=属性值] 选择属性值中含有某值的元素的元素</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/titleS.png" width="600" height="600"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p>伪类选择器</p><ul><li><p>伪类</p><div class="tip cogs"><p>伪类(不存在的类,特殊的类)</p><ul><li>伪类用来描述一个元素的<code>特殊状态</code></li><li>被点击的元素,鼠标移入的元素</li></ul></div></li></ul><div class="tabs" id="child-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#child-1-1">伪类选择器</button></li><li class="tab"><button type="button" data-href="#child-1-2">否定伪类</button></li><li class="tab"><button type="button" data-href="#child-1-3">超链接伪类</button></li><li class="tab"><button type="button" data-href="#child-1-4">伪元素:首字母下沉</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="child-1-1"><ul><li><p>第一个选择</p><p><code>元素:first-child{}</code></p></li><li><p>最后一个的选择</p><p><code>元素:last-child{}</code></p><p><code>元素:last-child(n/even/odd/2n+1){}</code></p></li><li><p>第 n 个元素的选择</p><ul><li>特殊值<ul><li><code>n </code>第 <code>n</code> 个 的 <code>n</code> 的范围<code>0 </code>到 正无穷</li><li><code>2n</code>或<code>even</code>表示选中偶数位的元素</li><li><code>2n+1</code>或<code>odd</code>表示选中奇数位的元素</li></ul></li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="child-1-2"><p><code>元素名:not()</code></p><p><code>Eg. 去除第三个 li 的选择</code></p><p><code>ul li:not(:nth-child(3)){}</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="child-1-3"><ul><li>没有访问过的链接(a有效 a:link)</li><li>访问过的链接(a有效 a:visited)</li><li>:active</li><li>:hover</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="child-1-4"><p>伪元素: 表示页面中一些特殊的并不真是存在的元素(<code>特殊的位置</code>)</p><p>伪元素使用:   <code>::开头</code></p><ul><li><p>首字母下沉效果</p><blockquote><p><code>元素名::first-leffer{}</code> 第一个字母</p><p><code>元素名::first-line{}</code> 第一行</p><p>常用(<code>必须结合 contetn使用</code>):</p><p><code>::after{}</code></p><p><code>::before{}</code></p></blockquote></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h3 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">内联样式1000</span><br><span class="line">id 选择器 100</span><br><span class="line">类和伪类选择器   10</span><br><span class="line">元素选择器1</span><br><span class="line">统配选择器0</span><br><span class="line">继承没有优先级</span><br><span class="line">比较优先级时: 需要将所有选择器的优先级进行相加计算,最后优先级越高,则越优先级显示(分组选择器是单独计算的)</span><br></pre></td></tr></table></figure><h3 id="像素和百分比"><a href="#像素和百分比" class="headerlink" title="像素和百分比"></a>像素和百分比</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">像素:</span><br><span class="line"></span><br><span class="line">百分比: 也可以将属性值设置为相对于其父元素属性的百分比(父元素说法不严谨,有待改进)</span><br></pre></td></tr></table></figure><h3 id="em和rem"><a href="#em和rem" class="headerlink" title="em和rem"></a><code>em</code>和<code>rem</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">em:</span><br><span class="line">    - em 是相对于元素的字体大小来计算的</span><br><span class="line">    - 1em = 1(font-size)</span><br><span class="line">    - em 会根据字体大小的改变而改变</span><br><span class="line">rem:</span><br><span class="line">- rem 是相对于根元素的字体大小来计算</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-樱花特效添加</title>
      <link href="2020/12/29/Hexo-%E6%A8%B1%E8%8A%B1%E7%89%B9%E6%95%88%E6%B7%BB%E5%8A%A0/"/>
      <url>2020/12/29/Hexo-%E6%A8%B1%E8%8A%B1%E7%89%B9%E6%95%88%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="樱花飘落特效"><a href="#樱花飘落特效" class="headerlink" title="樱花飘落特效"></a>樱花飘落特效</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201229175522499.gif" titke="樱花飘落" alt="资源加载中···" width="800" height="200"></li><li><p>具体实现步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. 进入 themes\hexo-theme-matery\<span class="built_in">source</span>\libs\others 文件夹下</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. 新建文件 sakura.js</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3. 点击进入: </span><br><span class="line"><span class="comment"># 樱花效果 如遇其他效果同理步骤</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/<span class="built_in">source</span>/js/sakura.js</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4. 复制上述链接内容至 sakura.js</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5. 进入 themes\hexo-theme-matery 下的配置文件: _config.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6. 搜索 libs (引入样式的地方)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7. 在 js 下的最后一行添加: sakura: /libs/others/sakura.js</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">8. themes\hexo-theme-matery\layout\layout.ejs里添加如下代码:</span><br><span class="line"></span><br><span class="line">+ 具体位置(测试了几处位置都失败,请尽量参考如下):</span><br><span class="line">+ 进入第八步骤打开文件在第 8 ~ 9 空白处添加如下代码片段</span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.sakura.enable) &#123; %&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;&lt;%- theme.libs.js.sakura %&gt;&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9. 主题配置文件中(hexo-theme-matery\_config.yml)添加:</span><br><span class="line">    <span class="comment"># 樱花</span></span><br><span class="line">    sakura: </span><br><span class="line">        <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="文章显示短链接"><a href="#文章显示短链接" class="headerlink" title="文章显示短链接"></a>文章显示短链接</h3><ul><li><p>下载插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save  </span><br></pre></td></tr></table></figure></li><li><p>在<code>Hexo</code>根目录下的 <code>_config.yml </code>文件中，修改 <code>permalink:</code> ，并在文件末尾新增 <code>abbrlink:</code>配置项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示状态配置</span></span><br><span class="line">permalink: :year/:month:day:abbrlink.html</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo 根目录下配置文件中添加如下信息 (加载由上而下)注意位置</span></span><br><span class="line">abbrlink: </span><br><span class="line">  alg: crc16 <span class="comment">#算法选项：crc16丨crc32</span></span><br><span class="line">  rep: dec <span class="comment">#输出进制：dec为十进制，hex为十六进制</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Hexo-端口号问题"><a href="#Hexo-端口号问题" class="headerlink" title="Hexo 端口号问题"></a>Hexo 端口号问题</h3><ul><li><p>修改被占用端口号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">错误状态:</span><br><span class="line"> code: <span class="string">&#x27;EADDRINUSE&#x27;</span>,</span><br><span class="line">     errno: -4091,</span><br><span class="line">     syscall: <span class="string">&#x27;listen&#x27;</span>,</span><br><span class="line">     address: <span class="string">&#x27;::&#x27;</span>,</span><br><span class="line">     port: 4000</span><br></pre></td></tr></table></figure></li><li><p>进行如下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p端口号数值(任意)</span><br><span class="line"><span class="comment"># 例如使用 5000 端口号</span></span><br><span class="line">Eg. </span><br><span class="line">hexo s -p5000</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> matery-theme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> matery </tag>
            
            <tag> JS特效 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5-新增标签</title>
      <link href="2020/12/29/HTML5-%E6%96%B0%E5%A2%9E%E6%A0%87%E7%AD%BE/"/>
      <url>2020/12/29/HTML5-%E6%96%B0%E5%A2%9E%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML5-新增标签"><a href="#HTML5-新增标签" class="headerlink" title="HTML5-新增标签"></a>HTML5-新增标签</h3><h4 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h4><ol><li><code>&lt;header&gt;</code> 头部标签</li><li><code>&lt;nav&gt;</code> 导航标签</li><li><code>&lt;article&gt;</code>  内容标签</li><li><code>&lt;section&gt;</code> 块级标签</li><li> <code>&lt;aside&gt;</code> 侧边栏标签</li><li> <code>&lt;footer&gt;</code> 尾部标签</li></ol><h4 id="音频标签"><a href="#音频标签" class="headerlink" title="音频标签"></a>音频标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">格式</th><th align="center">IE9</th><th align="center">Firefox3.5</th><th align="center">Opera10.5</th><th align="center">Chrome3.0</th><th align="center">Safari3.0</th></tr></thead><tbody><tr><td align="center"><code>Ogg Vorbis</code></td><td align="center"></td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center"></td></tr><tr><td align="center"><code>MP3</code></td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center">✓</td></tr><tr><td align="center"><code>Wav</code></td><td align="center"></td><td align="center">✓</td><td align="center">✓</td><td align="center"></td><td align="center">✓</td></tr></tbody></table><table><thead><tr><th align="center">属性</th><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>autoplay</code></td><td align="center"><code>autoplay</code></td><td align="center">如果出现该属性,则音频在就绪后马上播放</td></tr><tr><td align="center"><code>controls</code></td><td align="center"><code>controls</code></td><td align="center">如果出现该属性,则向用户显示控件,比如播放按钮</td></tr><tr><td align="center"><code>loop</code></td><td align="center"><code>loop</code></td><td align="center">如果出现该属性,则每当音频结束时重新开始播放</td></tr><tr><td align="center"><code>src</code></td><td align="center"><code>url</code></td><td align="center">要播放的音频的 <code>URL</code></td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;path/···&quot;</span>  <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line">+ 兼容性写法</span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;path/···&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mepg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;path/···&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="视频标签"><a href="#视频标签" class="headerlink" title="视频标签"></a>视频标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span>=<span class="string">“autoplay”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;path/···&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;path/···&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line">属性: width,height,loop,preload( auto预加载，none 不应加载视频),src,poster</span><br></pre></td></tr></table></figure><h3 id="HTML5表单"><a href="#HTML5表单" class="headerlink" title="HTML5表单"></a>HTML5表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">input: </span><br><span class="line">    type=&quot;email&quot; 限制用户输入为 Email 类型</span><br><span class="line"></span><br><span class="line">    type=&quot;tel&quot; 手机号码</span><br><span class="line">    type=&quot;number&quot; 限制用户输入必须为数字类型</span><br><span class="line">    type=&quot;search&quot; 搜索框</span><br><span class="line"></span><br><span class="line">    type=&quot;url&quot; 限制用户输入必须为 URL</span><br><span class="line">    type=&quot;time&quot; 限制用户输入必须为时间类型</span><br><span class="line">type=&quot;color&quot; 生成一个颜色先择表单</span><br><span class="line">type=&quot;date&quot; 限制用户输入必须为日期类型</span><br></pre></td></tr></table></figure><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命名作用:</span><br><span class="line">添加样式</span><br><span class="line">js 控制元素对象</span><br><span class="line">id=<span class="string">&quot;&quot;</span> 身份证 具有唯一性</span><br><span class="line">class=<span class="string">&quot;&quot;</span> 同名同姓,多个</span><br><span class="line">命名规范:</span><br><span class="line">1. 字母开头 数字 横线</span><br><span class="line">2. 见名知意 通俗易懂</span><br></pre></td></tr></table></figure><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul><li><p>图片优化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">hieght</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;关键词&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> 网页优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git知识补充</title>
      <link href="2020/12/26/Git%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/"/>
      <url>2020/12/26/Git%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h3 id="git-内容补充"><a href="#git-内容补充" class="headerlink" title="git 内容补充"></a>git 内容补充</h3><ul><li>新手推荐练习<code>https://learngitbranching.js.org/?locale=zh_CN</code></li></ul><h3 id="git-图解"><a href="#git-图解" class="headerlink" title="git 图解"></a>git 图解</h3><ol><li><p><code>git commit -m &quot;本次提交提交日志&quot;</code></p><details blue><summary> git-commit </summary>              <div class='content'>              <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitCommitS.png" title="git  commit -m'提交日志 ' " width="600">              </div>            </details></li><li><p><code>git branch</code></p><div class="tip cogs"><p>Git 的分支也非常轻量。它们只是简单地指向某个提交纪录 —— 仅此而已。所以许多 Git 爱好者传颂：</p><p><strong><code>早建分支！多用分支！</code></strong></p><p>这是因为即使创建再多的分支也不会造成储存或内存上的开销，并且按逻辑分解工作到不同的分支要比维护那些特别臃肿的分支简单多了。</p><p>在将分支和提交记录结合起来后，我们会看到两者如何协作。现在只要记住使用分支其实就相当于在说：“我想基于这个提交以及它所有的父提交进行新的工作。”</p></div><div class="tabs" id="git-branch"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-branch-1">git-branch 1</button></li><li class="tab"><button type="button" data-href="#git-branch-2">git-branch 2</button></li><li class="tab"><button type="button" data-href="#git-branch-3">git-branch 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-branch-1"><p>新建分支:</p><p>​    <code>git branch new-branch-name</code></p><p>​    <details blue><summary> head指向 </summary><br>           <div class='content'><br>           <p><code>HEAD指向 </code></p> <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/thisBranch.png" title="HEAD 指向 master"><br>           </div><br>         </details></p><p>切换分支:</p><p>​    <code>git checkout new-branch-name</code></p><p>​    <details blue><summary> 新建并实现切换分支 </summary><br>           <div class='content'><br>           <ul><li>head 指向 <code>bugFix</code></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/thisBugFix.png"><p>​    </p><br>           </div><br>         </details></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-2"><p>创建并切换到该分支:</p><p>​    <code>git checkout -b new-branch-name</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-3"><p>为什么要切换分支？</p><p>如果某个变更（提交）是非常重要的，那么一定要跟某个分支绑定在一起</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>git merge</code></p><div class="tabs" id="merge"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#merge-1">merge图解</button></li><li class="tab"><button type="button" data-href="#merge-2">merge-bugFix</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="merge-1"><details blue><summary> 什么是merge </summary>           <div class='content'>           <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/thismerge.png" width="600">           </div>         </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="merge-2"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201226120909.png"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ol><h3 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a><code>git rebase</code></h3><div class="tip cogs"><p>第二种合并分支的方法是  <strong><code>git rebase</code></strong> 。Rebase 实际上就是取出一系列的提交记录，“复制”它们，然后在另外一个地方逐个的放下去。</p><p>Rebase 的优势就是可以创造更线性的提交历史，这听上去有些难以理解。如果只允许使用 Rebase 的话，代码库的提交历史将会变得异常清晰。</p></div><div class="tabs" id="git-rebase"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-rebase-1">git-rebase 1</button></li><li class="tab"><button type="button" data-href="#git-rebase-2">rebase-原理</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-rebase-1"><details ><summary> 后续有待深入理解 </summary>              <div class='content'>              <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/thisRebase.png">              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-rebase-2"><details ><summary> rebase-合并原理 </summary>              <div class='content'>              <p>这关的主要命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">+ 新建并切换分支 bugFix </span><br><span class="line"></span><br><span class="line">git branch bugFix</span><br><span class="line">git checkout bugFix</span><br><span class="line">简写:</span><br><span class="line">git checkout -b bugFix</span><br><span class="line"> + 在 bugFix 分支进行一次提交</span><br><span class="line"> git commit -m <span class="string">&quot;create new branch bugFix and commit content&quot;</span></span><br><span class="line"> + 切换回 master 分支</span><br><span class="line"> git checkout master</span><br><span class="line"> + 在 master 提交信息</span><br><span class="line"> git commit -m <span class="string">&quot;return master and commit content&quot;</span></span><br><span class="line"> + 返回 bugFix 进行 rebase </span><br><span class="line"> git checkout bugFix</span><br><span class="line"> git rebase master</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/finishRebase.png">              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="分离-HEAD"><a href="#分离-HEAD" class="headerlink" title="分离 HEAD"></a>分离 <code>HEAD</code></h3><div class="tabs" id="分离head"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分离head-1">HEAD解释</button></li><li class="tab"><button type="button" data-href="#分离head-2">分离的HEAD</button></li><li class="tab"><button type="button" data-href="#分离head-3">分离HEAD实际操作</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分离head-1"><p><code>HEAD,然而什么是 HEAD</code></p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">点击查看:HEAD解释    </button><div class="hide-content"><div class="tip cogs"><p>我们首先看一下 “HEAD”。 HEAD 是一个对当前检出记录的符号引用 —— 也就是指向你正在其基础上进行工作的提交记录。</p><p>HEAD 总是指向当前分支上最近一次提交记录。大多数修改提交树的 Git 命令都是从改变 HEAD 的指向开始的。</p><p>HEAD 通常情况下是指向分支名的（如 bugFix）。在你提交时，改变了 bugFix 的状态，这一变化通过 HEAD 变得可见。</p></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分离head-2"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/fHEAD.png"><p><code>HEAD -&gt; C1</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分离head-3"><p>目标: 从 <code>bugFix</code> 分支中分离出 HEAD 并让其指向一个提交记录。</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/checkoutC4.png" title="完成下图的操作命令"><div class="hide-block"><button type="button" class="hide-button button--animated" style="">点击查看具体命令HEAD分离    </button><div class="hide-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout c4</span><br></pre></td></tr></table></figure></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a><code>git status</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看状态</span><br></pre></td></tr></table></figure><h3 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名 <span class="comment"># 提交指定文件</span></span><br><span class="line"></span><br><span class="line">git add . <span class="comment"># 英文小点 对所有文件添加</span></span><br></pre></td></tr></table></figure><h3 id="添加提交日志信息"><a href="#添加提交日志信息" class="headerlink" title="添加提交日志信息"></a>添加提交日志信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;日志信息&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改提交后的 commit message</span></span><br><span class="line">  +  修改最新的 commit </span><br><span class="line">git commit --amend</span><br><span class="line"></span><br><span class="line"> + 老旧的 commit 进行修改</span><br><span class="line"> </span><br><span class="line"> git rebase -i 目标-commit-ID</span><br><span class="line"> </span><br><span class="line"> 注意为交互式: 选择一种 例如: r</span><br></pre></td></tr></table></figure><ul><li><code>git commit --amend</code> 修改最近一次的 <code>commit-message</code></li></ul><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103145414.png"></p><ul><li><p>老旧的<code>message</code> 修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i commit-ID (找父级)</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103145929.png" title="为能正确使用该命令 有待补充"><ul><li><p>应该显示如下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意: 涉及基点，选择适合的策略修改</span><br><span class="line"></span><br><span class="line">须知: 多个或者间隔的 commit  可以合并</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103151300.png"></li></ul></li></ul><h3 id="远程仓库的拉取"><a href="#远程仓库的拉取" class="headerlink" title="远程仓库的拉取"></a>远程仓库的拉取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin 分支名 <span class="comment"># origin是对提交地址添加的别名,后续指出</span></span><br></pre></td></tr></table></figure><h3 id="提交至远程仓库"><a href="#提交至远程仓库" class="headerlink" title="提交至远程仓库"></a>提交至远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure><h3 id="删除不需要的文件"><a href="#删除不需要的文件" class="headerlink" title="删除不需要的文件"></a>删除不需要的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 手动删除</span><br><span class="line"></span><br><span class="line">2. 使用命令对文件删除</span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">基础命令准备预备文件    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/createFils.png" width="600"></div></div><div class="tabs" id="文件删除"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#文件删除-1">手动删除文件</button></li><li class="tab"><button type="button" data-href="#文件删除-2">命令行删除文件</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="文件删除-1"><ol><li><p>手动删除文件</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">手动删除文件 </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/shou.png" title="右键删除想要删除的文件即可" width="600"></div></div></li><li><p>查询当前信息</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看删除后的状态信息 </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/deleteFile.png" width="600"></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="文件删除-2"><div class="tabs" id="删除的两种方式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#删除的两种方式-1">删除的两种方式 1</button></li><li class="tab"><button type="button" data-href="#删除的两种方式-2">删除该路径下的所有文件及文件夹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="删除的两种方式-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除指定文件</span></span><br><span class="line">git rm newFile.txt -f <span class="comment"># -f 参数为强制删除</span></span><br><span class="line"><span class="comment"># 查看当前状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">命令行删除单个文件    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/clsFile.png"></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="删除的两种方式-2"><p><code>git rm -rf *</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="文件中重命名"><a href="#文件中重命名" class="headerlink" title="文件中重命名"></a>文件中重命名</h3><div class="tabs" id="id-rename"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#id-rename-1">手动重命名</button></li><li class="tab"><button type="button" data-href="#id-rename-2">手动重命名配图</button></li><li class="tab"><button type="button" data-href="#id-rename-3">执行命令行操作</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="id-rename-1"><ol><li> 选择目标文件,右击选择重命名</li><li> <code>git status</code></li><li> 在进行步骤 <code>2</code>时可以发现实际进行了两个步骤</li></ol><ul><li>删除原文件</li><li>添加新文件</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="id-rename-2"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/renameFir.png" height="300">   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/secondC.png"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="id-rename-3"><p><code>git mv  原文件名称.后缀名  新文件名称.后缀名  </code></p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">请思考命令行操作是执行了几步    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/renameFile.png" title="当前状态是 rename"></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="移动文件并对文件重命名"><a href="#移动文件并对文件重命名" class="headerlink" title="移动文件并对文件重命名"></a>移动文件并对文件重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv 目标文件 路径/新名称</span><br></pre></td></tr></table></figure><h3 id="查看文件的前后变化"><a href="#查看文件的前后变化" class="headerlink" title="查看文件的前后变化"></a>查看文件的前后变化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=oneline path/文件名</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line"></span><br><span class="line">11fa30c159f0468334f11fc58f0e98130fa8478c (HEAD -&gt; main) addFuile</span><br><span class="line"></span><br><span class="line">+ 查看当前的 commit</span><br><span class="line"></span><br><span class="line">git show 11fa30c159f0468334f11fc58f0e98130fa8478c <span class="comment"># 查看具体 commit 信息</span></span><br><span class="line"></span><br><span class="line">+ 查看具体文件</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> -p path/file</span><br></pre></td></tr></table></figure><h3 id="操作失误如何一键还原"><a href="#操作失误如何一键还原" class="headerlink" title="操作失误如何一键还原"></a>操作失误如何一键还原</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ (未加入暂存区,未执行 git add .)可以还原回到上一次提交的状态</span><br><span class="line"></span><br><span class="line">git checkout -- path/fileName</span><br></pre></td></tr></table></figure><h3 id="不在追踪时如何实现撤销追踪操作"><a href="#不在追踪时如何实现撤销追踪操作" class="headerlink" title="不在追踪时如何实现撤销追踪操作"></a>不在追踪时如何实现撤销追踪操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">执行了 git add . 后进行状态还原</span><br><span class="line"></span><br><span class="line">git reset HEAD path&#x2F;fileName</span><br></pre></td></tr></table></figure><h3 id="回到指定版本"><a href="#回到指定版本" class="headerlink" title="回到指定版本"></a>回到指定版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">后续补充命令: git cat-file -t commit-ID </span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">    -t 查看类型</span><br><span class="line">    -p 查看内容</span><br><span class="line">    </span><br><span class="line">图形化界面打开:</span><br><span class="line"> gitk --all</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 实现方法一</span><br><span class="line">git reset --hard HEAD^ <span class="comment"># 一个尖角号代表一个版本</span></span><br><span class="line">2. 实现方法二</span><br><span class="line">git <span class="built_in">log</span>(补充: git <span class="built_in">log</span> -n(数值 查看多少范围内的提交))</span><br><span class="line"><span class="comment"># 可以取前几位或者全部id</span></span><br><span class="line"><span class="comment"># Eg. git reset --hard HEAD 11fa</span></span><br><span class="line"></span><br><span class="line">git reset --hard HEAD commit-ID （疑问）</span><br><span class="line"></span><br><span class="line">git reset --hard commit-id (回退到某一版本 暂存区和工作区一致 慎重)</span><br><span class="line"></span><br><span class="line"><span class="comment"># git reset  HEAD 直接恢复暂存区的所有文件</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/commitID.png" title="commit id 每提交一次都会产生一个 commit-id"><h3 id="指定文件进行版本回退"><a href="#指定文件进行版本回退" class="headerlink" title="指定文件进行版本回退"></a>指定文件进行版本回退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拿取回退版本的 commit-ID</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 单独文件进行回退指定版本 其他文件不会受到影响</span></span><br><span class="line">git checkout commit-id -- 指定文件 </span><br></pre></td></tr></table></figure><h3 id="实战之git-本地推送至github远程"><a href="#实战之git-本地推送至github远程" class="headerlink" title="实战之git 本地推送至github远程"></a>实战之<code>git 本地</code>推送至<code>github</code>远程</h3><ol><li><p>第一次提交</p><ul><li><p>登录/注册 <code>github</code> 账号</p></li><li><p>点击头像 旁边的<code>+</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/nwqresository.png" title="新建仓库"></li><li><p>进入如下界面</p><ul><li>在本地需要提交至远程的文件夹初始化</li><li>执行<code>git init</code></li><li>添加暂存区操作<code>git add .</code></li><li>添加日志<code>git commit -m 日志信息</code></li><li>切换主分支<code>git branch -M main</code>(可以不执行该命令，当前默认 main)</li><li>对于<code>git</code>访问链接起别名 <code>origin</code>,<code>git remote add  origin xxx</code> </li><li>推送远程<code>git push origin main</code></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitRes.png" title="远程仓库"></li></ul></li><li><p>二次修改并推送远程</p><ul><li><p>执行添加命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li><p>执行添加提交的日志信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m 日志信息</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">拉取与推送中可能有一个会出问题 ref···</span><br><span class="line"><span class="comment"># 我暂时会使用强制推送不过不建议甚至不要用</span></span><br><span class="line">(出现红色 refjected 时，需要 merge 后续提到解决方案,暂时强制推送)推送命令:</span><br><span class="line">git push origin main -f</span><br></pre></td></tr></table></figure></li><li><p>拉取远程至本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pull 拉取 origin 别名 main 拉取的分支名</span></span><br><span class="line">git pull origin main </span><br></pre></td></tr></table></figure></li><li><p>推送至远程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>链接</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/codeaddress.png" tile="clone 时会使用到地址或其他途径使用"></li></ol></li><li><p> 克隆仓库</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定分支克隆</span></span><br><span class="line">git <span class="built_in">clone</span> -b 分支名 地址</span><br><span class="line"><span class="comment"># 直接克隆目标</span></span><br><span class="line">git <span class="built_in">clone</span> 地址(上述提到的链接)</span><br></pre></td></tr></table></figure><h3 id="版本进行标签化管理"><a href="#版本进行标签化管理" class="headerlink" title="版本进行标签化管理"></a>版本进行标签化管理</h3><ol><li><p>最新内容添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加在最新的 commit</span></span><br><span class="line">git tag 版本号(自定义符合规范即可 Eg. v1.0)</span><br></pre></td></tr></table></figure></li></ol><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201226172555.png" title="对最新的提交添加tag"><ol start="2"><li><p>对以往内容添加标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 commit id</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 添加在以往的 commit</span></span><br><span class="line">git tag 版本 commit-id</span><br></pre></td></tr></table></figure></li><li><p>删除标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除标签</span></span><br><span class="line">git tag -d 删除的tag-name</span><br></pre></td></tr></table></figure></li><li><p><code>tag</code>推送至远程库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin tag-name</span><br></pre></td></tr></table></figure></li></ol><h3 id="分支及分支的操作-增，删"><a href="#分支及分支的操作-增，删" class="headerlink" title="分支及分支的操作(增，删)"></a>分支及分支的操作(增，删)</h3><ol><li><p>创建分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch 分支名</span><br><span class="line"><span class="comment"># 查看分支 * 为当前所在分支</span></span><br><span class="line">git branch </span><br></pre></td></tr></table></figure></li><li><p> 切换分支</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout branch-name</span><br></pre></td></tr></table></figure><ul><li><p>演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/addDev.png" title="分支创建,切换" width="400"> </li></ul><ol start="3"><li><p>删除分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前提条件: 1.不能处于想要删除的分支上 2. 不能删除有提交的分支为推送远程</span></span><br><span class="line">git branch -d  branch-name</span><br></pre></td></tr></table></figure><ul><li><p>解释注释内容</p><ul><li><p>处于该分支不能删除（<font color="red">观察**<code>*</code> **</font>）</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/innerDev.png" title="处于 dev 分支"></li><li><p>分支进行了 <code>commit</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/textADd.png" title="分支操作"><ul><li><p>强制删除分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -D branch-name</span><br><span class="line"><span class="comment"># 成功删除分支显示</span></span><br><span class="line"><span class="comment"># $ git branch -D dev</span></span><br><span class="line"><span class="comment"># Deleted branch dev (was a4f4fb0).</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><p>创建分支并切换到该分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b new-branch-name</span><br></pre></td></tr></table></figure></li></ol><h3 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到 main 分支，将 dev 分支合并到 main</span></span><br><span class="line"><span class="comment"># git merge dev</span></span><br><span class="line">git merge merge-branch-name</span><br></pre></td></tr></table></figure><ul><li><p>注意查看右侧图像变动</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/newbranch.gif" title="注意图像变动" width="600"></li><li><p><code>merge </code>产生冲突</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/mergeers.png" title="merge Error" width="600"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/mergeErro.png" title="实现 merge error" width="600"></li><li><p>解决方案</p><ul><li><p>方法一</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保留原分支代码，忽略其他分支代码</span></span><br><span class="line">git merge --abort</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/finshMerge.png" width="400"></li><li><p>方法二</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自行操作时只需要再次输入: git merge dev（ 分支名-- dev 为例子）</span><br></pre></td></tr></table></figure><ul><li><p>手动删除特殊符号后保存(与其他人沟通得到最终方案执行)</p></li><li><p>执行<code>git add .</code></p></li><li><p>再执行<code>git commit</code>，添加编辑信息</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/mergeRes.png" title="按 i 进行内容添加,添加完毕后按下ESC 再输入冒号,输入 wq 退出" width="600"></li><li><p><code>git commit -m</code> “对于这次合并要添加的日志信息”</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/enMerge.png"></li><li><p>推送远程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure></li></ul><h3 id="23-不同人想要查看版本路线该如何进行操作"><a href="#23-不同人想要查看版本路线该如何进行操作" class="headerlink" title="23. 不同人想要查看版本路线该如何进行操作"></a>23. 不同人想要查看版本路线该如何进行操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  局部信息</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/logInfo.png" title="使得他人快速了解该项目做了那些"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更加具体</span></span><br><span class="line">git <span class="built_in">log</span> --oneline --graph</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/graph.png"></li></ul></li></ul><h3 id="删除不想要的分支-远程分支"><a href="#删除不想要的分支-远程分支" class="headerlink" title="删除不想要的分支(远程分支)"></a>删除不想要的分支(远程分支)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取所有远程库(拉取所有分支)</span></span><br><span class="line">git fetch</span><br><span class="line"><span class="comment"># 删除远程分支 执行前: 三思而后行</span></span><br><span class="line">git push origin --delete branch-name</span><br></pre></td></tr></table></figure><h3 id="模拟多人修改同一文件（实战后有待优化···）"><a href="#模拟多人修改同一文件（实战后有待优化···）" class="headerlink" title="模拟多人修改同一文件（实战后有待优化···）"></a>模拟多人修改同一文件（实战后有待优化···）</h3><h5 id="实现github同一台电脑配置两个邮箱和用户名"><a href="#实现github同一台电脑配置两个邮箱和用户名" class="headerlink" title="实现github同一台电脑配置两个邮箱和用户名"></a>实现<code>github</code>同一台电脑配置两个邮箱和用户名</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 地址 指定文件夹名称</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加多个用户</span></span><br><span class="line">git config --add --<span class="built_in">local</span> user.name <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">git config --add --<span class="built_in">local</span> user.email <span class="string">&#x27;xxx@qq.com&#x27;</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">git config --<span class="built_in">local</span> --list</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">git branch -av </span><br><span class="line"><span class="comment"># 本地分支与远端分支关联</span></span><br><span class="line">git checkout -b branch-name remots/远端别名/branch-name</span><br></pre></td></tr></table></figure><h3 id="纳入了版本管理中-gitignore文件不生效"><a href="#纳入了版本管理中-gitignore文件不生效" class="headerlink" title="纳入了版本管理中: (.gitignore文件不生效)"></a>纳入了版本管理中: (<code>.gitignore</code>文件不生效)</h3><h4 id="需求-忽略某些文件"><a href="#需求-忽略某些文件" class="headerlink" title="需求: 忽略某些文件"></a>需求: 忽略某些文件</h4><ul><li><p>在推送后发现某些内容不需要添加，无法忽视</p></li><li><p>解决方案:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理暂存区</span></span><br><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;update .gitignore&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="分离头指针"><a href="#分离头指针" class="headerlink" title="分离头指针"></a>分离头指针</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">不建议的操作</span><br><span class="line"></span><br><span class="line">git checkout commit-ID</span><br><span class="line">git commit -am<span class="string">&quot;commit log&quot;</span> <span class="comment"># 不经过暂存区</span></span><br><span class="line">git <span class="built_in">log</span> (查看 HEAD 时发现无指向)</span><br><span class="line">gitk --all(图形化界面查看)</span><br></pre></td></tr></table></figure><ul><li><p>分离头指针（我的理解暂时有点抽象）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分离头指针内容如果无用会被清理</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20210103143654.png" width="600"></li></ul><h3 id="暂存区和HEAD-包含文件比较"><a href="#暂存区和HEAD-包含文件比较" class="headerlink" title="暂存区和HEAD  包含文件比较"></a>暂存区和HEAD  包含文件比较</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比较命令</span></span><br><span class="line"></span><br><span class="line">git diff --cached </span><br></pre></td></tr></table></figure><h3 id="工作区和暂存区进行差异比较"><a href="#工作区和暂存区进行差异比较" class="headerlink" title="工作区和暂存区进行差异比较"></a>工作区和暂存区进行差异比较</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件比较差异</span></span><br><span class="line">git diff -- file-name</span><br></pre></td></tr></table></figure><h3 id="分支与分支之间内容差异比较"><a href="#分支与分支之间内容差异比较" class="headerlink" title="分支与分支之间内容差异比较"></a>分支与分支之间内容差异比较</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有内容比较</span></span><br><span class="line">git diff branch-name1 branch-name2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 两条分支中具体文件比较差异</span></span><br><span class="line">git diff  branch-name1 branch-name2  -- file-name(commit-id 比较等同)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="开发中临时加塞紧急任务处理方案"><a href="#开发中临时加塞紧急任务处理方案" class="headerlink" title="开发中临时加塞紧急任务处理方案"></a>开发中临时加塞紧急任务处理方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ 将当前任务放在一个隔离环境</span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line">+ 去处理BUG</span><br><span class="line"></span><br><span class="line">+ 完成 BUG 回到 stash 的任务</span><br><span class="line">两种:</span><br><span class="line">1.  git stash apply</span><br><span class="line">git stash list </span><br><span class="line">2. git stash pop</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h2><h3 id="github-插件推荐："><a href="#github-插件推荐：" class="headerlink" title="github 插件推荐："></a>github 插件推荐：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Octotree - GitHub code tree(作用: 列出目录结构)</span><br><span class="line">2. Enhanced Github(作用: 直接显示文件大小)</span><br><span class="line">3. GitZip <span class="keyword">for</span> github(作用: 双击可以下载单独文件)</span><br></pre></td></tr></table></figure><h4 id="无法推送-出现injected解决方案"><a href="#无法推送-出现injected解决方案" class="headerlink" title="无法推送,出现injected解决方案"></a>无法推送,出现<code>injected</code>解决方案</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看远端仓库关联信息</span></span><br><span class="line">git branch -av</span><br><span class="line"></span><br><span class="line">git merge origin/branch-name</span><br><span class="line"><span class="comment"># 输入这次修改的信息 merge时: git commit 的操作一样</span></span><br><span class="line">git push </span><br></pre></td></tr></table></figure><h4 id="本地分支与远程分支关联的两种方式"><a href="#本地分支与远程分支关联的两种方式" class="headerlink" title="本地分支与远程分支关联的两种方式"></a>本地分支与远程分支关联的两种方式</h4><ol><li><p>方式一</p><ul><li><p>再远程仓库(<code>github</code>)新建分支</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/branchDevA.png" title="建立远程分支"></li><li><p>命令行执行<code>git fetch</code>,如下显示拉取了远程</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch</span><br><span class="line">From https:&#x2F;&#x2F;github.com&#x2F;lovobin&#x2F;hiddenContent</span><br><span class="line"> * [new branch]      dev        -&gt; origin&#x2F;dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试是否关联远程分支"><a href="#测试是否关联远程分支" class="headerlink" title="测试是否关联远程分支"></a>测试是否关联远程分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 dev 分支写入以下修改内容</span></span><br><span class="line">$ <span class="built_in">echo</span> dev-README.md &gt; README.md</span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line">git commit -m <span class="string">&quot;dev: update&quot;</span></span><br><span class="line"><span class="comment"># 请求远程库</span></span><br><span class="line">git pull origin dev</span><br><span class="line"><span class="comment"># 添加 merge 日志信息</span></span><br><span class="line">$ git pull origin dev</span><br><span class="line"></span><br><span class="line">    From https://github.com/lovobin/hiddenContent</span><br><span class="line">     * branch            dev        -&gt; FETCH_HEAD</span><br><span class="line">    Removing reName.txt</span><br><span class="line">    Merge made by the <span class="string">&#x27;recursive&#x27;</span> strategy.</span><br><span class="line">     index.html | 4 ++++</span><br><span class="line">     reName.txt | 1 -</span><br><span class="line">     2 files changed, 4 insertions(+), 1 deletion(-)</span><br><span class="line">     delete mode 100644 reName.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">&quot;dev: update &quot;</span></span><br><span class="line">$ git push origin dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>刷新远程库</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/devOrigin.png" title="得到结果为: 成功关联远程分支"></li></ul></li><li><p>方式二： 命令行操作(初学者的我尝试后不建议)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建本地分支</span></span><br><span class="line">简写创建切换:</span><br><span class="line">创建: git branch branch-name</span><br><span class="line">切换: git checkout branch-name</span><br><span class="line">创建切换总写: </span><br><span class="line">git checkout -b new-branch-name</span><br><span class="line"><span class="comment"># 提交本地分支到远程仓库</span></span><br><span class="line">git push origin local-branch-name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地分支与远程分支关联(去除···)</span></span><br><span class="line"><span class="comment"># git branch –set-upstream local-branch-name(本地新建分支名) origin/远程分支名</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-JsDeliver</title>
      <link href="2020/12/24/Hexo-JsDeliver/"/>
      <url>2020/12/24/Hexo-JsDeliver/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-JsDeliver使用"><a href="#Hexo-JsDeliver使用" class="headerlink" title="Hexo-JsDeliver使用"></a>Hexo-JsDeliver使用</h3><ul><li>新建仓库</li><li>提交内容</li><li>发布版本(<strong><code>Releases 右侧栏</code></strong>)</li></ul><h3 id="发布版本后使用文件"><a href="#发布版本后使用文件" class="headerlink" title="发布版本后使用文件?"></a>发布版本后使用文件?</h3><ul><li><p>第一次使用版本号（第一次引用）</p><blockquote><p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/文件路径</code></p></blockquote></li><li><p>不使用版本号（复用）</p><ul><li>何为复用: <div class="note success flat"><p>这里说的复用是重复使用,(想了几个词,但是没有解释清楚“<code>复用</code>”)</p></div></li></ul><blockquote><p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径</code></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lovobin/hiddenContent/timeline.jpg" title="请勿访问" width="600"></li><li><p>为什么使用版本号</p><div class="note success flat"><p><font color="purple">使用版本号引用的优点在于：这个链接仅停留在发布版本号的时刻，无论仓库如何变化，这个版本号的文件都不会受到影响。同时可以避免 JSD 缓存问题 </font> </p></div></li><li><p>为什么去除版本号（<code>文件修改次数过多时推荐使用</code>）</p><div class="note success flat"><p>在 <code>jsdeliver</code>前缀下,后续添加<code>用户名/仓库名/文件路径</code>引用的内容就直接会被使用,<font color="red"><strong>但是在添加版本号新修改内容就不能得到访问</strong></font>,相比之下一些不需要改动的文件就添加版本号，时常改动的文件不建议添加版本号</p></div></li></ul><h3 id="后续使用发现问题（jsDeliver缓存引起）"><a href="#后续使用发现问题（jsDeliver缓存引起）" class="headerlink" title="后续使用发现问题（jsDeliver缓存引起）"></a>后续使用发现问题（<code>jsDeliver缓存引起</code>）</h3><ul><li>未添加版本号很长一段时间不能加载出文件资源</li><li>遗留问题: 添加内容后怎么快速得到资源访问(难道一直添加版本号疑虑中– 目前只能这样)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github-Gitee一台电脑同时使用配置改进</title>
      <link href="2020/12/22/Github-Gitee%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%94%B9%E8%BF%9B/"/>
      <url>2020/12/22/Github-Gitee%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%94%B9%E8%BF%9B/</url>
      
        <content type="html"><![CDATA[<h3 id="Github-Gitee配置改进"><a href="#Github-Gitee配置改进" class="headerlink" title="Github-Gitee配置改进"></a>Github-Gitee配置改进</h3><blockquote><p> 安装 <code>git(前面已经重复造轮子了,请自主查看主要过程)</code></p></blockquote><h3 id="1-清除-git的全局设置"><a href="#1-清除-git的全局设置" class="headerlink" title="1. 清除 git的全局设置"></a>1. 清除 <code>git</code>的全局设置</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">global</span> --unset user.name <span class="string">&quot;Your-userName&quot;</span></span><br><span class="line"></span><br><span class="line">git config --<span class="built_in">global</span> --unset user.email <span class="string">&quot;Your-userEmail&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-github生成新的-SSH-keys"><a href="#2-github生成新的-SSH-keys" class="headerlink" title="2. github生成新的 SSH keys"></a>2. <code>github</code>生成新的 <code>SSH keys</code></h3><ul><li><code>github  ssh key</code>的创建</li><li>指定文件路径(<code>C:/Users/用户名/.ssh/</code>)，具体到盘符文件夹（<code>~ 符号会报错</code>）</li><li>注意 <code>/  与  \ 必须所有同方向</code></li></ul><blockquote><p>执行: </p><p>​    <code>ssh-keygen -t rsa -f  C:/Users/用户名/.ssh/id_rsa.github -C &quot;email@qq.com&quot;</code></p><p>​    （个人<code>github</code>与<code>gitee</code>同邮箱）</p><p>直接回车 3 下</p></blockquote><h3 id="3-gitee生成新的-SSH-keys"><a href="#3-gitee生成新的-SSH-keys" class="headerlink" title="3.  gitee生成新的 SSH keys"></a>3.  <code>gitee</code>生成新的 <code>SSH keys</code></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f  C:<span class="regexp">/Users/</span>用户名/.ssh/id_rsa.gitee -C <span class="string">&quot;email@qq.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-完成后会在-C-Users-用户名-ssh-目录下生成以下文件"><a href="#4-完成后会在-C-Users-用户名-ssh-目录下生成以下文件" class="headerlink" title="4. 完成后会在 C:/Users/用户名/.ssh/目录下生成以下文件"></a>4. 完成后会在 <code>C:/Users/用户名/.ssh/目录下</code>生成以下文件</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/sshkey.png"><h3 id="5-添加识别-SSH-keys-新的私钥"><a href="#5-添加识别-SSH-keys-新的私钥" class="headerlink" title="5. 添加识别 SSH keys 新的私钥"></a>5. 添加识别 <code>SSH keys </code>新的私钥</h3><blockquote><p>默认只读取<code> id_rsa</code>，为了让 <code>SSH</code> 识别新的私钥，需要将新的私钥加入到 <code>SSH agent </code>中</p></blockquote><ul><li><p><code> ssh-agent bash</code></p><ul><li>正确形式暂时忘记</li><li>错误(执行该命令: <code> Set-Service -Name ssh-agent -StartupType automatic 个人在使用该命令时通过 powershell 执行</code>)</li></ul></li><li><p>使用自己的路径执行如下检测</p><ul><li><code> ssh-add  C:/Users/爱豆/.ssh/id_rsa.github</code></li><li><code> ssh-add  C:/Users/爱豆/.ssh/id_rsa.gitee</code></li></ul></li></ul><h3 id="6-多账号必须配置-config-文件-重点"><a href="#6-多账号必须配置-config-文件-重点" class="headerlink" title="6. 多账号必须配置 config 文件(重点)"></a>6. 多账号必须配置 config 文件(重点)</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="symbol">C:</span>/Users/爱豆/.ssh/config   (config 无类型,无后缀) </span><br></pre></td></tr></table></figure><ul><li><p><code>config</code>内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Default gitHub user Self</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    User git <span class="comment"># 默认就是git，可以不写</span></span><br><span class="line">    IdentityFile  <span class="comment"># C:/Users/爱豆/.ssh/id_rsa.github (修改为你的)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># gitee</span></span><br><span class="line">Host gitee.com</span><br><span class="line">    Port 22</span><br><span class="line">    HostName gitee.com</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile  <span class="comment"># C:/Users/爱豆/.ssh/id_rsa.gitee (修改为你的)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="7-在-github-和gitee-网站添加-ssh"><a href="#7-在-github-和gitee-网站添加-ssh" class="headerlink" title="7.  在 github 和gitee 网站添加 ssh"></a>7.  在 <code>github</code> 和<code>gitee</code> 网站添加<code> ssh</code></h3><ol><li><p><code>github</code>的添加</p><ul><li><p>点击<code>github主页</code>右侧头像</p></li><li><p>点击<code>settings</code></p></li><li><p>点击左侧导航<code>SSH and GPG keys</code></p></li><li><p>点击<code>New SSH Key</code>（绿色按钮）</p></li><li><p><code>个人删除了之前的 key</code></p></li><li><p>添加 <code>同名文件.pub 的 key</code></p></li></ul></li><li><p><code>gitee</code>的添加</p><ul><li>点击右侧图像</li><li>点击设置</li><li>点击左侧导航中的<code>SSH</code>公钥</li><li><code>添加同名.pub</code>的公钥</li></ul></li></ol><h3 id="8-测试是否连接成功"><a href="#8-测试是否连接成功" class="headerlink" title="8. 测试是否连接成功"></a>8. 测试是否连接成功</h3><ul><li><p>检测命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure></li><li><p>个人显示信息</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/finishKey.png" width="600" title="添加成功"><h3 id="9-gitee使用"><a href="#9-gitee使用" class="headerlink" title="9. gitee使用"></a>9. <code>gitee</code>使用</h3><ul><li>不添加 <code>--global</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config  user.name <span class="string">&quot;Your-userName&quot;</span></span><br><span class="line"></span><br><span class="line">git config  user.email <span class="string">&quot;Your-userEmail&quot;</span></span><br></pre></td></tr></table></figure><h3 id="10-github个人电脑未提示任何信息直接进行了-git相关操作"><a href="#10-github个人电脑未提示任何信息直接进行了-git相关操作" class="headerlink" title="10. github个人电脑未提示任何信息直接进行了 git相关操作"></a>10. <code>github</code>个人电脑未提示任何信息直接进行了 <code>git</code>相关操作</h3><h3 id="来源参考-知乎"><a href="#来源参考-知乎" class="headerlink" title="来源参考: 知乎"></a>来源参考: <a href="https://www.jianshu.com/p/68578d52470c">知乎</a></h3>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-免费域名获取发布博客</title>
      <link href="2020/12/21/Hexo-%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E8%8E%B7%E5%8F%96%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/12/21/Hexo-%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E8%8E%B7%E5%8F%96%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-免费域名获取发布博客"><a href="#Hexo-免费域名获取发布博客" class="headerlink" title="Hexo-免费域名获取发布博客"></a>Hexo-免费域名获取发布博客</h3><ul><li><p>博客预览</p><blockquote><p><a href="http://aidou.3vfree.com/">http://aidou.3vfree.com/</a></p></blockquote></li><li><p>域名获取方式</p><blockquote><p><a href="https://www.bilibili.com/video/BV1hE411X7yG?p=2">Pink 老师视频资源 详细内容查看 </a></p></blockquote></li></ul><h3 id="至今该域名的更新处提示"><a href="#至今该域名的更新处提示" class="headerlink" title="至今该域名的更新处提示"></a>至今该域名的更新处提示</h3><ul><li><p>收费 <code>10元</code> 获取 <code>100M</code>永久免费空间</p></li><li><p>下载 <code>8uftp</code></p><blockquote><p><a href="http://ftp.8u.cn/"><code>点击下载 传输工具 8uftp</code></a></p></blockquote></li><li><p>软件主页面</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/utp8.png" width="600"></li></ul><h3 id="博客如何部署？"><a href="#博客如何部署？" class="headerlink" title="博客如何部署？"></a>博客如何部署？</h3><ul><li><p>在本地进行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p><code>8uftp</code>工具的使用方法</p><blockquote><p><a href="http://free.3v.do/news/2.html"> 点击跳转查看8uftp 工具使用方法 </a></p></blockquote></li><li><p>连接成功后的页面</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/freeas.png"></li></ul><h3 id="选中-真实机-本地-Hexo-的-public-所有文件拖入右侧等待"><a href="#选中-真实机-本地-Hexo-的-public-所有文件拖入右侧等待" class="headerlink" title="选中 真实机(本地 Hexo 的 public 所有文件拖入右侧等待)"></a>选中 真实机(本地 Hexo 的 public 所有文件拖入右侧等待)</h3><h3 id="右侧远程机状态为-成功···"><a href="#右侧远程机状态为-成功···" class="headerlink" title="右侧远程机状态为:  成功···"></a>右侧远程机状态为:  成功···</h3><h3 id="根据域名预览博客即可"><a href="#根据域名预览博客即可" class="headerlink" title="根据域名预览博客即可"></a>根据域名预览博客即可</h3><hr /><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点:"></a>缺点:</h3><ul><li>博客内容不能及时更新</li><li>空间小</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github-first-Releases</title>
      <link href="2020/12/21/Github-first-Releases/"/>
      <url>2020/12/21/Github-first-Releases/</url>
      
        <content type="html"><![CDATA[<h3 id="记录自己的-github-first-releases-开源项目"><a href="#记录自己的-github-first-releases-开源项目" class="headerlink" title="记录自己的 github-first-releases(开源项目)"></a>记录自己的 github-first-releases(开源项目)</h3><ul><li><p>演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitTree.png" title='记录第一次版本发布流程'></li></ul><h3 id="如何发布一个版本"><a href="#如何发布一个版本" class="headerlink" title="如何发布一个版本"></a>如何发布一个版本</h3><ol><li><p> 进入一个想要发布的仓库</p></li><li><p> 点击仓库右侧<code>create a new release</code></p></li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/cnew.png"><ol start="3"><li><p> 输入发布包的版本号。版本号基于 <a href="http://git-scm.com/book/en/Git-Basics-Tagging">Git 标签</a>,我们建议标签命名，符合<a href="http://semver.org/">语义版本</a>。一般就是v1.0, v1.2.3这样, 或者对于测试版本, 可以像 v0.2-alpha 或者 v5.9-beta.3(当初忘记前缀了···)</p></li><li><p> 选择发布版本基于哪个目标</p></li><li><p> 如果发布包不稳定，选择<code>This is a pre-release</code> 来提醒用户这个是不能用于生产环境的</p></li><li><p> 输入标题和描述</p></li></ol>   <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/infos.png"><ol start="7"><li> 点击 <code>Publish release</code> 实现版本发布</li><li>作为初学者眼中的版本控制(初学时的想法,等待更新····)</li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="2020/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>2020/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="等待学习····"><a href="#等待学习····" class="headerlink" title="等待学习····"></a>等待学习····</h3><hr />]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Inter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-promise</title>
      <link href="2020/12/20/Vue-promise/"/>
      <url>2020/12/20/Vue-promise/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="2020/12/20/Vue/"/>
      <url>2020/12/20/Vue/</url>
      
        <content type="html"><![CDATA[<h3 id="视频推荐-coderwhy讲师"><a href="#视频推荐-coderwhy讲师" class="headerlink" title="视频推荐 coderwhy讲师"></a>视频推荐 <code>coderwhy</code>讲师</h3><blockquote><p><a href="https://www.bilibili.com/video/BV17j411f74d?from=search&seid=12740683773742747178">点击观看  coderwhy </a></p></blockquote><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-axios</title>
      <link href="2020/12/20/Vue-axios/"/>
      <url>2020/12/20/Vue-axios/</url>
      
        <content type="html"><![CDATA[<h3 id="axios模块"><a href="#axios模块" class="headerlink" title="axios模块"></a>axios模块</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax</title>
      <link href="2020/12/20/Ajax/"/>
      <url>2020/12/20/Ajax/</url>
      
        <content type="html"><![CDATA[<h3 id="Ajax-Web服务器"><a href="#Ajax-Web服务器" class="headerlink" title="Ajax-Web服务器"></a>Ajax-Web服务器</h3><blockquote><p> [黑马] 前后端交互- AjaX技术学习</p></blockquote><h4 id="搭建Ajax环境"><a href="#搭建Ajax环境" class="headerlink" title="搭建Ajax环境"></a>搭建<code>Ajax</code>环境</h4><ul><li><p>Ajax的应用场景</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ajax 的应用场景:</span><br><span class="line">     <span class="number">1.</span> 页面上拉加载更多数据</span><br><span class="line">     <span class="number">2.</span> 列表数据无刷新分页</span><br><span class="line">     <span class="number">3.</span> 表单项离开焦点数据验证</span><br></pre></td></tr></table></figure></li><li><p>安装<code>node</code>,自行查阅</p></li><li><p>下载<code>express</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载完成后会出现 node_modules</span></span><br></pre></td></tr></table></figure></li><li><p>新建文件夹<code>public</code>，用于存放静态资源</p></li><li><p>新建<code>app.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 express 框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 路径处理模块</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建WEB 服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// 静态资源访问服务器功能</span></span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">&quot;public&quot;</span>)));</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">// 控制台显示输出</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;服务器启动成功···&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 域名访问: localhost/127.0.0.1:3000/静态文件资源名称.html</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure></li><li><p>效果预览</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Ajax01.gif" width="600"></li></ul><h4 id="Ajax-运行原理"><a href="#Ajax-运行原理" class="headerlink" title="Ajax 运行原理"></a>Ajax 运行原理</h4><h4 id="Ajax的实现原理"><a href="#Ajax的实现原理" class="headerlink" title="Ajax的实现原理"></a>Ajax的实现原理</h4><ol><li><p>创建Ajax对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure></li><li><p>告诉Ajax亲求地址以及请求方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数1: 请求方式 参数2: 请求地址</span></span><br><span class="line">        xhr.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://localhost:3000/参数2(请求地址)&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p> 发送请求</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrh.send();</span><br></pre></td></tr></table></figure><ol start="4"><li><p>获取服务器端给与客户端的响应数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="Aja处理JSON数据"><a href="#Aja处理JSON数据" class="headerlink" title="Aja处理JSON数据"></a>Aja处理JSON数据</h4><ul><li><p>Ajax处理JSON数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">// console.log(xhr.responseText);</span></span><br><span class="line">           <span class="comment">// console.log(typeof xhr.responseText);</span></span><br><span class="line">           <span class="keyword">var</span> responseText = <span class="built_in">JSON</span>.parse(xhr.responseText); <span class="comment">// 将JSON 字符串转换为 JSON 对象</span></span><br><span class="line">           <span class="built_in">console</span>.log(responseText);</span><br><span class="line">           <span class="keyword">var</span> str = <span class="string">&#x27;&lt;h2&gt; &#x27;</span> + responseText.name + <span class="string">&#x27;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">           <span class="comment">// 显示内容</span></span><br><span class="line">           <span class="built_in">document</span>.body.innerHTML = str;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Ajax请求参数传递"><a href="#Ajax请求参数传递" class="headerlink" title="Ajax请求参数传递"></a>Ajax请求参数传递</h4><ul><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数传递</span></span><br><span class="line">app.get(<span class="string">&quot;/get&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(req.query);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><code>get</code>请求方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//path: 传递get请求参数.html</span></span><br><span class="line">        <span class="comment">// 获取username </span></span><br><span class="line">        <span class="keyword">var</span> username = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#username&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取 age</span></span><br><span class="line">        <span class="keyword">var</span> age = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#age&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取按钮元素 </span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>);</span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            <span class="comment">// username&amp;age</span></span><br><span class="line">            <span class="comment">// 获取用户在文本框输入的值</span></span><br><span class="line">            <span class="keyword">var</span> nameValue = username.value;</span><br><span class="line">            <span class="keyword">var</span> ageValue = age.value;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 拼接请求参数</span></span><br><span class="line">            <span class="keyword">var</span> params = <span class="string">&#x27;username=&#x27;</span> + nameValue + <span class="string">&#x27;&amp;age=&#x27;</span> + ageValue;</span><br><span class="line">            <span class="comment">// 配置 Ajax 对象</span></span><br><span class="line">            xhr.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://localhost:3000/get?&#x27;</span> + params);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 发送请求</span></span><br><span class="line">            xhr.send();</span><br><span class="line">            <span class="comment">// 获取服务器端相应的数据</span></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>post</code>请求方式</p><ul><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// post 所需要</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  post 请求参数</span></span><br><span class="line">app.post(<span class="string">&quot;/post&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(req.body);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>请求报文</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 HTTP 请求和响应的过程中传递的数据块就叫报文,包括要传送的数据和一些附加信息,这些数据和信息要遵守规定好的格式</span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//path: 传递get请求参数.html</span></span><br><span class="line">       <span class="comment">// 获取username </span></span><br><span class="line">       <span class="keyword">var</span> username = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#username&#x27;</span>);</span><br><span class="line">       <span class="comment">// 获取 age</span></span><br><span class="line">       <span class="keyword">var</span> age = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#age&#x27;</span>);</span><br><span class="line">       <span class="comment">// 获取按钮元素 </span></span><br><span class="line">       <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>);</span><br><span class="line">       btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">           <span class="comment">// username&amp;age</span></span><br><span class="line">           <span class="comment">// 获取用户在文本框输入的值</span></span><br><span class="line">           <span class="keyword">var</span> nameValue = username.value;</span><br><span class="line">           <span class="keyword">var</span> ageValue = age.value;</span><br><span class="line">           <span class="comment">// 拼接请求参数</span></span><br><span class="line">           <span class="keyword">var</span> params = <span class="string">&#x27;username=&#x27;</span> + nameValue + <span class="string">&#x27;&amp;age=&#x27;</span> + ageValue;</span><br><span class="line">           <span class="comment">// 配置 Ajax 对象</span></span><br><span class="line">           xhr.open(<span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;http://localhost:3000/post&#x27;</span>);</span><br><span class="line">           <span class="comment">// 设置请求参数格式的类型(post 请求必须要设置)</span></span><br><span class="line">           xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">           <span class="comment">// 发送请求</span></span><br><span class="line">           xhr.send(params);</span><br><span class="line">           <span class="comment">// 获取服务器端相应的数据</span></span><br><span class="line">           xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>JSON</code>参数格式传递</p><ul><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.use(bodyParser.json()); <span class="comment">// 解析 JSON 格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// json 格式参数</span></span><br><span class="line">app.post(<span class="string">&quot;/json&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(req.body);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="comment">// 1. 创建Ajax对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 2. 告诉Ajax亲求地址以及请求方式</span></span><br><span class="line"><span class="comment">// 参数1: 请求方式 参数2: 请求地址</span></span><br><span class="line">xhr.open(<span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;http://localhost:3000/json&#x27;</span>);</span><br><span class="line"><span class="comment">// 通过请求头告诉服务器端客户端向服务器传递的请求参数格式是 json </span></span><br><span class="line">xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>);</span><br><span class="line"><span class="comment">// JSON.stringify() 将 json 对象转换为 json 字符串</span></span><br><span class="line"><span class="comment">// 3.  发送请求</span></span><br><span class="line">xhr.send(<span class="built_in">JSON</span>.stringify(&#123; <span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>, <span class="attr">age</span>: <span class="number">50</span> &#125;));</span><br><span class="line"><span class="comment">// 4. 获取服务器端给与客户端的响应数据</span></span><br><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="Ajax错误处理"><a href="#Ajax错误处理" class="headerlink" title="Ajax错误处理"></a>Ajax错误处理</h4><ul><li><p>网络畅通</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">网络畅通，服务器端能接收到请求m服务器端返回的结果不是预期结果</span><br><span class="line"></span><br><span class="line">可以判断服务器返回的状态码,分别进行处理, xhr.status 获取 http 状态码</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>路由配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 错误处理</span></span><br><span class="line">app.get(<span class="string">&quot;/error&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.status(<span class="number">400</span>).send(<span class="string">&quot;not ok&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>);</span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Ajax错误处理.html  </span></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://localhost:3000/error&#x27;</span>);</span><br><span class="line">            xhr.send()</span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">                <span class="comment">// 获取状态码</span></span><br><span class="line">                <span class="keyword">if</span> (xhr.status == <span class="number">400</span>) &#123;</span><br><span class="line">                    alert(<span class="string">&#x27;请求出错···&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>网络畅通,·<code>404</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">网络畅通,服务器端没有接收到请求,返回 <span class="number">404</span> 状态码</span><br><span class="line"></span><br><span class="line">检查请求地址是否错误</span><br><span class="line"></span><br><span class="line"><span class="comment">// 地址写错</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/notfond.png"></li><li><p>网络畅通,服务器端能接收到请求,服务器返回 500 状态码，找服务器端开发人员</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/internal.png"></li><li><p>网络中断,请求无法发送到服务器端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">会触发 xhr 对象下面的 onerror 事件,在 onerror 事件处理函数中对错误进行处理</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 网络中断处理</span></span><br><span class="line">           xhr.onerror = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               alert(<span class="string">&#x27;网络中断,无法发送 Ajax 请求···&#x27;</span>);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/offline.png"></li><li><p>状态码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ajax 状态码: 表示Ajax 请求的过程状态, ajax 对象返回的</span><br><span class="line"></span><br><span class="line">Http 状态码: 表示请求的处理结果 是服务器端返回的</span><br></pre></td></tr></table></figure></li></ul><h4 id="低版本IE-浏览器的缓存问题"><a href="#低版本IE-浏览器的缓存问题" class="headerlink" title="低版本IE 浏览器的缓存问题"></a>低版本<code>IE</code> 浏览器的缓存问题</h4><ul><li><p>问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在低版本的IE 浏览器中m Ajax 请求存在后严重的缓存问题,即在请求地址不发生变化的情况下,只有第一次请求会真正发送到服务器端,后续的请求都会从浏览器的缓存中获取结果,即使在服务器端的数据更新了,客户端依然拿到的是缓存中的旧数据</span><br></pre></td></tr></table></figure></li><li><p>解决方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在请求地址的后面添加请求参数,保证每一次请求中的请求参数值不相同</span><br><span class="line"></span><br><span class="line">xhr.open(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;http://?t=&#x27;</span>+<span class="built_in">Math</span>.random());</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// IE 缓存</span></span><br><span class="line">app.get(<span class="string">&quot;/cache&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  fs.readFile(<span class="string">&quot;./hello.txt&quot;</span>, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line">    res.send(result);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span> 发送 Ajax 请求 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>);</span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Ajax错误处理.html</span></span><br><span class="line">            <span class="comment">//  创建</span></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            xhr.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://localhost:3000/cache?t=&#x27;</span> + <span class="built_in">Math</span>.random());</span><br><span class="line">            <span class="comment">// 发送</span></span><br><span class="line">            xhr.send()</span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    alert(xhr.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="同步异步"><a href="#同步异步" class="headerlink" title="同步异步"></a>同步异步</h4><ul><li><p>同步</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个人同一时间只能做一件事,只有一件事情做完,才能做另一件事。</span><br></pre></td></tr></table></figure></li><li><p>异步</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">异步代码虽然需要花时间去执行,但程序不会等待异步代码执行完成后再继续执行后续代码,而是直接执行后续代码,当后续代码执行完成后再回头来看异步代码是否返回结果,如果已有返回结果,再调用事先准备好的回调函数处理异步代码执行的结果。</span><br></pre></td></tr></table></figure><h5 id="Ajax封装"><a href="#Ajax封装" class="headerlink" title="Ajax封装"></a>Ajax封装</h5><ul><li><p>问题: 发送一次请求代码过多,发送多次请求代码冗余且重复</p></li><li><p>解决方案: 将请求代码封装到函数中,发送请求时调用函数即可</p></li><li><p>第一次封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 创建 Ajax 对象</span></span><br><span class="line">          <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">          <span class="comment">// 配置 Ajax 对象</span></span><br><span class="line">          xhr.open(options.type, options.url);</span><br><span class="line">          <span class="comment">// 发送请求</span></span><br><span class="line">          xhr.send();</span><br><span class="line">          <span class="comment">// 监听 xhr 下面的 onload 事件</span></span><br><span class="line">          <span class="comment">// 当 xhr 对象接受完响应数据后触发</span></span><br><span class="line">          xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              options.success(xhr.responseText);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 调用 ajax()</span></span><br><span class="line">      ajax(&#123;</span><br><span class="line">          <span class="comment">// 请求类型</span></span><br><span class="line">          type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">          <span class="comment">// 请求地址</span></span><br><span class="line">          url: <span class="string">&#x27;http://localhost:3000/responseData&#x27;</span>,</span><br><span class="line">          success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&#x27;获取参数: &#x27;</span> + data);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>第二次封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 创建 Ajax 对象</span></span><br><span class="line">          <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">          <span class="comment">// 传递参数</span></span><br><span class="line">          <span class="keyword">var</span> params = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          <span class="comment">// 遍历参数 对象用 for in</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> options.data) &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(attr);</span><br><span class="line">              <span class="comment">// 将参数转换为字符串格式</span></span><br><span class="line">              params += attr + <span class="string">&#x27;=&#x27;</span> + options.data[attr] + <span class="string">&#x27;&amp;&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 将参数最后面的 &amp; 截取掉</span></span><br><span class="line">          <span class="comment">// 将截取的结果重新赋值给 params 变量</span></span><br><span class="line">          params = params.substr(<span class="number">0</span>, params.length - <span class="number">1</span>);</span><br><span class="line">          <span class="comment">// 判断请求格式</span></span><br><span class="line">          <span class="keyword">if</span> (options.type == <span class="string">&#x27;get&#x27;</span>) &#123;</span><br><span class="line">              options.url = options.url + <span class="string">&#x27;?&#x27;</span> + params;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 配置 Ajax 对象</span></span><br><span class="line">          xhr.open(options.type, options.url);</span><br><span class="line">          <span class="keyword">if</span> (options.type == <span class="string">&#x27;post&#x27;</span>) &#123;</span><br><span class="line">              xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">              xhr.send(params);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              xhr.send();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 监听 xhr 下面的 onload 事件</span></span><br><span class="line">          <span class="comment">// 当 xhr 对象接受完响应数据后触发</span></span><br><span class="line">          xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              options.success(xhr.responseText);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 调用 ajax()</span></span><br><span class="line">      ajax(&#123;</span><br><span class="line">          <span class="comment">// 请求类型</span></span><br><span class="line">          type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">          data: &#123;</span><br><span class="line">              name: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">              age: <span class="number">20</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 请求地址</span></span><br><span class="line">          url: <span class="string">&#x27;http://localhost:3000/first&#x27;</span>,</span><br><span class="line">          success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&#x27;获取参数: &#x27;</span> + data);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure></li><li><p>最终使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 默认值</span></span><br><span class="line">  <span class="keyword">var</span> defaults = &#123;</span><br><span class="line">    type: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">    url: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">    date: &#123;&#125;,</span><br><span class="line">    header: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 使用 options 对象中的属性覆盖 defaults 对象中的属性</span></span><br><span class="line">  <span class="built_in">Object</span>.assign(defaults, options);</span><br><span class="line">  <span class="comment">// 创建 Ajax 对象</span></span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  <span class="comment">// 传递参数</span></span><br><span class="line">  <span class="keyword">var</span> params = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">// 遍历参数 对象用 for in</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> defaults.data) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(attr);</span><br><span class="line">    <span class="comment">// 将参数转换为字符串格式</span></span><br><span class="line">    params += attr + <span class="string">&quot;=&quot;</span> + defaults.data[attr] + <span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 将参数最后面的 &amp; 截取掉</span></span><br><span class="line">  <span class="comment">// 将截取的结果重新赋值给 params 变量</span></span><br><span class="line">  params = params.substr(<span class="number">0</span>, params.length - <span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 判断请求格式</span></span><br><span class="line">  <span class="keyword">if</span> (defaults.type == <span class="string">&quot;get&quot;</span>) &#123;</span><br><span class="line">    defaults.url = defaults.url + <span class="string">&quot;?&quot;</span> + params;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 配置 Ajax 对象</span></span><br><span class="line">  xhr.open(defaults.type, defaults.url);</span><br><span class="line">  <span class="comment">// 如果请求方式为 post</span></span><br><span class="line">  <span class="keyword">if</span> (defaults.type == <span class="string">&quot;post&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 用户希望的向服务器传递的请求参数的类型</span></span><br><span class="line">    <span class="keyword">var</span> contentType = defaults.header[<span class="string">&quot;Content-Type&quot;</span>];</span><br><span class="line">    xhr.setRequestHeader(<span class="string">&quot;Content-Type&quot;</span>, contentType);</span><br><span class="line">    <span class="comment">// 判断用户希望的请求参数格式的类型</span></span><br><span class="line">    <span class="comment">// 如果用户希望为 json</span></span><br><span class="line">    <span class="keyword">if</span> (contentType == <span class="string">&quot;application/json&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">// 向服务器端传递 json 数据格式的参数</span></span><br><span class="line">      xhr.send(<span class="built_in">JSON</span>.stringify(defaults.data));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 向服务器传递普通类型的请求参数</span></span><br><span class="line">      xhr.send(params);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    xhr.send();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听 xhr 下面的 onload 事件</span></span><br><span class="line">  <span class="comment">// 当 xhr 对象接受完响应数据后触发</span></span><br><span class="line">  xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取响应头中的信息</span></span><br><span class="line">    <span class="keyword">var</span> contentType = xhr.getResponseHeader(<span class="string">&quot;Content-Type&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> responseText = xhr.responseText;</span><br><span class="line">    <span class="keyword">if</span> (contentType.includes(<span class="string">&quot;application/json&quot;</span>)) &#123;</span><br><span class="line">      responseText = <span class="built_in">JSON</span>.parse(responseText);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当 http 状态码等于 200 的时候</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求成功 调用处理成功情况的函数</span></span><br><span class="line">      defaults.success(responseText, xhr);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 请求失败 调用处理失败情况的函数</span></span><br><span class="line">      defaults.error(responseText, xhr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h4><ul><li><p>模板引擎概述</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作用: 使用模板引擎提供的模板语法,可以将数据和HTML 拼接起来</span><br></pre></td></tr></table></figure></li><li><p>安装</p><ul><li><p>官网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">高性能Javascript模板引擎官网: https://aui.github.io/art-template/zh-cn/index.html</span><br></pre></td></tr></table></figure></li><li><p><code>npm</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install art-template --save</span><br></pre></td></tr></table></figure></li><li><p>本地(<code>右击 templete-web.js - 链接另存为</code>)</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/art.png"></li></ul></li><li><p>使用</p><ul><li><p>将模板引擎的库文件引入到<code>当前</code>页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="number">1.</span> 将模板引擎的库文件引入到当前页面 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;/js/template-web.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>准备 <code>art-template </code>模板</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;tp&quot;</span>&gt;</span><br><span class="line">        &lt;!-- <span class="number">2.</span> 准备 art-template 模板 --&gt;</span><br><span class="line">   &lt;h1&gt; &#123;&#123; username &#125;&#125;&lt;/h1&gt;</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>告诉模板引擎将那个数据和哪个模板进行拼接</p><ul><li>参数1: 模板 <code>id</code></li><li>参数2: 数据 <code>对象类型 </code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">       <span class="comment">// 3. 告诉模板引擎将那个数据和哪个模板进行拼接</span></span><br><span class="line">       <span class="comment">//  3.1 模板 id</span></span><br><span class="line">       <span class="comment">//  3.2 数据 对象类型 </span></span><br><span class="line">       <span class="comment">// 方法的返回值就是拼接好的 HTML 字符串</span></span><br><span class="line">       <span class="keyword">var</span> html = template(<span class="string">&#x27;tp&#x27;</span>, &#123; <span class="attr">username</span>: <span class="string">&#x27;zhangsan&#x27;</span>, <span class="attr">age</span>: <span class="number">30</span> &#125;);</span><br><span class="line">       <span class="built_in">console</span>.log(html);</span><br><span class="line">       <span class="keyword">var</span> container = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.container&#x27;</span>);</span><br><span class="line">       container.innerHTML = html;</span><br><span class="line">    </span><br><span class="line">   &lt;/script&gt;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>整体实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;客户端模板引擎使用步骤&lt;/title&gt;</span><br><span class="line">    &lt;!-- <span class="number">1.</span> 将模板引擎的库文件引入到当前页面 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;/js/template-web.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 客户端模板引擎使用步骤.html --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;container&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;tp&quot;</span>&gt;</span><br><span class="line">         &lt;!-- <span class="number">2.</span> 准备 art-template 模板 --&gt;</span><br><span class="line">    &lt;h1&gt; &#123;&#123; username &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        <span class="comment">// 3. 告诉模板引擎将那个数据和哪个模板进行拼接</span></span><br><span class="line">        <span class="comment">//  3.1 模板 id</span></span><br><span class="line">        <span class="comment">//  3.2 数据 对象类型 </span></span><br><span class="line">        <span class="comment">// 方法的返回值就是拼接好的 HTML 字符串</span></span><br><span class="line">        <span class="keyword">var</span> html = template(<span class="string">&#x27;tp&#x27;</span>, &#123; <span class="attr">username</span>: <span class="string">&#x27;zhangsan&#x27;</span>, <span class="attr">age</span>: <span class="number">30</span> &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(html);</span><br><span class="line">        <span class="keyword">var</span> container = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.container&#x27;</span>);</span><br><span class="line">        container.innerHTML = html;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="邮箱验证案例"><a href="#邮箱验证案例" class="headerlink" title="邮箱验证案例"></a>邮箱验证案例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目标: 验证邮箱地址唯一性</span><br></pre></td></tr></table></figure><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Ajax-Email.gif"></li><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 邮箱地址验证</span></span><br><span class="line">app.get(<span class="string">&quot;/verifyEmailAdress&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 接收客户端传递过来的邮箱地址</span></span><br><span class="line">  <span class="keyword">const</span> email = req.query.email;</span><br><span class="line">  <span class="comment">// 判断邮箱地址注册过的情况</span></span><br><span class="line">  <span class="keyword">if</span> (email == <span class="string">&quot;3327511395@qq.com&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置http状态码并对客户端做出响应</span></span><br><span class="line">    res</span><br><span class="line">      .status(<span class="number">400</span>)</span><br><span class="line">      .send(&#123; <span class="attr">message</span>: <span class="string">&quot;邮箱地址已经注册过了, 请更换其他邮箱地址&quot;</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 邮箱地址可用的情况</span></span><br><span class="line">    <span class="comment">// 对客户端做出响应</span></span><br><span class="line">    res.send(&#123; <span class="attr">message</span>: <span class="string">&quot;恭喜, 邮箱地址可用&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;p&gt; &lt;input type=&quot;email&quot; name=&quot;&quot; id=&quot;&quot; placeholder=&quot;请输入邮箱地址&quot;&gt; &lt;/p&gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span> 邮箱: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱地址&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>验证原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入已经封装好的 ajax.js</span></span><br><span class="line">   &lt;script src=<span class="string">&quot;/js/ajax.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">       <span class="comment">// 获取文本框</span></span><br><span class="line">       <span class="keyword">var</span> email = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#email&#x27;</span>);</span><br><span class="line">       <span class="comment">// 提示信息</span></span><br><span class="line">       <span class="keyword">var</span> info = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#info&#x27;</span>);</span><br><span class="line">       <span class="comment">// 失去焦点</span></span><br><span class="line">       email.onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> email = <span class="built_in">this</span>.value;</span><br><span class="line">           <span class="keyword">var</span> pattern = <span class="regexp">/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$/</span>;</span><br><span class="line">           <span class="comment">// 如果用户输入的邮箱地址不符合规则</span></span><br><span class="line">           <span class="keyword">if</span> (!pattern.test(email)) &#123;</span><br><span class="line">               <span class="comment">// 阻止程序向下执行</span></span><br><span class="line">               info.innerHTML = <span class="string">&#x27;输入邮箱格式错误!&#x27;</span></span><br><span class="line">               info.className = <span class="string">&#x27;bg-danger&#x27;</span>;</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// 向服务器发送</span></span><br><span class="line">           ajax(&#123;</span><br><span class="line">               type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">               url: <span class="string">&#x27;http://localhost:3000/verifyEmailAdress&#x27;</span>,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   email: email</span><br><span class="line">               &#125;,</span><br><span class="line">               success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(result);</span><br><span class="line">                   <span class="comment">// 怎么添加 message ????</span></span><br><span class="line">                   <span class="comment">// message = &#x27;恭喜,邮箱地址可用&#x27;</span></span><br><span class="line">                   info.innerHTML = result.message;</span><br><span class="line">                   info.className = <span class="string">&#x27;bg-success&#x27;</span>;</span><br><span class="line">               &#125;,</span><br><span class="line">               error: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(result);</span><br><span class="line">                   <span class="comment">// message = &#x27;邮箱地址已经注册过了,请更换其他邮箱地址&#x27;</span></span><br><span class="line">                   info.innerHTML = result.message;</span><br><span class="line">                   info.className = <span class="string">&#x27;bg-danger&#x27;</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="搜索内容框自动提示"><a href="#搜索内容框自动提示" class="headerlink" title="搜索内容框自动提示"></a>搜索内容框自动提示</h4><ul><li><p>实现思路</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 获取搜索框并为其添加用户输入事件</span><br><span class="line"></span><br><span class="line">2. 获取用户输入关键字</span><br><span class="line"></span><br><span class="line">3. 向服务器发送请求病携带关键字作为请求参数</span><br><span class="line"></span><br><span class="line">4. 将响应数据显示在搜索框底部</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>效果预览</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Ajax-lian.gif" width="600"></li><li><p>配置路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 搜索框自动提示</span></span><br><span class="line"><span class="comment">// 输入框文字提示</span></span><br><span class="line">app.get(<span class="string">&quot;/searchAutoPrompt&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 搜索关键字</span></span><br><span class="line">  <span class="keyword">const</span> key = req.query.key;</span><br><span class="line">  <span class="comment">// 提示文字列表</span></span><br><span class="line">  <span class="keyword">const</span> list = [<span class="string">&quot;abcde&quot;</span>, <span class="string">&quot;abcedfg&quot;</span>, <span class="string">&quot;abc&quot;</span>];</span><br><span class="line">  <span class="comment">// 搜索结果</span></span><br><span class="line">  <span class="keyword">let</span> result = list.filter(<span class="function">(<span class="params">item</span>) =&gt;</span> item.includes(key));</span><br><span class="line">  <span class="comment">// 将查询结果返回给客户端</span></span><br><span class="line">  res.send(result);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>HTML结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入关键字&quot;</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>模板引擎结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;tpl&quot;</span>&gt;</span><br><span class="line">       &#123;&#123;each result&#125;&#125;</span><br><span class="line">       &lt;li&gt; &#123;&#123;$value&#125;&#125;&lt;/li&gt;</span><br><span class="line">       &#123;&#123;/each&#125;&#125;</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取 搜索框</span></span><br><span class="line">      <span class="keyword">var</span> searchInput = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#search&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取 list-box</span></span><br><span class="line">      <span class="keyword">var</span> listBox = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.list-box&#x27;</span>);</span><br><span class="line">      <span class="comment">// 存储定时器的变量</span></span><br><span class="line">      <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">      <span class="comment">// 获取输入事件</span></span><br><span class="line">      searchInput.oninput = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 清除上一次开启的定时器</span></span><br><span class="line">          <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">          <span class="comment">// 获取当前输入的内容 </span></span><br><span class="line">          <span class="keyword">var</span> key = <span class="built_in">this</span>.value;</span><br><span class="line">          <span class="comment">// 如果用户没有在搜索框输入内容</span></span><br><span class="line">          <span class="keyword">if</span> (key.trim().length == <span class="number">0</span>) &#123;</span><br><span class="line">              listBox.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">              <span class="comment">// 阻止程序向下执行</span></span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 开启定时器 让请求延迟发送</span></span><br><span class="line">          timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 发送 Ajax 请求</span></span><br><span class="line">              ajax(&#123;</span><br><span class="line">                  type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">                  url: <span class="string">&#x27;http://localhost:3000/searchAutoPrompt&#x27;</span>,</span><br><span class="line">                  data: &#123;</span><br><span class="line">                      <span class="comment">// 传递的参数 = 输入内容的 value </span></span><br><span class="line">                      key: key</span><br><span class="line">                  &#125;,</span><br><span class="line">                  success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                      <span class="keyword">var</span> html = template(<span class="string">&#x27;tpl&#x27;</span>, &#123; <span class="attr">result</span>: result &#125;);</span><br><span class="line">                      listBox.innerHTML = html;</span><br><span class="line">                      listBox.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;, <span class="number">800</span>)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="省级联动"><a href="#省级联动" class="headerlink" title="省级联动"></a>省级联动</h4><ul><li>局部实现(有些原理暂未理解,待补充···)</li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/Ajax-city.gif">]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Bufftery-Tab栏实现分享</title>
      <link href="2020/12/20/Hexo-Tab%E6%A0%8F%E5%AE%9E%E7%8E%B0%E5%88%86%E4%BA%AB/"/>
      <url>2020/12/20/Hexo-Tab%E6%A0%8F%E5%AE%9E%E7%8E%B0%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-Bufftery-Tab栏实现分享"><a href="#Hexo-Bufftery-Tab栏实现分享" class="headerlink" title="Hexo-Bufftery-Tab栏实现分享"></a>Hexo-Bufftery-Tab栏实现分享</h3><blockquote><p>内容推荐糖果屋教程，写这篇只是为了个人实现</p></blockquote><ul><li><p>官方文档查看详细信息</p><blockquote><p><a href="https://butterfly.js.org/posts/4aa8abbe/#Tabs">点击进入官方文档 https://butterfly.js.org/posts/4aa8abbe/#Tabs</a></p></blockquote></li><li><p>渲染效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Hexotabs.png" title="Tabs实现"></li><li><p>(<code>主题下</code>)配置文件添加如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># tabs</span></span><br><span class="line">tabs:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  transition:</span><br><span class="line">    tabs: <span class="literal">true</span></span><br><span class="line">    labels: <span class="literal">true</span></span><br><span class="line">  border_radius: 0</span><br></pre></td></tr></table></figure></li><li><p>实现语法剖析(<code>id很重要不重复类似于主键</code>)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span>  <span class="string">tabs</span> <span class="string">id</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="comment"># 第一块区域</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">tab</span> <span class="string">文本信息</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">**</span> <span class="string">this</span> <span class="string">is</span> <span class="string">Tab1**</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">endtab</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二块区域</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">tab</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">**</span> <span class="string">ww**</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">endtab</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三块区域</span></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">tab</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">asa</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">endtab</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endtabs</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>分栏实现一</p><div class="tabs" id="tab-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1-1">tab-1 1</button></li><li class="tab"><button type="button" data-href="#tab-1-2">名称-b</button></li><li class="tab"><button type="button" data-href="#tab-1-3">名称-c</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1-1"><p><code>名称a</code>下的内容展示</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-1-2"><p><code>名称b</code>下的内容展示</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-1-3"><p><code>名称c</code>下的内容展示</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><ul><li><p>分栏实现二</p><div class="tabs" id="tab-2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-2-1">名称-a</button></li><li class="tab"><button type="button" data-href="#tab-2-2">名称-b</button></li><li class="tab"><button type="button" data-href="#tab-2-3">名称-c</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-2-1"><p><code>名称a</code>下的内容展示ss</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2-2"><p><code>名称b</code>下的内容展示</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2-3"><p><code>名称c</code>下的内容展示</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h3 id="容器的其他类型："><a href="#容器的其他类型：" class="headerlink" title="容器的其他类型："></a>容器的其他类型：</h3><h4 id="1-更新folding添加"><a href="#1-更新folding添加" class="headerlink" title="1. 更新folding添加"></a>1. 更新<code>folding</code>添加</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">folding</span> <span class="string">参数（可选）</span>, <span class="string">标题</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">![](</span><span class="string">图片路径)</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endfolding</span> <span class="string">%</span>&#125;&#123;<span class="string">%</span> <span class="string">folding</span> <span class="string">参数（可选）</span>, <span class="string">标题</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><details cyan><summary> 折叠 </summary>              <div class='content'>              <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/hellowWorld.png" width="500" title="实现容器类需要文件支撑,除了Buffterfly 内置可以直接使用,其他容器在 糖果屋有具体教程可提供方案">              </div>            </details><h4 id="2-隐藏容器"><a href="#2-隐藏容器" class="headerlink" title="2. 隐藏容器"></a>2. 隐藏容器</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">在主题文件夹下添加:</span>  <span class="attr">hideBlock:</span> <span class="literal">true</span> <span class="string">(不添加报错)</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">hideBlock</span> <span class="string">点击查看</span>,<span class="string">bg</span>,<span class="string">color</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">替换文本</span> <span class="string">--&gt;</span> <span class="string">显示后文本</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endhideBlock</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">点击查看    </button><div class="hide-content"><p>显示后文本</p></div></div><h4 id="3-外挂标签Tip"><a href="#3-外挂标签Tip" class="headerlink" title="3. 外挂标签Tip"></a>3. 外挂标签<code>Tip</code></h4><ul><li><p><code>success</code></p><div class="tabs" id="testtip-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#testtip-1-1">success</button></li><li class="tab"><button type="button" data-href="#testtip-1-2">markdown实现</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="testtip-1-1"><ul><li><p>效果预览</p><div class='tip success faa-flash animated'><p>success<p></div></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="testtip-1-2"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip success faa-flash animated&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span> 替换文本 <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><ul><li><p><code>error</code></p><div class="tabs" id="error-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#error-1-1">error</button></li><li class="tab"><button type="button" data-href="#error-1-2">markdown实现</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="error-1-1"><ul><li><p>效果预览</p><div class='tip error faa-flash animated'><p> 替换文本 <p></div></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="error-1-2"><div class='tip error faa-flash animated'><p> 替换文本 <p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>warning</code></p><div class="tabs" id="warn-1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#warn-1-1">warning</button></li><li class="tab"><button type="button" data-href="#warn-1-2">markdown实现</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="warn-1-1"><ul><li><p>效果预览</p><div class='tip warning faa-flash animated'><p> 替换文本 <p></div></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="warn-1-2"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip warning faa-flash animated&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span> 替换文本 <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h4 id="4-note"><a href="#4-note" class="headerlink" title="4.  note"></a>4.  <code>note</code></h4><ul><li><p>主题配置中开启<code>note</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line"><span class="comment"># style 改变如下显示类型  </span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  style: simple</span><br><span class="line">  icons: <span class="literal">true</span></span><br><span class="line">  border_radius: 3</span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure></li><li><p> 类型</p></li></ul><ol><li><div class="note info flat"><p>info 提示标签符 </p></div></li><li><div class="note default flat"><p>default 提示标签符 </p></div> </li><li><div class="note primary no-icon flat"><p>primary 提示标签符 </p></div> </li><li><div class="note success flat"><p>success 提示标签符 </p></div> </li><li><div class="note warning flat"><p>warning 提示标签符 </p></div></li><li> <div class="note danger flat"><p>danger 提示标签符 </p></div></li></ol><ul><li><p>各类型语法（<code>一 一 对应</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. &#123;% note info %&#125;  info 提示标签符 &#123;% endnote %&#125;</span><br><span class="line">2. &#123;% note default %&#125; default 提示标签符 &#123;% endnote %&#125; </span><br><span class="line">3. &#123;% note primary no-icon %&#125; primary 提示标签符 &#123;% endnote %&#125; </span><br><span class="line">4. &#123;% note success %&#125; success 提示标签符 &#123;% endnote %&#125; </span><br><span class="line">5. &#123;% note warning %&#125; warning 提示标签符 &#123;% endnote %&#125;</span><br><span class="line">6. &#123;% note danger %&#125; danger 提示标签符 &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>注意: <code>note</code> 的 <code>style</code>可以改变如下显示</p></li></ul><h4 id="5-复选列表-checkbox"><a href="#5-复选列表-checkbox" class="headerlink" title="5.  复选列表 checkbox"></a>5.  复选列表 checkbox</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [markdown](https:&#x2F;&#x2F;guides.github.com&#x2F;features&#x2F;mastering-markdown&#x2F;) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h4 id="6-时间线"><a href="#6-时间线" class="headerlink" title="6.  时间线"></a>6.  时间线</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 升级小助手 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 [2.6.6 -&gt; 3.0](https:&#x2F;&#x2F;github.com&#x2F;volantis-x&#x2F;hexo-theme-volantis&#x2F;releases) %&#125;</span><br><span class="line"></span><br><span class="line">1. 如果有 &#96;hexo-lazyload-image&#96; 插件，需要删除并重新安装最新版本，设置 &#96;lazyload.isSPA: true&#96;。</span><br><span class="line">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 &#96;use_cdn: true&#96; 则需要删除。</span><br><span class="line">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line">4. 2.x 版本的置顶 &#96;top: true&#96; 改为了 &#96;pin: true&#96;，并且同样适用于 &#96;layout: page&#96; 的页面。</span><br><span class="line">5. 如果使用了 &#96;hexo-offline&#96; 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 [2.6.3 -&gt; 2.6.6](https:&#x2F;&#x2F;github.com&#x2F;volantis-x&#x2F;hexo-theme-volantis&#x2F;releases&#x2F;tag&#x2F;2.6.6) %&#125;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 [2.6.2 -&gt; 2.6.3](https:&#x2F;&#x2F;github.com&#x2F;volantis-x&#x2F;hexo-theme-volantis&#x2F;releases&#x2F;tag&#x2F;2.6.3) %&#125;</span><br><span class="line"></span><br><span class="line">1. 全局搜索 &#96;seotitle&#96; 并替换为 &#96;seo_title&#96;。</span><br><span class="line">2. group 组件的索引规则有变，使用 group 组件的文章内，&#96;group: group_name&#96; 对应的组件名必须是 &#96;group_name&#96;。</span><br><span class="line">2. group 组件的列表名优先显示文章的 &#96;short_title&#96; 其次是 &#96;title&#96;。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline"><p class='p h2'>升级小助手</p><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></p></div><div class="body"><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></p></div><div class="body"><p>不需要额外处理。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></p></div><div class="body"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><h4 id="7-链接卡片-link"><a href="#7-链接卡片-link" class="headerlink" title="7.  链接卡片 link"></a>7.  链接卡片 link</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https:&#x2F;&#x2F;akilar.top&#x2F;posts&#x2F;615e2dec&#x2F;, https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Akilarlxh&#x2F;akilarlxh.github.io&#x2F;img&#x2F;siteicon&#x2F;favicon.ico %&#125;</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-图片外链存储</title>
      <link href="2020/12/19/Hexo-%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E5%AD%98%E5%82%A8/"/>
      <url>2020/12/19/Hexo-%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right, please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content">  <script id="hbeData" type="hbeData" data-hmacdigest="55711a18c70c0bb1d1d98be5287f67dd13cb19800cbbd05a12697b89e36232c9">3a325dc39ad404746d7c8526f2f7a082308106497415bc0013eb1e405be1ae44267c2f1cfcae1a96e22d60dbe039856675225a2a194da8a88e625af437446fe880a1f9eb8f40b0d08488408f86448a1e4471f304f4e25cbeb7a721280a312d984617f273e25dd75ea9baa7efdce37e3c72e9c37861f020385243935635c16b16fcf7b9f73d6dfa8d98614a75752374643bc41e2bce16c46d600b467094b0ecd334a150a38d900e1ac63daf3a41942c706d30c3bbb43950ae7bc7239c9fdbe0301d5ab33de6c2b990f17ccb507c47baec0a51fec2cbc9d685c0a61c152219bbfd1e1294b4fba2342c6e6cc75ca9d47ce5195d9809dc8f2daf89f4c82562dca6d895cbb45d006fe4301d3872d121e7768043aa2761acae91cf3745e6d382f7f3c683c6969f16aa826d8b40c213c98344840ef7ff5c72e6fa02d6c742d1308ea52a36860162890fd76f533f6705a11b75d5d45e4ed356785bef3d5fa7483b4b106a758046b1c0e3e25c1c83897a7963970de995067cb2c03207b3c4ca7dc5c9793119d53b1574ff47624c6c4d416533df6f12727adc9dca4008d62688a9b8bfa918841d10747385fb2d966163e923a2b4be5bbcd60e5ab0e93c89962691e156670819e53e4d215ab1bfc63094272c6b21e4fef6425cc41e6d7cefb817472f83530352baf0d7368de610fa74bd3f3c447fd0baef3fde4ddeeca12dbfaa34b136c7037f3be21640486cbda9b7663f7dc5b4d399d5c1a9aeececf918339b9fb74d8aecc085437ce7bfa43f720cf16147f691bac24932bc4f1cce536a3365ad35e81190412ef5979857565eacb196f826bb04ed35bf2415260e00c9427ccd48e9f2e037db5188f1a68f54703f7e2a7c307c74c4d043809a2fe7a778432b75430ecb0dc6f1fc268204f5fcbc8883ce1d641f7c1acc3b33f7af295fe7612a0b691879885b62484216cb265146038c5b6000d6e2e8e26b75b308f5b6962357abce0f788ec9779fa2587293050315a757a5430013962ed05289bb6c84c427d96d57bcc0099272095095e9acecbf48bf022921d1cdb0391adf3f6a545b11b43f110f2e143540</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hello, password is required here</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-github日历图</title>
      <link href="2020/12/19/Hexo-github%E6%97%A5%E5%8E%86%E5%9B%BE/"/>
      <url>2020/12/19/Hexo-github%E6%97%A5%E5%8E%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-github日历图"><a href="#Hexo-github日历图" class="headerlink" title="Hexo-github日历图"></a>Hexo-github日历图</h3><ul><li>效果演示</li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/ $github.gif" width="600" title=" Hexo-github日历图"><ul><li><p>搜索<code>小冰博客-教程：基于Butterfly主题的gitcalendar2.1</code>-完成基本步骤（文件夹 : <code>gitcalendar</code> 放入主题目录下 的<code>source</code>下）</p></li><li><p>下载<code>jquery</code></p></li><li><p>将<code>jQuery</code>文件放入 <code>gitcalendar</code>下的 <code>js</code>中</p></li><li><p>在主题配置文件中搜索 <code>inject</code></p></li><li><p>复制 <code>gitcalenda.js</code>路径,修改为 <code>jQuery.js</code></p></li><li><p>如下图：</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/jqueryJs.png" title="添加 jquery"  width="600"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-文章管理</title>
      <link href="2020/12/19/Hexo-%E6%96%87%E7%AB%A0%E7%AE%A1%E7%90%86/"/>
      <url>2020/12/19/Hexo-%E6%96%87%E7%AB%A0%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-文章管理"><a href="#Hexo-文章管理" class="headerlink" title="Hexo-文章管理"></a>Hexo-文章管理</h3><ul><li><p>新建文章以年月层级划分显示</p></li><li><p><code>hexo new [title]</code>后自动划分</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/HexoPage.png" width="400" title="文章层级划分"></li><li><p>修改跟目录下的配置文件的如下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">permalink: :year/:month/:title/ <span class="comment"># 默认格式 :year/:month/:day/:title/</span></span><br><span class="line"></span><br><span class="line">new_post_name: :year/:month/:title.md <span class="comment"># File name of new posts 默认格式 :title.md</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他修改请先注释以防错误自己无法恢复</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="Hexo-Buffterfly-下拉菜单添加"><a href="#Hexo-Buffterfly-下拉菜单添加" class="headerlink" title="Hexo-Buffterfly  下拉菜单添加"></a>Hexo-Buffterfly  下拉菜单添加</h3><ul><li><p>效果预览</p><details ><summary> 下拉菜单 </summary>              <div class='content'>              <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/books.png">              </div>            </details></li><li><p>通过命令生成想要的<code>page</code>页名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;Your page Name&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>在主题的配置文件中添加菜单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在读书籍: </span><br><span class="line">  - JavaScript || /Javascript/ || fas fa-address-book</span><br><span class="line">  - Node || /NodeBooks/ || fas fa-book-open</span><br></pre></td></tr></table></figure><div class="note primary no-icon flat"><p>一级导航显示名称:</p><p>​    -  这个名称任意起 || /(<code>hexo new page &quot;Your page Name&quot;</code>)/ ||  图标(可选)</p><p>​    -  这个名称任意起 || /(<code>hexo new page &quot;Your page Name&quot;</code>)/ ||  图标(可选)</p></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-valine评论系统</title>
      <link href="2020/12/19/Hexo-valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>2020/12/19/Hexo-valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-valine评论系统"><a href="#Hexo-valine评论系统" class="headerlink" title="Hexo-valine评论系统"></a>Hexo-valine评论系统</h3><ul><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/valines.png" width="600" title="成功添加 valine 评论系统"></li><li><p>手机端回复测试(刷新即可预览)</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/replay.png" width="600" title="测试多端效果"></li><li><p>注册 learnColud </p><blockquote><p><a href="https://www.leancloud.cn/"> 点击跳转  leancloud </a></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/leanrColoud.png" width="600" title="点击免费试用"></li><li><p>登录所注册账号</p></li><li><p>创建应用</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/createLearn.png" width="600" title="创建应用"></li><li><p>点击设置</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/setLearn.png" width="600" title="点击设置"></li><li><p>应用 <code>key</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/keyID.png" title="应用 key" width="600"></li><li><p>进入主题下的配置文件中 (使用 <code>ctrl + f </code>,搜索 <code>valine</code>)</p><ul><li><p>开启 <code>Valine</code>(取消注释)</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/useValine.png" title="开启 valine 取消注释" width="600"></li></ul><ul><li><p>继续搜索 <code>valine</code></p><ul><li>添加  <code>**AppID**</code></li><li>添加 <code>**AppKey**</code></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/valineKey.png" title="开启 valine 取消注释" width="600"></li></ul></li><li><p>(<code>learnColud</code>)域名绑定（github 仓库地址）</p></li><li><p>部署</p></li><li><p>由于函数选择列表无法获取导致无法开启定时任务</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/function.png" title="定时任务开启失败" width="600">  </li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-日常积累</title>
      <link href="2020/12/16/Oracle-%E6%97%A5%E5%B8%B8%E7%A7%AF%E7%B4%AF/"/>
      <url>2020/12/16/Oracle-%E6%97%A5%E5%B8%B8%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="Oracle-日常积累"><a href="#Oracle-日常积累" class="headerlink" title="Oracle-日常积累"></a>Oracle-日常积累</h3><ul><li><p>日期格式应用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表 testTable</span></span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">table</span> testTable;</span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> testTable(str_time <span class="type">DATE</span>);</span><br><span class="line">    <span class="keyword">desc</span> testTable;</span><br><span class="line">       <span class="comment">-- 插入数据</span></span><br><span class="line">        <span class="keyword">insert</span> <span class="keyword">into</span> testTable <span class="keyword">values</span>(to_date(to_char(sysdate,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>),<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>));</span><br><span class="line">        <span class="comment">-- 查询数据</span></span><br><span class="line">        <span class="keyword">select</span> to_char(str_time,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>) <span class="keyword">from</span> testTable; </span><br><span class="line">        <span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>数据分页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>学员信息查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student;</span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">        <span class="comment">-- 编号</span></span><br><span class="line">        id <span class="type">int</span>,</span><br><span class="line">        <span class="comment">-- 姓名</span></span><br><span class="line">        name varchar2(<span class="number">10</span>),</span><br><span class="line">        <span class="comment">-- 课程</span></span><br><span class="line">        cource varchar2(<span class="number">10</span>),</span><br><span class="line">        <span class="comment">-- 成绩</span></span><br><span class="line">        score <span class="type">int</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;语文&#x27;</span>,<span class="number">81</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;数学&#x27;</span>,<span class="number">75</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;语文&#x27;</span>,<span class="number">81</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;数学&#x27;</span>,<span class="number">90</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;语文&#x27;</span>,<span class="number">81</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;语文&#x27;</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">90</span>);</span><br><span class="line"><span class="comment">-- 查询数据</span></span><br><span class="line">    <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 查询每门课程都考了并且成绩大于 80 分的学生信息</span></span><br><span class="line">    <span class="comment">-- 统计课程数</span></span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">count</span>( <span class="keyword">distinct</span> cource) <span class="keyword">from</span> student;</span><br><span class="line">    <span class="comment">-- 修改数据</span></span><br><span class="line">        update student  <span class="keyword">set</span> cource <span class="operator">=</span> <span class="string">&#x27;数学&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">    <span class="comment">-- 查询课程都考了并且成绩大于 80 的人员信息</span></span><br><span class="line">    <span class="keyword">select</span> name <span class="keyword">from</span> student</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> name </span><br><span class="line">        <span class="keyword">having</span> <span class="built_in">min</span>(score)<span class="operator">&gt;</span><span class="number">80</span> <span class="keyword">and</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> cource) <span class="operator">=</span> ( <span class="keyword">select</span> <span class="built_in">count</span>( <span class="keyword">distinct</span> cource) <span class="keyword">from</span> student);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-正则表达式</title>
      <link href="2020/12/16/Javascript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>2020/12/16/Javascript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-正则表达式"><a href="#Javascript-正则表达式" class="headerlink" title="Javascript-正则表达式"></a>Javascript-正则表达式</h3><p>正则的概念：正则表达式是描述字符模式的对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var 变量 &#x3D; &#x2F; 正则表达式&#x2F;匹配模式</span><br></pre></td></tr></table></figure><ul><li><p>或者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">| 表示或者</span><br><span class="line">[ab] == a | b [] 或者</span><br><span class="line">[a-z] 任意小写字母</span><br><span class="line">[A-Z] 任意大写字母</span><br><span class="line">[A-z] 任意字母</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 忽略大小写 i</span></span><br><span class="line"> <span class="keyword">var</span> reg = <span class="regexp">/[A-Z]/i</span>;</span><br><span class="line"> <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>修饰符</p><table><thead><tr><th align="center">修饰符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>i</code></td><td align="center">执行对大小写不敏感的匹配</td></tr><tr><td align="center"><code>g</code></td><td align="center">执行全局匹配(查找所有匹配而非在找到第一个匹配后停止)</td></tr><tr><td align="center"><code>m</code></td><td align="center">执行多行匹配</td></tr></tbody></table></li><li><p>检查一个字符串是否含有 <code>abc或adc或aec</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 观察匹配目标</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 分析</span><br><span class="line">a 开头</span><br><span class="line">    c 结尾</span><br><span class="line"> reg = <span class="regexp">/a[bde]c/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abc&#x27;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>以规定字符开头匹配 <code>^</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;adc&#x27;</span>, <span class="string">&#x27;ref&#x27;</span>, <span class="string">&#x27;bbc&#x27;</span>, <span class="string">&#x27;abe&#x27;</span>, <span class="string">&#x27;abf&#x27;</span>,];</span><br><span class="line">        <span class="comment">// 匹配数组中以 ab</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^a/</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(arr[i] + <span class="string">&#x27;:&#x27;</span> + reg.test(arr[i]));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">匹配以上字符</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231185349.png" title="匹配以 a 开头的字符"></li><li><p>匹配除了<code>[^ ]</code>以外的字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="comment">// 匹配除了 ab 以外的字符</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[^ab]/</span>;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;abr&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 请先预测一下结果</span></span><br><span class="line">    <span class="built_in">console</span>.log(arr[i] + <span class="string">&#x27;:&#x27;</span> + reg.test(arr[i]));</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">请先预测一下结果    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231190006.png"></div></div></li><li><p>字符串和正则相关的</p><table><thead><tr><th align="center">方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>search</code></td><td align="center">检索与正则表达式相匹配的值</td></tr><tr><td align="center"><code>match</code></td><td align="center">找到一个或多个正则表达式的匹配</td></tr><tr><td align="center"><code>replace</code></td><td align="center">替换与正则表达式匹配的字符串</td></tr><tr><td align="center"><code>split</code></td><td align="center">把字符串分割为字符串数组</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">split()</span><br><span class="line">-  可以将一个字符串拆分为一个数组</span><br><span class="line">- 方法中可以传递一个正则表达式作为参数,这样方法将会根据正则表达式拆分字符串</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 字符串 split()</span></span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;1a1b2c3d4f5g6h7j8&#x27;</span>;</span><br><span class="line"><span class="comment">// 以任意字符拆分字符串</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/[A-z]/</span>;</span><br><span class="line">        <span class="keyword">var</span> result = str.split(reg);</span><br><span class="line">        <span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">split的分割结果    </button><div class="hide-content"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201231191604.png"></div></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-焦点轮播图</title>
      <link href="2020/12/13/Javascript-%E7%84%A6%E7%82%B9%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>2020/12/13/Javascript-%E7%84%A6%E7%82%B9%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201213213245192.gif" alt="Javascript-焦点轮播图" title="Javascript-焦点轮播图"></li><li><p><code>css</code>源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: relative;</span><br><span class="line">          <span class="attribute">display</span>: block;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">640px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">353px</span>;</span><br><span class="line">          <span class="attribute">overflow</span>: hidden;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">list-style</span>: none;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">500%</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">          <span class="attribute">float</span>: left;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">          <span class="attribute">display</span>: block;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">640px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">353px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: relative;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.arrow</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.arrow</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">display</span>: block;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">35px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">text-decoration</span>: none;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">font-weight</span>: bold;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.arrow</span> <span class="selector-tag">a</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">18px</span>;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.arrow</span> <span class="selector-tag">a</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">          <span class="attribute">right</span>: -<span class="number">18px</span>;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">ol</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">list-style</span>: none;</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">10px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">          <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">          <span class="attribute">float</span>: left;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.current</span> &#123;</span><br><span class="line">          <span class="attribute">background-color</span>: red;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/02.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/04.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span> <span class="symbol">&amp;gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            &lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">            &lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">            &lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">       <span class="keyword">var</span> _ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.ul&#x27;</span>);</span><br><span class="line">       <span class="keyword">var</span> _ol = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ol&#x27;</span>);</span><br><span class="line">       <span class="comment">// 获取左右箭头</span></span><br><span class="line">       <span class="keyword">var</span> prev = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.prev&#x27;</span>);</span><br><span class="line">       <span class="keyword">var</span> next = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.next&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">       <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">       <span class="comment">//ImgoffsetWidth = -( 图片宽度 * 索引号);</span></span><br><span class="line">       <span class="keyword">var</span> boxWidth = box.offsetWidth;</span><br><span class="line">       <span class="comment">// console.log(boxWidth);</span></span><br><span class="line">  </span><br><span class="line">       <span class="comment">// 小圆圈函数</span></span><br><span class="line">       <span class="comment">// 获取图片张数</span></span><br><span class="line">       <span class="keyword">var</span> imgs = _ul.children;</span><br><span class="line">       <span class="comment">// console.log(imgs);</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span><br><span class="line">           <span class="comment">//动态生成小圆圈</span></span><br><span class="line">           <span class="keyword">var</span> lis = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">           <span class="comment">// 设置索引号</span></span><br><span class="line">           lis.setAttribute(<span class="string">&#x27;index&#x27;</span>, i);</span><br><span class="line">           _ol.appendChild(lis);</span><br><span class="line">           <span class="comment">// li 的点击事件</span></span><br><span class="line">           lis.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="comment">// 根据图片张数限制小圆圈个数 排它思想</span></span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _ol.children.length; i++) &#123;</span><br><span class="line">                   <span class="comment">// 需过后理解</span></span><br><span class="line">                   _ol.children[i].className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="built_in">this</span>.className = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">               <span class="comment">// 小圆圈点击事件时 图片移动</span></span><br><span class="line">               <span class="comment">// 获取自定义属性</span></span><br><span class="line">               <span class="keyword">var</span> index = <span class="built_in">this</span>.getAttribute(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">               num = index;</span><br><span class="line">               circle = index;</span><br><span class="line">               <span class="comment">// console.log(boxWidth); 640 </span></span><br><span class="line">               animation(_ul, -index * boxWidth);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 让 ol&gt;li 添加 current 类  </span></span><br><span class="line">       _ol.children[<span class="number">0</span>].className = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">       <span class="comment">//  克隆节点 ul li:first true 深度克隆 节点及内容全部克隆</span></span><br><span class="line">       <span class="keyword">var</span> first = _ul.children[<span class="number">0</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">       _ul.appendChild(first);</span><br><span class="line">  </span><br><span class="line">       <span class="comment">// circle 控制小圆圈的播放</span></span><br><span class="line">       <span class="keyword">var</span> circle = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 节流阀</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">       <span class="comment">// 上一张</span></span><br><span class="line">       prev.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">               flag = <span class="literal">false</span>;</span><br><span class="line">              <span class="comment">// 0 第一张</span></span><br><span class="line">           <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">               num = _ul.children.length - <span class="number">1</span>;</span><br><span class="line">               _ul.style.left = -num * boxWidth + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           num--;</span><br><span class="line">           <span class="comment">// 谁做动画为 obj</span></span><br><span class="line">           animation(_ul, -num * boxWidth,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               flag = <span class="literal">true</span>;</span><br><span class="line">           &#125;);</span><br><span class="line">  </span><br><span class="line">           <span class="comment">// 小圆圈跟随 </span></span><br><span class="line">           circle--;</span><br><span class="line">           <span class="keyword">if</span> (circle &lt; <span class="number">0</span>) &#123;</span><br><span class="line">               circle = _ol.children.length - <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           circleChange();</span><br><span class="line">              &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">  </span><br><span class="line">       <span class="comment">// 下一张</span></span><br><span class="line">       next.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">             flag = <span class="literal">false</span>;</span><br><span class="line">               <span class="comment">// </span></span><br><span class="line">           <span class="keyword">if</span> (num == _ul.children.length - <span class="number">1</span>) &#123;</span><br><span class="line">               _ul.style.left = <span class="number">0</span>;</span><br><span class="line">               num = <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           num++;</span><br><span class="line">           <span class="comment">// 谁做动画为 obj</span></span><br><span class="line">           animation(_ul, -num * boxWidth,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               flag = <span class="literal">true</span>;</span><br><span class="line">           &#125;);</span><br><span class="line">  </span><br><span class="line">           <span class="comment">// 小圆圈跟随 </span></span><br><span class="line">           circle++;</span><br><span class="line">           <span class="keyword">if</span> (circle == _ol.children.length) &#123;</span><br><span class="line">               circle = <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           circleChange();</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">circleChange</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _ol.children.length; i++) &#123;</span><br><span class="line">               <span class="comment">// 需过后理解</span></span><br><span class="line">               _ol.children[i].className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           _ol.children[circle].className = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 自动播放</span></span><br><span class="line">       <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           next.click();</span><br><span class="line">       &#125;, <span class="number">2000</span>);</span><br><span class="line">       <span class="comment">// 鼠标移入停止计时器</span></span><br><span class="line">       box.addEventListener(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">           timer = <span class="literal">null</span>;</span><br><span class="line">       &#125;);</span><br><span class="line">       box.addEventListener(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               next.click();</span><br><span class="line">           &#125;, <span class="number">2000</span>);</span><br><span class="line">       &#125;);</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>动画函数的封装与应用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animation(obj,target,collback);</span><br></pre></td></tr></table></figure><p>​                                    </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery-Tab-栏切换</title>
      <link href="2020/12/12/jQuery-Tab-%E6%A0%8F%E5%88%87%E6%8D%A2/"/>
      <url>2020/12/12/jQuery-Tab-%E6%A0%8F%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="Tab-栏切换实战"><a href="#Tab-栏切换实战" class="headerlink" title="Tab-栏切换实战"></a>Tab-栏切换实战</h3><ul><li>效果演示<img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201217180209666.gif" alt="jQuery-Tab栏切换" title="jQuery-Tab栏切换"></li></ul><ul><li><p><code>css</code>源码（注意权重问题）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-class">.tab-item</span> &#123;&#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.tab-item</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">           <span class="attribute">list-style</span>: none;</span><br><span class="line">           <span class="attribute">overflow</span>: hidden;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">border-bottom</span>: <span class="number">4px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">           <span class="attribute">margin-bottom</span>: <span class="number">3px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.tab-item</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#bfc</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: pink;</span><br><span class="line">           <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">           <span class="attribute">cursor</span>: pointer;</span><br><span class="line">           <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.content</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: relative;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.content</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">display</span>: none;</span><br><span class="line">           <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.tab-item</span> <span class="selector-tag">ul</span> <span class="selector-class">.current</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">color</span>: red;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#09f</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>测试文本 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>测试文本 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>测试文本 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>测试文本 4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>测试文本 5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span> 测试文本 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> 测试文本 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> 测试文本 3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> 测试文本 4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> 测试文本 5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.tab-item&gt;ul&gt;li&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// li 点击谁谁获取该类 他的兄弟移除该类</span></span><br><span class="line">        $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;current&#x27;</span>).siblings().removeClass(<span class="string">&#x27;current&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取点击元素的 index </span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="built_in">this</span>).index();</span><br><span class="line">        <span class="comment">// item 对应的 index 显示</span></span><br><span class="line">        $(<span class="string">&#x27;.content&gt;.item&#x27;</span>).eq(index).show().siblings().hide();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery-基础使用</title>
      <link href="2020/12/12/jQuery-%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>2020/12/12/jQuery-%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="jQuery-基础使用"><a href="#jQuery-基础使用" class="headerlink" title="jQuery-基础使用"></a>jQuery-基础使用</h3><ul><li><p>下载</p></li><li><p>引用</p></li><li><p>输出<code>Hello world</code></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">    <span class="comment">// 打印顶级对象 $</span></span><br><span class="line">            <span class="built_in">console</span>.dir($);</span><br><span class="line">            <span class="built_in">console</span>.dir(jQuery);</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h3 id="DOM-对象和-jQuery-对象"><a href="#DOM-对象和-jQuery-对象" class="headerlink" title="DOM 对象和 jQuery 对象"></a>DOM 对象和 jQuery 对象</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/dom.png" alt="DOM和jQuery对象" title="DOM和jQuery对象"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DOM 对象和 jQuery 对象 获取</span></span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&#x27;------------ DOM 对象 ------------&#x27;</span>);</span><br><span class="line">         <span class="keyword">var</span> _div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">         <span class="built_in">console</span>.log(_div);</span><br><span class="line"></span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&#x27;------------ jQuery 对象 ------------&#x27;</span>);</span><br><span class="line">         <span class="keyword">var</span> $div = $(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">         <span class="built_in">console</span>.log($div);</span><br></pre></td></tr></table></figure><h3 id="DOM-和-jQuery-之间的转换"><a href="#DOM-和-jQuery-之间的转换" class="headerlink" title="DOM 和 jQuery 之间的转换"></a>DOM 和 jQuery 之间的转换</h3><h3 id="DOM-转换-jQuery-对象"><a href="#DOM-转换-jQuery-对象" class="headerlink" title="DOM 转换 jQuery 对象"></a>DOM 转换 jQuery 对象</h3><ul><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"> <span class="built_in">console</span>.log(_div);</span><br><span class="line"><span class="comment">// 链式操作</span></span><br><span class="line"> <span class="built_in">console</span>.log($(_div).css(&#123; <span class="attr">width</span>: <span class="number">600</span>, <span class="attr">height</span>: <span class="number">200</span>, <span class="attr">background</span>: <span class="string">&#x27;blue&#x27;</span> &#125;));</span><br></pre></td></tr></table></figure></li><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/$Img.png" width="400"></li></ul><h4 id="jQuery-转换-DOM-对象"><a href="#jQuery-转换-DOM-对象" class="headerlink" title="jQuery 转换 DOM 对象"></a>jQuery 转换 DOM 对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jQuery 转换 DOM 对象:</span><br><span class="line">                    $(<span class="string">&#x27;获取的元素&#x27;</span>)[index] index 是索引号</span><br><span class="line">                    $(<span class="string">&#x27;获取的元素&#x27;</span>).get(index) index是索引号</span><br></pre></td></tr></table></figure><h3 id="jQuery基本和层级选择器"><a href="#jQuery基本和层级选择器" class="headerlink" title="jQuery基本和层级选择器"></a>jQuery基本和层级选择器</h3><table><thead><tr><th align="center">名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">ID 选择器</td><td align="center"><code>$(&quot;id&quot;)</code></td></tr><tr><td align="center">全选选择器</td><td align="center"><code>$(&quot;*&quot;)</code></td></tr><tr><td align="center">类选择器</td><td align="center"><code>$(&quot;.class&quot;)</code></td></tr><tr><td align="center">并集选择器</td><td align="center"><code>$(&quot;div,p,span&quot;)</code></td></tr><tr><td align="center">交集选择器</td><td align="center"><code>$(&quot;li.current&quot;)</code></td></tr><tr><td align="center">标签选择器</td><td align="center"><code>$(&quot;div&quot;)</code></td></tr></tbody></table><ul><li><p>元素获取<code>隐式迭代</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;ul li&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/$li.png"></li></ul><h3 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h3><table><thead><tr><th>语法</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td><code>:first</code></td><td><code>$(&quot;li:first&quot;)</code></td><td></td></tr><tr><td><code>:last</code></td><td><code>$(&quot;li:last&quot;)</code></td><td></td></tr><tr><td><code>:eq(index)</code></td><td><code>$(&quot;li:eq(index)&quot;)</code></td><td></td></tr><tr><td><code>:odd</code></td><td><code>$(&quot;li:odd&quot;)</code></td><td></td></tr><tr><td><code>:even</code></td><td><code>$(&quot;li:even&quot;)</code></td><td></td></tr></tbody></table><h3 id="jQuery-的筛选方法-重点"><a href="#jQuery-的筛选方法-重点" class="headerlink" title="jQuery 的筛选方法(重点)"></a>jQuery 的筛选方法(重点)</h3><table><thead><tr><th align="center">语法</th><th align="center">用法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">parent()</td><td align="center"><font color="red"><code>$(&quot;li&quot;).parent()</code></font></td><td align="center">查找父级</td></tr><tr><td align="center">children(selector)</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">find(selector)</td><td align="center"><font color="red"><code>$(&quot;ul&quot;).find(&quot;li&quot;)</code></font></td><td align="center">相当于 <code>$(&quot;ul li&quot;)</code>后代选择器</td></tr><tr><td align="center"><font color="red"><code>siblings(selector)</code></font></td><td align="center"><font color="red"><code>$(&quot;.first&quot;).siblings(&quot;li&quot;)</code></font></td><td align="center">查找兄弟节点,不包括本身</td></tr><tr><td align="center">nextAll([expr])</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><font color="red"><code>eq(index)</code></font></td><td align="center"><font color="red"><code>$(&quot;li&quot;).eq(index)</code></font></td><td align="center"><font color="red"><code>相当于 $(&quot;li:eq(2)&quot;),index 从 0 开始</code></font></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="新浪下拉菜单-jQuery实现"><a href="#新浪下拉菜单-jQuery实现" class="headerlink" title="新浪下拉菜单(jQuery实现)"></a>新浪下拉菜单(jQuery实现)</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/ $xl.gif" width="400" alt="鼠标移入移出事件" title="鼠标移入移出事件"></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 客户服务 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联系客服 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 帮助中心 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 知识产权保护<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 规则中心 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            ···</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;.ul&gt;li&quot;</span>).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">this</span>).children(<span class="string">&quot;ul&quot;</span>).show();</span><br><span class="line">            &#125;);</span><br><span class="line">            $(<span class="string">&quot;.ul&gt;li&quot;</span>).mouseout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">this</span>).children(<span class="string">&quot;ul&quot;</span>).hide();</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="排它思想"><a href="#排它思想" class="headerlink" title="排它思想"></a>排它思想</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/ $mouseover.gif" alt="排它思想" title="排它思想" width="600"></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 li 的鼠标移入事件</span></span><br><span class="line">           $(<span class="string">&quot;.box&gt;ul&gt;li&quot;</span>).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="comment">// 当前 li 的 背景色改为红色 其他兄弟的背景颜色不变</span></span><br><span class="line">               $(<span class="built_in">this</span>).css(<span class="string">&#x27;backgroundColor&#x27;</span>, <span class="string">&#x27;red&#x27;</span>).siblings(<span class="string">&quot;li&quot;</span>).css(<span class="string">&quot;backgroundColor&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="操作-CSS-方法"><a href="#操作-CSS-方法" class="headerlink" title="操作 CSS 方法"></a>操作 CSS 方法</h3><ul><li><p>预编译类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>添加类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 普通点击事件 修改类样式</span></span><br><span class="line">   $(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).css(<span class="string">&#x27;backgroundColor&#x27;</span>, <span class="string">&#x27;skyblue&#x27;</span>);</span><br><span class="line">   &#125;) </span><br><span class="line"><span class="comment">// 添加已经编辑好的类样式</span></span><br><span class="line">   $(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;current&#x27;</span>);</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></li><li><p>切换类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="comment">// 切换类</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).toggleClass(<span class="string">&#x27;current&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>删除类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除类</span></span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="built_in">this</span>).removeClass(<span class="string">&#x27;bg&#x27;</span>);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-鼠标事件</title>
      <link href="2020/12/11/Javascript-%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/"/>
      <url>2020/12/11/Javascript-%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="mouseenter-和-mousemove-的区别"><a href="#mouseenter-和-mousemove-的区别" class="headerlink" title="mouseenter 和 mousemove 的区别"></a>mouseenter 和 mousemove 的区别</h3><ul><li><p><code>mouseenter</code> 鼠标事件</p><ul><li><p>当鼠标移到元素上就会触发 <code>mouseenter</code> 事件</p></li><li><p>类似于 <code>mousemove</code>，他们之间的差别是</p><ul><li><p> <code>mousemove</code> 鼠标经过自身盒子就会触发,经过子盒子还会触发,<code>mouseenter</code> 只会经过自身盒子触发</p></li><li><p><code>mouseenter</code>不会冒泡</p></li></ul></li><li><p>mouseenter 搭配鼠标离开 <code>mouseleave</code> 同样不会冒泡</p></li></ul></li><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201211204151581.gif" title="" alt="缓动动画封装与应用"><ul><li><p><code>css</code>源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-bar</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: fixed;</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-bar</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* .slider-bar span:hover~.content &#123;</span></span><br><span class="line"><span class="comment">            right: 60px; // css 实现</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-bar</span> <span class="selector-class">.content</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">5s</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-bar&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span> ⬅ <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">           ⬅ 左箭头</span></span><br><span class="line"><span class="comment">           ➡ 右箭头</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">           侧边导航</span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">obj, target, callbac</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 清除定时器 将会只开启一个 定时器</span></span><br><span class="line">            <span class="built_in">clearInterval</span>(obj.timer);</span><br><span class="line">            <span class="comment">// 物体移动   定时器应用</span></span><br><span class="line">            obj.timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 缓动计算公式(step) = (目标值 - 现在的位置) / 10; </span></span><br><span class="line">                <span class="keyword">var</span> step = (target - obj.offsetLeft) / <span class="number">10</span>;</span><br><span class="line">                <span class="comment">// 判断 step 正负问题</span></span><br><span class="line">                step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (obj.offsetLeft == target) &#123;</span><br><span class="line">                    <span class="built_in">clearInterval</span>(obj.timer);</span><br><span class="line">                    <span class="comment">// 回调函数应用</span></span><br><span class="line">                    <span class="keyword">if</span> (callbac) &#123;</span><br><span class="line">                        callbac();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                obj.style.left = obj.offsetLeft + step + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;, <span class="number">15</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">            var move = function () &#123;</span></span><br><span class="line"><span class="comment">                alert(&#x27;a&#x27;);</span></span><br><span class="line"><span class="comment">            &#125; </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">// 箭头函数</span></span><br><span class="line">        <span class="keyword">var</span> move = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            alert(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> content = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.content&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> span = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        <span class="comment">// 鼠标移入事件</span></span><br><span class="line">        span.addEventListener(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            animation(content, -<span class="number">60</span>, move);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 鼠标移出事件</span></span><br><span class="line">        span.addEventListener(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            animation(content, <span class="number">0</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-Scroll系列</title>
      <link href="2020/12/11/Javascript-Scroll%E7%B3%BB%E5%88%97/"/>
      <url>2020/12/11/Javascript-Scroll%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-Scroll系列"><a href="#Javascript-Scroll系列" class="headerlink" title="Javascript-Scroll系列"></a>Javascript-Scroll系列</h3><table><thead><tr><th align="center"><code>scroll</code>系列属性</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>element.scrollTop</code></td><td align="center">返回被卷去的上侧距离,返回数值不带单位</td></tr><tr><td align="center"><code>element.scrollLeft</code></td><td align="center">返回被卷去的左侧距离,返回数值不带单位</td></tr><tr><td align="center"><code>element.scrollWidth</code></td><td align="center">返回自身的实际宽度,不含边框,返回数值不带单位</td></tr><tr><td align="center"><code>element.scrollHeight</code></td><td align="center">返回自身的实际高度,不含边框,返回数值不带单位</td></tr></tbody></table><h3 id="区分"><a href="#区分" class="headerlink" title="区分"></a>区分</h3><ul><li>页面被卷去的头部,可以通过 <code>window.pageYOffset </code>获得,如果是被卷去的左侧 <code>window.pageXOffset</code></li><li>元素被卷去的头部是 <code>element.scrollTop</code>，如果是页面被卷去的头部则是 <code>window.pageYOffset</code></li></ul><h3 id="三大系列总结"><a href="#三大系列总结" class="headerlink" title="三大系列总结"></a>三大系列总结</h3><table><thead><tr><th>三大系列大小对比</th><th>作用</th></tr></thead><tbody><tr><td><code>element.offsetWidth</code></td><td>返回自身包括<code> padding</code>边框、内容区的宽度、返回数值不带单位</td></tr><tr><td><code>element.clientWidth</code></td><td>返回自身包括<code>padding</code> 内容区的宽度，不包含边框，返回数值不带单位</td></tr><tr><td><code>element.scrollWidth</code></td><td>返回自身实际的宽度、不包含边框，返回数值不带单位</td></tr></tbody></table><h3 id="主要用法"><a href="#主要用法" class="headerlink" title="主要用法"></a>主要用法</h3><ol><li>offset 系列经常用于获得元素的位置 <code>offsetLeft offsetTop</code></li><li>client 经常用于获取元素大小<code> clientWidth clientHeight</code></li><li>scroll 经常用于获取滚动距离 <code>scrollTop scrollLeft</code></li><li>注意页面的滚动距离通过 <code>window.pageXOffset</code> 获得</li></ol><h3 id="模块演示"><a href="#模块演示" class="headerlink" title="模块演示"></a>模块演示</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201211162010294.gif" title="scroll" alt="scroll" width="400"></li><li><p><code>css</code>源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">           <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: green;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: blue;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: purple;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.slider-bar</span> &#123;</span><br><span class="line">           <span class="attribute">display</span>: none;</span><br><span class="line">           <span class="attribute">position</span>: fixed;</span><br><span class="line">           <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  </span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.slider-bar</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">display</span>: block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">color</span>: yellow;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">cursor</span>: pointer;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.slider-bar</span> <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-bar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> 返回顶部<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">      <span class="comment">// console.log(_divs); nodeList = 3</span></span><br><span class="line">      <span class="keyword">var</span> _divs = _box.querySelectorAll(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">      <span class="comment">// 侧边栏 </span></span><br><span class="line">      <span class="keyword">var</span> _sliderBar = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.slider-bar&#x27;</span>);</span><br><span class="line">      <span class="comment">// console.log(_divs[1]);</span></span><br><span class="line">      <span class="comment">// 当页面滚动到 .box下第二个 div 显示 slider-bar </span></span><br><span class="line">      <span class="keyword">var</span> _offsetTop = _divs[<span class="number">1</span>].offsetTop;</span><br><span class="line">  </span><br><span class="line">      <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 获取第二个 div 的高度 包含边框 </span></span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset &gt;= _offsetTop) &#123;</span><br><span class="line">              _sliderBar.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              _sliderBar.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 兼容性处理</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getScroll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">              left: <span class="built_in">window</span>.pageXOffset || <span class="built_in">document</span>.documentElement.scrollLeft || <span class="built_in">document</span>.body.scrollLeft || <span class="number">0</span>,</span><br><span class="line">              top: <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop || <span class="number">0</span></span><br><span class="line">          &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      getScroll().top;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-3d旋转木马</title>
      <link href="2020/12/07/CSS-3d%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC/"/>
      <url>2020/12/07/CSS-3d%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS-3d旋转木马"><a href="#CSS-3d旋转木马" class="headerlink" title="CSS-3d旋转木马"></a>CSS-3d旋转木马</h3><ul><li><p>效果预览</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201207133244557.gif" alt="CSS-3d旋转木马" title="CSS-3d旋转木马"></li><li><p><code>css</code>源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">           <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: relative;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span><br><span class="line">  </span><br><span class="line">           <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">           <span class="attribute">animation</span>: rotateImg <span class="number">10s</span> linear infinite;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">@keyframes</span> rotateImg &#123;</span><br><span class="line">           <span class="number">0%</span> &#123;</span><br><span class="line">               <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           <span class="number">100%</span> &#123;</span><br><span class="line">               <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">           <span class="comment">/* 鼠标移入暂停动画 */</span></span><br><span class="line">           <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/01.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/02.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/03.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">120deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/04.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/05.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">240deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>) &#123;</span><br><span class="line">           <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;img/06.jpg&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">300deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      思考原理: </span></span><br><span class="line"><span class="comment">          1. 涉及定位</span></span><br><span class="line"><span class="comment">          2. 旋转</span></span><br><span class="line"><span class="comment">          3. 3D效果</span></span><br><span class="line"><span class="comment">          4. 鼠标移入移出</span></span><br><span class="line"><span class="comment">          5. css3 动画</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-放大镜实现</title>
      <link href="2020/12/06/Javascript-%E6%94%BE%E5%A4%A7%E9%95%9C%E5%AE%9E%E7%8E%B0/"/>
      <url>2020/12/06/Javascript-%E6%94%BE%E5%A4%A7%E9%95%9C%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-放大镜实现原理分析"><a href="#Javascript-放大镜实现原理分析" class="headerlink" title="Javascript-放大镜实现原理分析"></a>Javascript-放大镜实现原理分析</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201206192607123.gif" alt="Javascript-放大镜实现原理分析" title="Javascript-放大镜实现原理分析"></li><li><p><code>css</code>实现源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.imgBox</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.imgBox</span>&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.mask</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">cursor</span>: move;</span><br><span class="line">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.bigImg</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">410px</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.bigImg</span>&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.bigMove</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgBox&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../mousemove.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bigImg&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../mousemove.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bigMove&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素: imgBox mask bigImg</span></span><br><span class="line">        <span class="keyword">var</span> mask = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.mask&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> bigImg = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.bigImg&#x27;</span>);</span><br><span class="line">        <span class="comment">// 鼠标滑入: imgBox 显示 mask 和 bigImg</span></span><br><span class="line">        <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取大图片</span></span><br><span class="line">        <span class="keyword">var</span> bigMove = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.bigMove&#x27;</span>);</span><br><span class="line">        <span class="comment">// 鼠标划入事件</span></span><br><span class="line">        box.addEventListener(<span class="string">&#x27;mouseover&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            mask.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">            bigImg.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 鼠标移出事件</span></span><br><span class="line">        box.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            mask.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">            bigImg.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 鼠标移动: mask 遮罩</span></span><br><span class="line">        <span class="comment">// mask 上按下的鼠标事件 mousedown</span></span><br><span class="line">        mask.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// mask 盒子内页面点击时的坐标 = 点击时的坐标 - 盒子左侧偏移量;</span></span><br><span class="line">            <span class="comment">// mask 盒子内页面点击时的坐标 = 点击时的坐标 - 盒子顶部偏移量;</span></span><br><span class="line">            <span class="keyword">var</span> x = e.pageX - mask.offsetLeft;</span><br><span class="line">            <span class="keyword">var</span> y = e.pageX - mask.offsetLeft;</span><br><span class="line">            <span class="built_in">console</span>.log(x, y);</span><br><span class="line">            <span class="comment">// 拖动 mask 的监听事件 </span></span><br><span class="line">            mask.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// mask 移动事件</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// mask 的移动怎么获取？</span></span><br><span class="line">                <span class="comment">// 当前的 e.pageX 个人暂时理解为 相当于在 document 上的点击</span></span><br><span class="line">                mask.style.left = e.pageX - x + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                mask.style.top = e.pageY - y + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 左侧限制移动范围:</span></span><br><span class="line">                <span class="comment">// 可移动左侧 = 最大盒子的宽度 - mask 宽度</span></span><br><span class="line">                <span class="comment">// 可移动下侧 = 最大盒子的宽度 - mask 宽度</span></span><br><span class="line">                <span class="keyword">if</span> (mask.offsetLeft &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    mask.style.left = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 右侧移动范围限制</span></span><br><span class="line">                <span class="keyword">var</span> maxOffset = box.offsetWidth - mask.offsetWidth;</span><br><span class="line">                <span class="keyword">if</span> (mask.offsetLeft &gt;= maxOffset) &#123;</span><br><span class="line">                    mask.style.left = maxOffset + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 顶部移动范围限制</span></span><br><span class="line">                <span class="keyword">if</span> (mask.offsetTop &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    mask.style.top = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 顶部移动范围限制</span></span><br><span class="line">                <span class="keyword">if</span> (mask.offsetTop &gt;= maxOffset) &#123;</span><br><span class="line">                    mask.style.top = maxOffset + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 mask 影响大盒子移动</span></span><br><span class="line"><span class="comment">                    bigImg--&gt; div </span></span><br><span class="line"><span class="comment">                    bigMove --&gt; 大图片</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                bigMove.style.left = -e.pageX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                bigMove.style.top = -e.pageY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// mask 鼠标抬起事件</span></span><br><span class="line">            mask.addEventListener(<span class="string">&#x27;mouseup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 监听移动事件 移除该方法 取消事件绑定</span></span><br><span class="line">                mask.removeEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-拖拽模态框</title>
      <link href="2020/12/05/Javascript-%E6%8B%96%E6%8B%BD%E6%A8%A1%E6%80%81%E6%A1%86/"/>
      <url>2020/12/05/Javascript-%E6%8B%96%E6%8B%BD%E6%A8%A1%E6%80%81%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-拖拽模态框"><a href="#Javascript-拖拽模态框" class="headerlink" title="Javascript-拖拽模态框"></a>Javascript-拖拽模态框</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020120517480142.gif" width="600"></li><li><p>原理分析</p><blockquote><ul><li><p>获取模态框在鼠标按下时的坐标位置</p></li><li><p><code>mousedown</code></p></li><li><p><code>mousemove</code></p></li><li><p><code>mouseup</code></p></li></ul></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/motaikuang.png" width="600" alt="红色为 document 黑色为模态框" title="红色为 document 黑色为模态框"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="number">#85C1E9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.content</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">996px</span>;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">          <span class="attribute">position</span>: relative;</span><br><span class="line">          <span class="comment">/*  出生点  */</span></span><br><span class="line">          <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">transform</span>: translate(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">          <span class="attribute">background-color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">          <span class="attribute">display</span>: block;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">          <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">          <span class="attribute">border</span>: none;</span><br><span class="line">          <span class="attribute">background</span>: none;</span><br><span class="line">          <span class="attribute">outline</span>: none;</span><br><span class="line">          <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">          <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid red;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#fff</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>::<span class="selector-tag">-webkit-input-placeholder</span> &#123;</span><br><span class="line">          <span class="attribute">color</span>: red;</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">transform</span>: translate(-<span class="number">50%</span>);</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">          <span class="attribute">padding-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.formInfo</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">20%</span>;</span><br><span class="line">          <span class="attribute">transform</span>: translate(-<span class="number">50%</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">a</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">right</span>: -<span class="number">13px</span>;</span><br><span class="line">          <span class="attribute">top</span>: -<span class="number">20px</span>;</span><br><span class="line">          <span class="attribute">display</span>: block;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">text-decoration</span>: none;</span><br><span class="line">          <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">          <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>X<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">            拖动模态框实现</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formInfo&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 box </span></span><br><span class="line">      <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 鼠标按下事件</span></span><br><span class="line">      box.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">          <span class="comment">/* </span></span><br><span class="line"><span class="comment">              按下获取当前的坐标:</span></span><br><span class="line"><span class="comment">                  X = e.pageX - box.offsetLeft;</span></span><br><span class="line"><span class="comment">                  Y = e.pageY - box.offsetTop;</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">          <span class="keyword">var</span> x = e.pageX - box.offsetLeft;</span><br><span class="line">          <span class="keyword">var</span> y = e.pageY - box.offsetTop;</span><br><span class="line">          <span class="comment">// console.log(x, y);</span></span><br><span class="line">          <span class="comment">// 移动事件</span></span><br><span class="line">          <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move);</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">              <span class="comment">/*</span></span><br><span class="line"><span class="comment">             在盒子内点击时获取的坐标是固定不变的 移动</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">              box.style.left = e.pageX - x + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">              box.style.top = e.pageY - y + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 鼠标抬起事件</span></span><br><span class="line">          <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mouseup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-表单校验</title>
      <link href="2020/12/05/Javascript-%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/"/>
      <url>2020/12/05/Javascript-%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="Javascript-表单校验"><a href="#Javascript-表单校验" class="headerlink" title="Javascript-表单校验"></a>Javascript-表单校验</h3><ul><li><p>局部效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201205001444984.gif" alt="Javascript-表单校验" title="Javascript-表单校验" width="600"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#34495e</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-class">.formTitle</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">110px</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-tag">p</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-id">#btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ecf0f1</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-class">.showImg</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">153px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-class">.showImg</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: rgb(<span class="number">26</span>, <span class="number">250</span>, <span class="number">41</span>);</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 正确状态显示 */</span></span><br><span class="line"><span class="selector-class">.true</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: rgb(<span class="number">26</span>, <span class="number">250</span>, <span class="number">41</span>);</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="string">&#x27;true.png&#x27;</span>) center center/cover no-repeat;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 输入错误显示的状态 */</span></span><br><span class="line"><span class="selector-class">.false</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="string">&#x27;false.png&#x27;</span>) center center/cover no-repeat;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 第一次提示时的状态 */</span></span><br><span class="line"><span class="selector-class">.caveat</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="string">&#x27;caveat.png&#x27;</span>) center center/cover no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span> Legend Title <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;formTitle&quot;</span>&gt;</span>Beautify the form<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;showImg&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userPassword&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;showImg&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户名输入框</span></span><br><span class="line">      <span class="keyword">var</span> userName = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#userName&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取密码框</span></span><br><span class="line">      <span class="keyword">var</span> userPassword = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#userPassword&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取图片提示</span></span><br><span class="line">      <span class="keyword">var</span> showImg = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.showImg&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取文本提示信息</span></span><br><span class="line">      <span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.text&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取当前状态</span></span><br><span class="line">      <span class="keyword">var</span> changeImg = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.true&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 封装一个函数 传入参数为 提示信息内容,当前文字颜色,当前状态图</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">difText</span>(<span class="params">textInfo, textcolor, _className</span>) </span>&#123;</span><br><span class="line">          showImg.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">          text.innerHTML = textInfo;</span><br><span class="line">          text.style.color = textcolor;</span><br><span class="line">          changeImg.className = _className;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 获取 input 的点击事件 </span></span><br><span class="line">      userName.onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 输入框获取焦点时进行判断是否输入，没有输入的话清空提示信息</span></span><br><span class="line">          <span class="keyword">if</span> (userName.value == <span class="string">&#x27;用户名&#x27;</span>) &#123;</span><br><span class="line">              userName.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              difText(<span class="string">&#x27;请输入&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;caveat&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 监听键盘抬起时的事件</span></span><br><span class="line">          userName.onkeyup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 如果输入框的用户名为已注册用户 匹配成功时 提示输入正确 否则显示输入错误!</span></span><br><span class="line">              <span class="keyword">if</span> (userName.value === <span class="string">&#x27;123&#x27;</span>) &#123;</span><br><span class="line">                  changeImg.className = <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">                  difText(<span class="string">&#x27;输入正确&#x27;</span>, <span class="string">&#x27;rgb(26, 250, 41)&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  changeImg.className = <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">                  difText(<span class="string">&#x27;输入错误!&#x27;</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;false&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 失去焦点 </span></span><br><span class="line">      userName.onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 如果没有输入内容 则回复原来的提示信息</span></span><br><span class="line">          <span class="keyword">if</span> (userName.value === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">              userName.value = <span class="string">&#x27;用户名&#x27;</span>;</span><br><span class="line">              <span class="comment">// 将提示信息隐藏</span></span><br><span class="line">              showImg.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 密码框事件 后续原理大致相同 </span></span><br></pre></td></tr></table></figure></li><li><p>素材下载:</p><ul><li> <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201205002408672.png" width='26'> </li><li><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201205002408674.png"></li><li><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201205002408670.png" alt="first"></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-offset系列</title>
      <link href="2020/12/01/JavaScript-offset%E7%B3%BB%E5%88%97/"/>
      <url>2020/12/01/JavaScript-offset%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="offset-概述"><a href="#offset-概述" class="headerlink" title="offset 概述"></a>offset 概述</h3><blockquote><p><code>offset</code> 就是偏移量 使用 <code>offset 系列相关的属性</code>可以动态的得到该元素得位置(偏移) </p></blockquote><ul><li><p>获得元素距离带有定位父元素的位置</p></li><li><p>获得元素自身的大小(宽度高度)</p></li><li><p>返回的数值不带单位</p></li></ul><ul><li><p><code>offset</code>系列常用属性</p><table><thead><tr><th align="center"><code>offset</code>系列属性</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>element.offsetParent</code></td><td align="center">返回该元素带有定位的父级元素,如果父级都没有定位则返回<code>body</code></td></tr><tr><td align="center"><code>element.offsetTop</code></td><td align="center">返回元素相对带有定位父元素上方的偏移</td></tr><tr><td align="center"><code>element.offsetLeft</code></td><td align="center">返回元素相对带有定位元素左边框的偏移</td></tr><tr><td align="center"><code>element.offsetWidth</code></td><td align="center">返回自身包括padding、边框、内容区的宽度、返回数值不带单位</td></tr><tr><td align="center"><code>element.offsetHeight</code></td><td align="center">返回自身包括 padding、边框、内容区域的高度,返回数值不带单位</td></tr></tbody></table></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-Location对象的属性</title>
      <link href="2020/12/01/JavaScript-Location%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7/"/>
      <url>2020/12/01/JavaScript-Location%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="Location-对象的属性"><a href="#Location-对象的属性" class="headerlink" title="Location 对象的属性"></a>Location 对象的属性</h3><table><thead><tr><th align="center">Location 对象属性</th><th align="center">返回值</th></tr></thead><tbody><tr><td align="center"><code>location.href</code></td><td align="center">获取或者设置整个 URL</td></tr><tr><td align="center"><code>location.host</code></td><td align="center">返回主机(域名)</td></tr><tr><td align="center"><code>location.port</code></td><td align="center">返回端口号,如果未写返回 空字符串</td></tr><tr><td align="center"><code>location.pathname</code></td><td align="center">返回路径</td></tr><tr><td align="center"><code>location.search</code></td><td align="center">返回参数</td></tr><tr><td align="center"><code>location.hash</code></td><td align="center">返回片段 #后面的内容 常见于链接 锚点</td></tr></tbody></table><h3 id="Location-对象方法"><a href="#Location-对象方法" class="headerlink" title="Location 对象方法"></a>Location 对象方法</h3><table><thead><tr><th align="center">Location 对象方法</th><th align="center">返回值</th></tr></thead><tbody><tr><td align="center"><code>location.assign</code></td><td align="center">跟 <code>href </code>一样,可以跳转页面（也成为重定向页面）</td></tr><tr><td align="center"><code>location.replace</code></td><td align="center">替换当前页面,因为不记录历史,所以不能后退页面</td></tr><tr><td align="center"><code>location.reload</code></td><td align="center">重新加载页面,相当于刷新按钮或者 <code>F5 </code>如果参数为<code>true</code>强制刷新 <code>ctrl+F5</code></td></tr></tbody></table><h3 id="Location-应用"><a href="#Location-应用" class="headerlink" title="Location 应用"></a>Location 应用</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201201154431714.gif" alt="location.href" title="location.href"></li><li><p><code>css</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">           <span class="attribute">color</span>: red;</span><br><span class="line">           <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">           <span class="attribute">display</span>: inline-block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#09f</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    自动跳转</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 计时器</span></span><br><span class="line">        <span class="keyword">var</span> time = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">// 调用该函数解决空白刷新</span></span><br><span class="line">        showText();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">showText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (time == <span class="number">0</span>) &#123;</span><br><span class="line">                location.href = <span class="string">&#x27;https://lovobin.github.io/&#x27;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                div.innerHTML = <span class="string">&#x27;您将在&#x27;</span> + <span class="string">&#x27;&lt;span&gt;&#x27;</span> + time + <span class="string">&#x27;&lt;/span&gt;&#x27;</span> + <span class="string">&#x27;秒后返回奔跑的小前端&#x27;</span>;</span><br><span class="line">                time--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 开启定时器</span></span><br><span class="line">        <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            showText();</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="location-search"><a href="#location-search" class="headerlink" title="location.search"></a>location.search</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201201160351281.gif" alt="location.search" title="location.search"></li><li><p><code>login.html</code></p><ul><li><p><code>css</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.html&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>index.html</code></p><ul><li><p><code>css</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">     <span class="built_in">console</span>.log(location.search); <span class="comment">// ?uname=input.value</span></span><br><span class="line">     <span class="comment">// 字符串截取</span></span><br><span class="line">     <span class="keyword">var</span> str = location.search;</span><br><span class="line">     <span class="keyword">var</span> newStr = str.substr(<span class="number">1</span>);</span><br><span class="line">     <span class="built_in">console</span>.log(newStr); <span class="comment">// uname=input.value</span></span><br><span class="line">     <span class="comment">// 分割字符串 </span></span><br><span class="line">     <span class="keyword">var</span> arr = newStr.split(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">     <span class="built_in">console</span>.log(arr);</span><br><span class="line">     <span class="keyword">var</span> parmer = arr[<span class="number">1</span>];</span><br><span class="line">     div.innerHTML = parmer;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOM-页面加载事件</title>
      <link href="2020/12/01/BOM-%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6/"/>
      <url>2020/12/01/BOM-%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="BOM-页面加载事件"><a href="#BOM-页面加载事件" class="headerlink" title="BOM-页面加载事件"></a>BOM-页面加载事件</h3><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> load 等页面内容全部加载完毕,包含页面 dom 元素 图片 flash css 等</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> DOMContentLoaded 是 DOM 加载完毕,不包含图片 flash css 等就可以执行 加载速度比 load更快一些</span><br></pre></td></tr></table></figure><h3 id="BOM-窗口大小事件"><a href="#BOM-窗口大小事件" class="headerlink" title="BOM-窗口大小事件"></a>BOM-窗口大小事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;················&#x27;</span>);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-统一定位符(url)-引起错误解决方案</title>
      <link href="2020/11/29/Hexo-%E7%BB%9F%E4%B8%80%E5%AE%9A%E4%BD%8D%E7%AC%A6-url-%E5%BC%95%E8%B5%B7%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>2020/11/29/Hexo-%E7%BB%9F%E4%B8%80%E5%AE%9A%E4%BD%8D%E7%AC%A6-url-%E5%BC%95%E8%B5%B7%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-统一定位符-url-引起错误解决方案"><a href="#Hexo-统一定位符-url-引起错误解决方案" class="headerlink" title="Hexo-统一定位符(url)-引起错误解决方案"></a>Hexo-统一定位符(url)-引起错误解决方案</h3><ul><li><p>在起初由于文章过多(<code>全部显示在 _posts下</code>) </p><ul><li>配置 <code>permalink</code></li><li>配置 <code>new_post_name</code></li></ul></li><li><p>在提交文章内容后本地可预览状态 - <code>gitpages</code>路径中出现小写</p><blockquote><p><code>Eg.</code></p><p><code>lovobin.github.io/2020/hexo/Hexo-统一定位符-url-引起错误解决方案/</code> （<strong>正确显示</strong>）</p><p> <code>lovobin.github.io/2020/Hexo/Hexo-统一定位符-url-引起错误解决方案/</code>(<strong>错误显示</strong>)</p><p><code>hexo</code>  不等于 <code>Hexo</code>（导致无法显示）</p></blockquote></li><li><p>引起上述错误解决方案</p><ul><li><p>在博客根目录下找到如下文件夹</p><p><code>.deploy_git</code> 需要开启</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/hiddenBlog.png"></li><li><p>进入<code>.deploy_git</code></p></li><li><p>再进入<code>.git</code></p></li><li><p>使用编辑器打开<code>config</code>配置文件</p></li><li><p>修改如下参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ignorecase = <span class="literal">true</span> 改为 ignorecase = <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>再不信任的情况下剪切出  除<code>.git</code>文件之外的文件到其他路径下暂存</p></li><li><p>进行如下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf * (等价于剪切 因为剪切后文件不存在)</span><br><span class="line">git commit -m ‘clean all file’  (提交日志信息)</span><br><span class="line">git push  (推送)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>返回博客根目录重新部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo -d</span><br></pre></td></tr></table></figure></li><li><p>进入博客网站</p><blockquote><p>强制刷新:  <code>ctrl+F5</code></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-DOM-键盘事件</title>
      <link href="2020/11/29/JavaScript-DOM-%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
      <url>2020/11/29/JavaScript-DOM-%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h3><table><thead><tr><th align="center">键盘事件</th><th align="center">触发条件</th></tr></thead><tbody><tr><td align="center"><code>onkeyup</code></td><td align="center">某个键盘按键松开时触发</td></tr><tr><td align="center"><code>onleydown</code></td><td align="center">某个键盘按键被按下时触发</td></tr><tr><td align="center"><code>onkeypress</code></td><td align="center">某个键盘按键被按下时触发 <strong>但是它不识别功能键 <code>ctrl shift</code> 区分大小写</strong></td></tr></tbody></table><ul><li><p>执行顺序</p><p><code>keydown - keypress - keyup</code></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取按下的键的 keyCode</span></span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;keydown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取按下的键的 keyCode</span></span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;keyup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取按下的键的 keyCode</span></span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;keypress&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>模拟京东</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="comment">// 获取按下的键的 keyCode s===83 </span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;keyup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.keyCode === <span class="number">83</span>) &#123;</span><br><span class="line">        input.focus();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ul><li><p><code>css</code>源</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">           <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">           <span class="attribute">display</span>: block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">163px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">           <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#0099ff</span>;</span><br><span class="line">           <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">           <span class="attribute">overflow</span>: hidden;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">label</span> &#123;</span><br><span class="line">           <span class="attribute">display</span>: block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#000</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">input</span> &#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 input </span></span><br><span class="line">        <span class="keyword">var</span> input = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> span = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        input.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            input.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            input.addEventListener(<span class="string">&#x27;keyup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (input.value.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    span.style.opacity = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                    span.innerHTML = input.value;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.style.opacity = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-封装Tools.js</title>
      <link href="2020/11/29/JavaScript-%E5%B0%81%E8%A3%85Tools-js/"/>
      <url>2020/11/29/JavaScript-%E5%B0%81%E8%A3%85Tools-js/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right, please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content">  <script id="hbeData" type="hbeData" data-hmacdigest="9e008a231753a0e6563d4f09d7142620685bd54192409b8d2063baf6996662ad"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hello, password is required here</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-定时器应用</title>
      <link href="2020/11/29/Javascript-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%BA%94%E7%94%A8/"/>
      <url>2020/11/29/Javascript-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="定时器应用"><a href="#定时器应用" class="headerlink" title="定时器应用"></a>定时器应用</h3><ul><li><p><code>setTimeout</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id =  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            执行程序</span><br><span class="line">        &#125;,时间(单位毫秒));</span><br><span class="line"></span><br><span class="line">清除定时器:</span><br><span class="line"> <span class="built_in">clearTimeout</span>(id);</span><br></pre></td></tr></table></figure></li><li><p><code>setInterval</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id =  <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            执行程序</span><br><span class="line">        &#125;,时间(单位毫秒));</span><br><span class="line"></span><br><span class="line">清除定时器:</span><br><span class="line"> <span class="built_in">clearInterval</span>(id);</span><br></pre></td></tr></table></figure></li><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201201121918743.gif" alt="setInterval" title="setInterval"></li></ul><ul><li><p><code>css</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">div</span>&gt;<span class="selector-tag">span</span> &#123;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">display</span>: inline-block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#09f</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">           <span class="attribute">margin-top</span>: <span class="number">25%</span>;</span><br><span class="line">           <span class="attribute">margin-left</span>: <span class="number">4.7%</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;hour&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;minute&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;second&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> hour = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.hour&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> minute = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.minute&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> second = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.second&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> inputTime = +<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2020-12-1 22:20:00&#x27;</span>); <span class="comment">// 返回用户输入的时间总毫秒数</span></span><br><span class="line">        countDown();</span><br><span class="line">        <span class="built_in">setInterval</span>(countDown, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">countDown</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> nowTime = +<span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">// 返回当前时间总的毫秒数</span></span><br><span class="line">            <span class="keyword">var</span> times = (inputTime - nowTime) / <span class="number">1000</span>; <span class="comment">// times 是剩余时间的总数</span></span><br><span class="line">            <span class="keyword">var</span> h = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>); <span class="comment">// 时 </span></span><br><span class="line">            h = h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h;</span><br><span class="line">            hour.innerHTML = h;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(times / <span class="number">60</span> % <span class="number">60</span>);</span><br><span class="line">            m = m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m;</span><br><span class="line">            minute.innerHTML = m;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(times % <span class="number">60</span>);</span><br><span class="line">            s = s &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + s : s;</span><br><span class="line">            second.innerHTML = s;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="发送验证码"><a href="#发送验证码" class="headerlink" title="发送验证码"></a>发送验证码</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201201130934465.gif" alt="setInterval" title="setInterval"></li><li><p><code>css</code>源码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#09f</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">input</span> &#123;</span><br><span class="line">           <span class="attribute">border</span>: none;</span><br><span class="line">           <span class="attribute">outline</span>: none;</span><br><span class="line">           <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid red;</span><br><span class="line">           <span class="attribute">margin-top</span>: <span class="number">65px</span>;</span><br><span class="line">           <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">button</span> &#123;</span><br><span class="line">           <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;input&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span> 发送验证码 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _input = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">2</span>;</span><br><span class="line">        btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                    btn.innerHTML = <span class="string">&#x27;发送验证码&#x27;</span>;</span><br><span class="line">                    btn.disabled = <span class="literal">false</span>;</span><br><span class="line">                    count = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    btn.disabled = <span class="literal">true</span>;</span><br><span class="line">                    btn.innerHTML = <span class="string">&#x27;还剩余&#x27;</span> + count + <span class="string">&#x27;秒&#x27;</span></span><br><span class="line">                    count--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;); </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-进阶练习</title>
      <link href="2020/11/29/JavaScript-%E8%BF%9B%E9%98%B6%E7%BB%83%E4%B9%A0/"/>
      <url>2020/11/29/JavaScript-%E8%BF%9B%E9%98%B6%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ImageHover-scale</title>
      <link href="2020/11/29/ImageHover-scale/"/>
      <url>2020/11/29/ImageHover-scale/</url>
      
        <content type="html"><![CDATA[<h3 id="前端鼠标划入图片原位放大"><a href="#前端鼠标划入图片原位放大" class="headerlink" title="前端鼠标划入图片原位放大"></a>前端鼠标划入图片原位放大</h3><ul><li><p>效果演示<br><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201129153425915.gif#pic_center" alt="鼠标滑入图片原位放大"></p></li><li><p> <code>css</code>源码:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">533px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">533px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">3px</span> solid red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">533px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">span</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">533px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: .<span class="number">5</span>;</span><br><span class="line">            <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构: </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/dream.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-获取页面坐标</title>
      <link href="2020/11/29/Javascript-%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%9D%90%E6%A0%87/"/>
      <url>2020/11/29/Javascript-%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%9D%90%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h3 id="鼠标事件对象"><a href="#鼠标事件对象" class="headerlink" title="鼠标事件对象"></a>鼠标事件对象</h3><table><thead><tr><th align="center">鼠标事件对象</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>e.clientX</code></td><td align="center">返回鼠标相对于浏览器窗口可视区的 X 坐标</td></tr><tr><td align="center"><code>e.clientY</code></td><td align="center">返回鼠标相对于浏览器窗口可视区的 Y 坐标</td></tr><tr><td align="center"><code>e.pageX</code></td><td align="center">返回鼠标相对于文档页面的 X 坐标 <code>IE9+支持</code></td></tr><tr><td align="center"><code>e.pageY</code></td><td align="center">返回鼠标相对于文档页面的 Y 坐标 <code>IE9+支持</code></td></tr><tr><td align="center"><code>e.screenX</code></td><td align="center">返回鼠标相对于电脑屏幕的 X 坐标</td></tr><tr><td align="center"><code>e.screenY</code></td><td align="center">返回鼠标相对于电脑屏幕的 XY坐标</td></tr></tbody></table><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201129123224588.gif" title="mousemove" alt="mousemove"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute; <span class="comment">// **</span></span><br><span class="line">           <span class="attribute">width</span>: <span class="number">160px</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/mousemove.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="comment">// 获取元素 img</span></span><br><span class="line">      <span class="keyword">var</span> photo = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">      <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// pageX  pageY</span></span><br><span class="line">          <span class="keyword">var</span> photoX = e.pageX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">          <span class="keyword">var</span> photoY = e.pageY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">          <span class="comment">// 给图片添加 style 改变 left top</span></span><br><span class="line">          photo.style.left = photoX;</span><br><span class="line">          photo.style.top = photoY;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript-常用鼠标事件</title>
      <link href="2020/11/29/Javascript-%E5%B8%B8%E7%94%A8%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/"/>
      <url>2020/11/29/Javascript-%E5%B8%B8%E7%94%A8%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="常用鼠标事件"><a href="#常用鼠标事件" class="headerlink" title="常用鼠标事件"></a>常用鼠标事件</h3><ul><li><p>禁用鼠标右键菜单</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;contextmenu&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           e.preventDefault();</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure></li><li><p>禁止文本选中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;selectstart&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           e.preventDefault();</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-三种动态创建元素的区别</title>
      <link href="2020/11/29/JavaScript-%E4%B8%89%E7%A7%8D%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2020/11/29/JavaScript-%E4%B8%89%E7%A7%8D%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="三种动态创建元素的区别"><a href="#三种动态创建元素的区别" class="headerlink" title="三种动态创建元素的区别"></a>三种动态创建元素的区别</h3><ul><li><code>document.write()</code></li><li><code>element.innerHTML</code></li><li><code>document.createElement()</code></li></ul><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><ol><li><p><code>docuemnt.write</code>是直接将内容写入特定的内容流,<font color="red"><strong>但是文档流执行完毕,则它会导致页面全部重绘</strong></font></p></li><li><p><code>innerHTML</code> 是将内容写入某个<code>DOM</code>节点,不会导致页面全部重绘</p></li><li><p> <code>innerHTML</code>创建多个元素效率更高(不要拼接字符串,采取数组形式拼接)</p></li><li><p><code>createElement()</code>创建多个元素效率稍微低一点,但是接轨更加清晰</p></li></ol><blockquote><p><strong>采取数组时,<code>innerHTML</code>效率要比<code>creatElement</code>高</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-动态创建与删除表格</title>
      <link href="2020/11/29/JavaScript-%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4%E8%A1%A8%E6%A0%BC/"/>
      <url>2020/11/29/JavaScript-%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4%E8%A1%A8%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="动态创建表格"><a href="#动态创建表格" class="headerlink" title="动态创建表格"></a>动态创建表格</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201129100114223.gif" alt="JavaScript-动态创建表格" title="JavaScript-动态创建表格" width="600"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">caption</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: bold;</span><br><span class="line">            <span class="attribute">background-color</span>: rgb(<span class="number">120</span>, <span class="number">173</span>, <span class="number">209</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">th</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: rgb(<span class="number">120</span>, <span class="number">173</span>, <span class="number">209</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>动态创建表格<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>科目<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟数据库</span></span><br><span class="line">        <span class="keyword">var</span> datas = [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">                subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">                grades: <span class="number">90</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">                subject: <span class="string">&#x27;Java&#x27;</span>,</span><br><span class="line">                grades: <span class="number">80</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;王麻子&#x27;</span>,</span><br><span class="line">                subject: <span class="string">&#x27;Python&#x27;</span>,</span><br><span class="line">                grades: <span class="number">90</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;Tom&#x27;</span>,</span><br><span class="line">                subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">                grades: <span class="number">100</span></span><br><span class="line">            &#125;</span><br><span class="line">        ];</span><br><span class="line">        <span class="comment">// 动态创建 tr td 根据对象创建</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; datas.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 1. 先获取父级元素 </span></span><br><span class="line">            <span class="keyword">var</span> tbody = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;tbody&#x27;</span>);</span><br><span class="line">            <span class="comment">// 创建 tr</span></span><br><span class="line">            <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="comment">// 将 tr 添加在 tbody 中</span></span><br><span class="line">            tbody.appendChild(tr);</span><br><span class="line">            <span class="comment">// 准备创建列 需要遍历对象</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> datas[i]) &#123;</span><br><span class="line">                <span class="comment">// console.log(k); k == 对象的键</span></span><br><span class="line">                <span class="comment">// 需要获取 k 的值</span></span><br><span class="line">                <span class="comment">// console.log(datas[i][k]); 拿到 k 的值</span></span><br><span class="line">                <span class="comment">// 创建 td 根据 k</span></span><br><span class="line">                <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">                <span class="comment">// 在创建完 td 后需要拿到 k 的值</span></span><br><span class="line">                td.innerHTML = datas[i][k];</span><br><span class="line">                tr.appendChild(td);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 创建删除单元格</span></span><br><span class="line">            <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            td.innerHTML = <span class="string">&#x27;&lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&#x27;</span>;</span><br><span class="line">            tr.appendChild(td);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 删除操作 需要在创建完整表格再有删除</span></span><br><span class="line">        <span class="comment">// 获取所有的 a</span></span><br><span class="line">        <span class="keyword">var</span> allDelete = tbody.querySelectorAll(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="comment">// 循环遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allDelete.length; i++) &#123;</span><br><span class="line">            allDelete[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 删除 整行 node.removeChild(child) node=== 父节点</span></span><br><span class="line">                tbody.removeChild(<span class="built_in">this</span>.parentNode.parentNode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-DOM操作</title>
      <link href="2020/11/27/JavaScript-DOM%E6%93%8D%E4%BD%9C/"/>
      <url>2020/11/27/JavaScript-DOM%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="JavaScript-DOM-操作"><a href="#JavaScript-DOM-操作" class="headerlink" title="JavaScript-DOM 操作:"></a>JavaScript-DOM 操作:</h3><ul><li><p>什么是<code>DOM</code></p><blockquote><p>文档对象模型(<code>Document Object Model，简称DOM</code>)是<code>W3C</code>组织推荐的处理可扩展标记语言</p></blockquote></li></ul><h4 id="元素获取"><a href="#元素获取" class="headerlink" title="元素获取:"></a>元素获取:</h4><p>​        <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/getElementByTagname.png" width="600" alt="DOM元素获取" title="DOM元素获取"></p><ul><li><p>根据元素<code>ID</code>获取元素 <code>document.getElementById()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Obox = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Obox);</span><br></pre></td></tr></table></figure></li><li><p>根据标签名称获取元素(伪数组)<code>document.getElementsByTagName()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Olis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Olis);</span><br></pre></td></tr></table></figure></li><li><p><font color="red" fontWeight="bold">  获取某个元素(父元素)内部所有指定标签名的子元素<code>element.getElementsByTagName(&#39;标签名&#39;);</code></font></p></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;Oul&quot;</span> <span class="attr">class</span>=<span class="string">&quot;Ou1&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> ID-01-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> ID-01-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> ID-01-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> ID-01-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> ID-01-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;Ou2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;Ou2&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> CLASS-02-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> CLASS-02-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> CLASS-02-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> CLASS-02-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> CLASS-02-UL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>获取元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">相同结果:</span><br><span class="line">+ 根据 ID</span><br><span class="line"><span class="comment">// 获取某个元素(父元素)内部所有指定标签名的子元素</span></span><br><span class="line">        <span class="comment">// element.getElementsByTagName(&#x27;标签名&#x27;);</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;------------ 使用 ID 获取 ------------&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> _Oul = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;Ou2&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> _Olis = _Oul.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(_Olis);</span><br><span class="line"></span><br><span class="line">+ 根据 ID 或者 类名 获取</span><br><span class="line">        <span class="comment">// 使用 querySelector()</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;------------  querySelector || querySelectorAll ------------&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> _Ou2_ = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.Ou2&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(_Ou2_);</span><br><span class="line">        <span class="keyword">var</span> _Olis_ = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.Ou2&gt;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(_Olis_);</span><br></pre></td></tr></table></figure></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/getID-querySelector.png" alt="页面中ol>li的获取" title="页面中ol>li的获取"><h3 id="获取特殊元素"><a href="#获取特殊元素" class="headerlink" title="获取特殊元素"></a>获取特殊元素</h3><ul><li><p><code>body</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyElement = <span class="built_in">document</span>.body;</span><br><span class="line"><span class="built_in">console</span>.log(bodyElement);</span><br></pre></td></tr></table></figure></li><li><p><code>html</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlElement = <span class="built_in">document</span>.documentElement;</span><br><span class="line"><span class="built_in">console</span>.log(htmlElement);</span><br></pre></td></tr></table></figure></li><li><p>输出展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/getBody-Html.png" alt="body和html特殊元素获取" title="body和html特殊元素获取"></li></ul><h3 id="事件三要素"><a href="#事件三要素" class="headerlink" title="事件三要素"></a>事件三要素</h3><ul><li>事件三要素<ul><li>事件源</li><li>事件类型</li><li>事件处理程序</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 获取事件源</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"><span class="comment">// 事件类型</span></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 事件处理程序</span></span><br><span class="line">    alert(<span class="string">&#x27;按钮发生了点击&#x27;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;按钮发生了点击!&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>事件效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/alert.png"></li><li><p>点击事件另一种写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">      btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;另一种点击事件写法···&#x27;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/click.png" alt="onclick()" title="onclick"></li></ul><h3 id="常见的鼠标事件"><a href="#常见的鼠标事件" class="headerlink" title="常见的鼠标事件"></a>常见的鼠标事件</h3><table><thead><tr><th align="center">鼠标事件</th><th align="center">触发条件</th></tr></thead><tbody><tr><td align="center"><code>onclick</code></td><td align="center">鼠标点击左键触发</td></tr><tr><td align="center"><code>onmouseover</code></td><td align="center">鼠标经过触发</td></tr><tr><td align="center"><code>onmouseout</code></td><td align="center">鼠标离开触发</td></tr><tr><td align="center"><code>onfocus</code></td><td align="center">获得鼠标焦点触发</td></tr><tr><td align="center"><code>onblur</code></td><td align="center">失去鼠标焦点触发</td></tr><tr><td align="center"><code>onmousemove</code></td><td align="center">鼠标移动触发</td></tr><tr><td align="center"><code>onmouseup</code></td><td align="center">鼠标弹起触发</td></tr><tr><td align="center"><code>onmousedown</code></td><td align="center">鼠标按下触发</td></tr></tbody></table><h3 id="操作元素–修改元素内容"><a href="#操作元素–修改元素内容" class="headerlink" title="操作元素–修改元素内容"></a>操作元素–修改元素内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 修改按钮的文本显示信息</span></span><br><span class="line"><span class="keyword">var</span> _btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">_btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    _btn.innerHTML = <span class="string">&quot;点击发生改变的文字信息&quot;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/btnClick.png" alt="innerHTML" title="innerHTML"></li><li><p><code>innerText</code>与<code>innerHTML</code>的区别</p><ul><li><p><code>innerText</code></p><blockquote><ul><li>不识别标签</li><li>去除空格和换行</li></ul></blockquote></li><li><p><code>innerHTML</code></p><blockquote><ul><li>识别标签</li><li>保留空格和换行</li></ul></blockquote></li></ul></li></ul><h3 id="元素属性的修改"><a href="#元素属性的修改" class="headerlink" title="元素属性的修改"></a>元素属性的修改</h3><ul><li><p><code>src</code></p></li><li><p><code>href</code></p></li><li><p><code>id</code></p></li><li><p><code>alt</code></p></li><li><p><code>title</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改按钮的文本显示信息</span></span><br><span class="line">        <span class="keyword">var</span> _baidu = <span class="built_in">document</span>.getElementById(<span class="string">&quot;baidu&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> _taobao = <span class="built_in">document</span>.getElementById(<span class="string">&quot;taobao&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> _a = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        _baidu.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            _a.href = <span class="string">&#x27;https://www.baidu.com&#x27;</span>;</span><br><span class="line">            _a.innerHTML = _a.href;</span><br><span class="line">        &#125;)</span><br><span class="line">        _taobao.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            _a.href = <span class="string">&#x27;https://ai.taobao.com/&#x27;</span>;</span><br><span class="line">            _a.innerHTML = _a.href;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>效果显示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/_aHref.gif" alt="JS点击修改链接属性" title="JS点击修改链接属性"></li></ul><h3 id="表单元素的DOM操作"><a href="#表单元素的DOM操作" class="headerlink" title="表单元素的DOM操作"></a>表单元素的<code>DOM</code>操作</h3><blockquote><p><code>type、value、checked、selected、disabled</code></p><p><code>type</code> 密码框明文与暗文案例</p></blockquote><h3 id="JS修改元素的大小-颜色-位置等样式"><a href="#JS修改元素的大小-颜色-位置等样式" class="headerlink" title="JS修改元素的大小,颜色,位置等样式"></a><code>JS</code>修改元素的大小,颜色,位置等样式</h3><blockquote><ul><li><code>JS</code>里面的样式采用驼峰命名法</li><li><code>JS</code>修改<code>style</code>样式修改,产生的是行内样式,<code>CSS</code>权重比较高</li></ul></blockquote><h3 id="JS修改类名"><a href="#JS修改类名" class="headerlink" title="JS修改类名"></a><code>JS</code>修改类名</h3><ul><li><p>修改的类</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line">     &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="selector-class">.changeBox</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">     <span class="attribute">background-color</span>: purple;</span><br><span class="line">     <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>动态修改 添加类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">   + 方法一: </span><br><span class="line">       <span class="comment">// 添加 onmouseover 将失效，去除 on 即为鼠标移入监听正确</span></span><br><span class="line">       _box.addEventListener(<span class="string">&#x27;mouseover&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           _box.className = <span class="string">&#x27;changeBox&#x27;</span>;</span><br><span class="line">       &#125;)</span><br><span class="line">   + 方法二:</span><br><span class="line">       <span class="comment">// 必须添加 on</span></span><br><span class="line">       _box.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           _box.className = <span class="string">&#x27;changeBox&#x27;</span>; <span class="comment">// 多类名添加空格</span></span><br><span class="line">       &#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="案例练习"><a href="#案例练习" class="headerlink" title="案例练习"></a>案例练习</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/formClassname.png" alt="表单验证" title="表单验证"> <ul><li>实现原理分析<ul><li>准本两个类<ul><li><code>wrong</code></li><li><code>right</code></li></ul></li><li>通过对<code>onblur</code>事件判断<ul><li>正确添加 <code>right</code>类</li><li>否则添加 <code>wrong</code>类（<code>element.className</code>）</li><li>动态修改<code>innerHTML</code>信息</li></ul></li></ul></li></ul><h3 id="排它思想"><a href="#排它思想" class="headerlink" title="排它思想"></a>排它思想</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/li.png"></p><ul><li><p><code>CSS实现源码</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">           <span class="attribute">list-style</span>: none;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">           <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">           <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">cursor</span>: pointer;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;uL&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>实现原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 UL</span></span><br><span class="line"><span class="keyword">var</span> _uL = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.uL&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取 UL下的 所有 li 标签</span></span><br><span class="line">      <span class="keyword">var</span> _lis = _uL.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">      <span class="comment">// 外层循环添加背景颜色</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _lis.length; i++) &#123;</span><br><span class="line">          <span class="comment">// 清除原有 li 背景颜色</span></span><br><span class="line">          _lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _lis.length; i++) &#123;</span><br><span class="line">                  _lis[i].style.background = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">// 添加新的背景色</span></span><br><span class="line">              <span class="built_in">this</span>.style.background = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="百度换肤效果"><a href="#百度换肤效果" class="headerlink" title="百度换肤效果"></a>百度换肤效果</h3><ul><li><p>方案一(拥有默认皮肤)</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">           <span class="attribute">list-style</span>: none;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">5px</span> solid red;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">body</span> &#123;</span><br><span class="line">           <span class="comment">// 默认皮肤</span></span><br><span class="line">           <span class="attribute">background</span>: url(<span class="string">img/changeBg01.jpg</span>) no-repeat;</span><br><span class="line">           <span class="attribute">background-size</span>: cover;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>获取点击事件并切换图片</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/ 获取 ul 和 图片</span><br><span class="line">        <span class="keyword">var</span> _imgs = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.ul&#x27;</span>).querySelectorAll(<span class="string">&#x27;img&#x27;</span>);;</span><br><span class="line">        <span class="comment">// 循环遍历点击事件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _imgs.length; i++) &#123;</span><br><span class="line">            _imgs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(this); this 指向 img 标签</span></span><br><span class="line">                <span class="keyword">var</span> body = <span class="built_in">document</span>.body.style.backgroundImage = <span class="string">&#x27;url(&#x27;</span> + <span class="built_in">this</span>.src + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>方案二(不存在皮肤)</p></li><li><p><code>css</code>区别</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>区别</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> body = <span class="built_in">document</span>.body;</span><br><span class="line">body.background = <span class="built_in">this</span>.src;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/changeBg01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/changeBg02.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/changeBg03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>换肤效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128000814229.gif" width="600" alt="百度换肤" title="百度换肤"></li></ul><h3 id="表格鼠标移入添加底色"><a href="#表格鼠标移入添加底色" class="headerlink" title="表格鼠标移入添加底色"></a>表格鼠标移入添加底色</h3><ul><li><p><font color="green">疑问(为什么可以直接从 <code>tbody</code> 获取)</font></p></li><li><p>实现效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128004400195.gif" alt="跟随换色" title="跟随换色"></li><li><p>实现原理</p><ul><li>添加一个类(用来存放鼠标滑入时修改的样式)</li><li>鼠标划入添加该类</li><li>鼠标移出设置为空</li></ul></li><li><p><code>css</code>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">           <span class="attribute">border-collapse</span>: collapse; <span class="comment">// 合并表格边框</span></span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">caption</span> &#123;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">           <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="comment">// 后期使用修改样式的类</span></span><br><span class="line">       <span class="selector-class">.changeBg</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#0099ff</span>;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">           <span class="attribute">transition</span>: all .<span class="number">5s</span> ease-in-out;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">caption</span>&gt;</span>百度换肤效果<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 5 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 5 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 5 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 5 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>实现原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素 获取的是 tbody 里面所有的行</span></span><br><span class="line">      <span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;tbody&#x27;</span>).querySelectorAll(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">          trs[i].onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="built_in">this</span>.className = <span class="string">&#x27;changeBg&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          trs[i].onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="built_in">this</span>.className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="全选按钮"><a href="#全选按钮" class="headerlink" title="全选按钮"></a>全选按钮</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128122431958.gif" alt="全选按钮案例" title="全选按钮案例"></li><li><p><code>CSS</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">          <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">          <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">          <span class="attribute">background-color</span>: rgb(<span class="number">238</span>, <span class="number">241</span>, <span class="number">238</span>);</span><br><span class="line">          <span class="attribute">color</span>: rgb(<span class="number">149</span>, <span class="number">168</span>, <span class="number">192</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">caption</span> &#123;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">          <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="number">#0099ff</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">font-weight</span>: bold;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">thead</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="number">#0099ff</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">caption</span>&gt;</span> 今日份水果菜单 <span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;all&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span> 商品分类 <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span> 价钱 <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 桃子<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> $3.99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 苹果<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> $10.99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> 迷糊桃<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> $9.99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>实现原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第一个checkbox</span></span><br><span class="line">      <span class="keyword">var</span> all = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.all&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取tbody 中 tr 下的 checkbox</span></span><br><span class="line">      <span class="keyword">var</span> _checkboxs = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;tbody&#x27;</span>).querySelectorAll(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">      all.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 点击全选后的操作</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _checkboxs.length; i++) &#123;</span><br><span class="line">              _checkboxs[i].checked = <span class="built_in">this</span>.checked;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 复选框影响全选按钮</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _checkboxs.length; i++) &#123;</span><br><span class="line">          <span class="comment">// 外层循环绑定每个复选框的点击事件</span></span><br><span class="line">          _checkboxs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _checkboxs.length; i++) &#123;</span><br><span class="line">                  <span class="comment">// 首次进入状态为不选中,当点击后将会触发一个状态 true,如果有一个 _checkboxs为选中,那么flag = false</span></span><br><span class="line">                  <span class="keyword">if</span> (!_checkboxs[i].checked) &#123;</span><br><span class="line">                      flag = <span class="literal">false</span>;</span><br><span class="line">                      <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">// 在检查完所有的 _checkboxs 都选中时,此时全选按钮的状态改为 true</span></span><br><span class="line">              all.checked = flag;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="element-getAttribute"><a href="#element-getAttribute" class="headerlink" title="element.getAttribute()"></a><code>element.getAttribute()</code></h3><ul><li><p>获取属性值</p><ul><li><code>element.属性</code> 获取属性值</li><li><code>element.getAttribute(&#39;属性&#39;)</code></li></ul></li><li><p>区别</p><ul><li><p><code>element.属性</code> 获取内置属性值(元素本身自带的属性)</p></li><li><p><code>elemetn.getAttribute(&#39;属性&#39;)</code>主要获得自定义的属性</p></li></ul></li><li><p>设置属性值</p><ul><li><code>element.属性=&#39;值&#39;</code></li><li><code>element.setAttribute(&#39;属性&#39;,&#39;值&#39;)</code></li></ul></li><li><p>特殊设置类</p><blockquote><p><code>元素.setAttribute(&#39;class&#39;,&#39;新值&#39;)</code>   // <code>class</code> 特殊 写的时 <code>class </code>不是 <code>className</code></p></blockquote></li></ul><h3 id="应用element-getAttribute-和element-setAttribute"><a href="#应用element-getAttribute-和element-setAttribute" class="headerlink" title="应用element.getAttribute()和element.setAttribute()"></a>应用<code>element.getAttribute()和element.setAttribute()</code></h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128122848312.gif" alt="选项卡功能" title="选项卡功能">  </li><li><p><code>css</code>实现</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">0%</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">           <span class="attribute">list-style</span>: none;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: purple;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">           <span class="attribute">cursor</span>: pointer;</span><br><span class="line">           <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.changeBg</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: relative;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.conetnet</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">170px</span>;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">107px</span>;</span><br><span class="line">           <span class="attribute">clear</span>: both;</span><br><span class="line">           <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">           <span class="attribute">color</span>: blue;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.conetnet</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">           <span class="attribute">display</span>: none;</span><br><span class="line">           <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;tab-ul&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是Tab-1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是Tab-2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是Tab-3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是Tab-4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是Tab-5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;conetnet&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span> Tab-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> Tab-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> Tab-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> Tab-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span> Tab-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>实现原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素 </span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参与元素：</span></span><br><span class="line"><span class="comment">            ul li content item 属性 display</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">         <span class="comment">// 获取 ul</span></span><br><span class="line">        <span class="keyword">var</span> _tabul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.tab-ul&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取 ul 下的所有 li</span></span><br><span class="line">        <span class="keyword">var</span> _lis = _tabul.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取所有的 item</span></span><br><span class="line">        <span class="keyword">var</span> content = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.conetnet&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> items = content.querySelectorAll(<span class="string">&#x27;.item&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取所有 li 的点击事件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _lis.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 给所有的 li 设置一个属性 index</span></span><br><span class="line">            _lis[i].setAttribute(<span class="string">&#x27;index&#x27;</span>, i);</span><br><span class="line">            _lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;点击中&#x27;</span>);</span><br><span class="line">                <span class="comment">// 排除其他按钮的背景颜色</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _lis.length; i++) &#123;</span><br><span class="line">                    _lis[i].className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>.className = <span class="string">&#x27;changeBg&#x27;</span>;</span><br><span class="line">                <span class="comment">// 获取自定义属性值</span></span><br><span class="line">                <span class="keyword">var</span> index = <span class="built_in">this</span>.getAttribute(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(index);</span><br><span class="line">                <span class="comment">// item 排它思想</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">                    items[i].style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 点击之后显示内容 先获取点击了那个 li ,再让对应的 item 显示为 display = block</span></span><br><span class="line">                items[index].style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><blockquote><p><code>date-</code></p></blockquote><h3 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">父节点获取: 变量名.parentNode</span><br><span class="line"></span><br><span class="line">子节点获取: 名.childNodes(包含所有节点 换行,空格 不建议)</span><br><span class="line"></span><br><span class="line">   名.children</span><br></pre></td></tr></table></figure><ul><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.ul&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> _children = _ul.children;</span><br><span class="line"><span class="built_in">console</span>.log(_children);</span><br></pre></td></tr></table></figure></li><li><p><code>children</code>使用演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/children.png" alt="children使用演示" title="children使用演示"></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取内容一节点</span></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">var</span> first = _ul.children[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">console</span>.log(first);</span><br><span class="line"></span><br><span class="line">​    <span class="comment">// 获取最后一个节点</span></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">var</span> last = _ul.children[_ul.children.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">console</span>.log(last);</span><br></pre></td></tr></table></figure><h3 id="导航栏案例实现"><a href="#导航栏案例实现" class="headerlink" title="导航栏案例实现"></a>导航栏案例实现</h3><ul><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128175057611.gif" alt="Nav 二级显示隐藏" title="Nav 二级显示隐藏"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">85px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">5s</span> ease-in-out;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">41px</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">105px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">45px</span>;</span><br><span class="line">            <span class="attribute">background</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span>&gt;<span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><blockquote><p><font color="purple" size=4>*<em>结构Ement 语法: .box&gt;ul&gt;(li&gt;a[href=#]+ul&gt;li&gt;a[href=#])<em>4</em></em> </font></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 客户服务 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联系客服 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 帮助中心 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 知识产权保护<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 规则中心 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 充值中心 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 话费充值 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 游戏充值 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> APStore充值 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 消费者权益<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 消费者告知书<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 更多 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 收藏本站 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 新浪微博 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 微信公众号 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 招商合作 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 第一个 ul</span></span><br><span class="line">      <span class="keyword">var</span> _parentUl = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.ul&#x27;</span>);</span><br><span class="line">      <span class="comment">// 获取第一个 ul 下的 li(伪数组)</span></span><br><span class="line">      <span class="keyword">var</span> lis = _parentUl.children;</span><br><span class="line">      <span class="comment">// 遍历添加鼠标移入移出事件</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">          lis[i].onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 获取第二个ul 并修改display = block</span></span><br><span class="line">              <span class="comment">//console.log(this); 1 == ul.display = &#x27;block&#x27;;</span></span><br><span class="line">              <span class="built_in">this</span>.children[<span class="number">1</span>].style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          lis[i].onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// 获取第二个 ul 并修改display = block</span></span><br><span class="line">              <span class="comment">// console.log(this);</span></span><br><span class="line">              <span class="built_in">this</span>.children[<span class="number">1</span>].style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><ul><li>效果演示</li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128190959503.gif" alt="子节点添加-留言" title="子节点添加-留言" width="450"><ul><li><p><code>css</code>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: rgb(<span class="number">66</span>, <span class="number">22</span>, <span class="number">22</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">31px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">label</span> &#123;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#09f</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">border</span>: none;</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.message</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid blue;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">597px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入留言信息&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">value</span>=<span class="string">&quot;回复留言&quot;</span>&gt;</span> 留言<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>asa<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code>原理分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// input 获取焦点时 value 文字消失</span></span><br><span class="line">        <span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        text.onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(&#x27;input 获取焦点···&#x27;);</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.value === <span class="string">&#x27;请输入留言信息&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="comment">// console.log(&#x27;走到这里了···&#x27;);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.style.border = <span class="string">&#x27;2px solid #09f&#x27;</span>;</span><br><span class="line">            <span class="comment">// 修改 value 文字样式 #ccc</span></span><br><span class="line">            <span class="built_in">this</span>.style.color = <span class="string">&#x27;#ccc&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 文字失去焦点时 value 文字显示</span></span><br><span class="line">        text.onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.value === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.value = <span class="string">&#x27;请输入留言信息&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.style.color = <span class="string">&#x27;#999&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取 button</span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="comment">// 获取 ul</span></span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.message&#x27;</span>);</span><br><span class="line">        <span class="comment">// console.log(btn.value);</span></span><br><span class="line">        btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(&#x27;点击了按钮&#x27;);</span></span><br><span class="line">            <span class="comment">// 点击按钮创建子节点 li</span></span><br><span class="line">            <span class="keyword">var</span> lis = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">            <span class="comment">// 并添加在 ul 中</span></span><br><span class="line">            lis.innerHTML = text.value;</span><br><span class="line">           <span class="comment">// 最后面显示</span></span><br><span class="line">            ul.appendChild(lis); </span><br><span class="line">            </span><br><span class="line">          <span class="comment">// 最前面显示</span></span><br><span class="line">           <span class="comment">// ul.insertBefore(lis,ul.children[0]);</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><blockquote><p><code>node.removeChild(child)</code> 该方法从<code>DOM</code>中删除一个子节点,返回删除的节点</p></blockquote><ul><li><p>疑惑: <code>addEventListener</code>监听的点击事件 <code>alert</code>依然会触发</p></li><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201128235935743.gif" alt="removeChild()" title="removeChild()"></li><li><p><code>css</code>源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">···</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> 内容一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> 内容二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span> 内容三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span> 删除节点 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>JS</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> lis = _ul.children;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"> btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (_ul.children.length == <span class="number">0</span>) &#123;</span><br><span class="line">                alert(<span class="string">&#x27;内容已经清空···&#x27;</span>);</span><br><span class="line">                <span class="built_in">this</span>.disabled = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                _ul.removeChild(_ul.children[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="复制节点"><a href="#复制节点" class="headerlink" title="复制节点"></a>复制节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">     <span class="comment">// 克隆了第一个元素  如果括号参数为 空或者为 false 则是浅拷贝,即克隆复制节点本身,不克隆里面的子节点</span></span><br><span class="line">     <span class="keyword">var</span> cloneL = _ul.children[<span class="number">0</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">     <span class="comment">// 括号为 true 深拷贝 复制标签里面的内容</span></span><br><span class="line">     _ul.appendChild(cloneL)</span><br></pre></td></tr></table></figure><h3 id="DOM-增删改查总结"><a href="#DOM-增删改查总结" class="headerlink" title="DOM-增删改查总结"></a><code>DOM</code>-<code>增删改查</code>总结</h3><ul><li><p>创建</p><ul><li><code>document.write</code></li><li><code>innerHTML</code></li><li><code>createElement</code></li></ul></li><li><p>删除</p><ul><li><code>removeChild()</code></li></ul></li><li><p>插入</p><ul><li><code>appendChild</code></li><li><code>insertBefore</code></li></ul></li><li><p>修改</p><ul><li>属性修改<code>href,scr,title</code></li><li>普通元素内容修改</li><li>表单元素修改<code>value,type,disabke</code></li><li>修改元素样式<code>style,className</code></li></ul></li></ul><h3 id="事件对象阻止默认行为"><a href="#事件对象阻止默认行为" class="headerlink" title="事件对象阻止默认行为"></a>事件对象阻止默认行为</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault(); <span class="comment">// dom 标准</span></span><br><span class="line">    </span><br><span class="line">    或者</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 传统方式 后面内容不执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="阻止事件冒泡"><a href="#阻止事件冒泡" class="headerlink" title="阻止事件冒泡"></a>阻止事件冒泡</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e.stopPropagation()</span><br><span class="line"></span><br><span class="line">e.cancelBubble = <span class="literal">true</span>; <span class="comment">// 非标准 canel 取消 冒泡</span></span><br></pre></td></tr></table></figure><h3 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h3><ul><li><p>事件委托</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事件委托也称为事件代理,在 jQuery 里面称为事件委派</span><br></pre></td></tr></table></figure></li><li><p>事件委托原理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不是每个子节点单独设置事件监听器,而是事件监听器设置在其父节点上,然后利用冒泡原理影响设置每个子结点</span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发现点击了 ul 区域会全变色，单一点击也会单一变色</span></span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> lis = ul.children;</span><br><span class="line">        ul.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">                lis[i].style.backgroundColor = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            e.target.style.backgroundColor = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"> <span class="comment">//   点谁谁变色     </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">                    lis[i].style.background = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    lis[i].style.color = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>.style.color = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">                <span class="built_in">this</span>.style.background = <span class="string">&#x27;purple&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Animation动画序列</title>
      <link href="2020/11/26/Animation%E5%8A%A8%E7%94%BB%E5%BA%8F%E5%88%97/"/>
      <url>2020/11/26/Animation%E5%8A%A8%E7%94%BB%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="Animation动画"><a href="#Animation动画" class="headerlink" title="Animation动画:"></a><code>Animation</code>动画:</h3><h3 id="波纹效果"><a href="#波纹效果" class="headerlink" title="波纹效果"></a>波纹效果</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201126232314783.gif" alt="水波效果"></p><ul><li><p>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 实心圆点 */</span></span><br><span class="line">        <span class="selector-class">.dotted</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">transform</span>: translate(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#09f</span>;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">&quot;pause&quot;</span>]</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">transform</span>: translate(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">12px</span> <span class="number">#0099ff</span>;</span><br><span class="line">            <span class="attribute">animation</span>: scalCircle <span class="number">1.2s</span> linear infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-class">.pause2</span> &#123;</span><br><span class="line">            <span class="attribute">animation-delay</span>: <span class="number">0.4s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-class">.pause3</span> &#123;</span><br><span class="line">            <span class="attribute">animation-delay</span>: <span class="number">0.8s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">@keyframes</span> scalCircle &#123;</span><br><span class="line">            <span class="selector-tag">0%</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">75%</span> &#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">                <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">100%</span> &#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">                <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dotted&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pause1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pause2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pause3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="爱心缩放"><a href="#爱心缩放" class="headerlink" title="爱心缩放"></a>爱心缩放</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201127000044412.gif" alt="爱心缩放"></p><ul><li><p>爱心实现原理</p><ul><li>两个等宽矩形</li><li>对矩形的左上、右上进行圆角变化</li><li>旋转矩形</li><li>定位重合</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">transform</span>: translate(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.boxL</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">           <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">           <span class="attribute">display</span>: inline-block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">           <span class="attribute">border-top-left-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">border-top-right-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">           <span class="attribute">transform</span>: rotate(-<span class="number">45deg</span>);</span><br><span class="line">           <span class="attribute">animation</span>: love <span class="number">1.2s</span> linear infinite;</span><br><span class="line">  </span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.boxL</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">           <span class="attribute">display</span>: inline-block;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">22px</span>;</span><br><span class="line">           <span class="attribute">border-top-left-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">border-top-right-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">           <span class="attribute">transform</span>: rotate(<span class="number">45deg</span>);</span><br><span class="line">           <span class="attribute">animation</span>: love <span class="number">1.2s</span> linear infinite;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">@keyframes</span> love &#123;</span><br><span class="line">           <span class="selector-tag">0%</span> &#123;&#125;</span><br><span class="line">  </span><br><span class="line">           <span class="selector-tag">50%</span> &#123;</span><br><span class="line">               <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">               <span class="attribute">height</span>: <span class="number">160px</span>;</span><br><span class="line">               <span class="attribute">left</span>: <span class="number">44px</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           <span class="selector-tag">100%</span> &#123;</span><br><span class="line">               <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">               <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">               <span class="attribute">left</span>: <span class="number">22px</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxL&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="六边形实现背景填充"><a href="#六边形实现背景填充" class="headerlink" title="六边形实现背景填充"></a>六边形实现背景填充</h3><ul><li>实现三个等宽矩形</li><li>旋转</li><li>取消多余边框</li><li>暂时未能实现图片填充(后续补充)</li></ul><h3 id="打字机效果"><a href="#打字机效果" class="headerlink" title="打字机效果"></a>打字机效果</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/write.gif" alt="CSS3实现打字机动画"></p><ul><li><p>实现原理</p><ul><li><p>文字属性调整获取动画该进行的步进值(<code>steps()</code>)</p></li><li><p><code>white-space: norwap;</code></p></li><li><p><code>overflow: hidden;</code></p></li><li><p>对容器盒子宽度初始为<code>0</code></p></li><li><p>最终显示文字大小宽度即为实现打字机动画</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">           <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">           <span class="attribute">overflow</span>: hidden;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#0099ff</span>;</span><br><span class="line">           <span class="attribute">animation</span>: write <span class="number">4s</span> steps(<span class="number">7</span>) forwards;</span><br><span class="line">       &#125;</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">@keyframes</span> write &#123;</span><br><span class="line">           <span class="selector-tag">0%</span> &#123;</span><br><span class="line">               <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">    </span><br><span class="line">           <span class="selector-tag">100%</span> &#123;</span><br><span class="line">               <span class="attribute">width</span>: <span class="number">85px</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   我是打字机效果</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="奔跑的小熊"><a href="#奔跑的小熊" class="headerlink" title="奔跑的小熊:"></a>奔跑的小熊:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/bear.gif" alt="奔跑的小熊"></p><ul><li><p>实现原理</p><ul><li>先获取一张动画序列图</li><li>使用该序列图</li><li>设定动画的<code>steps()</code></li><li>设定<code>background-position</code></li></ul></li><li><p>什么是<code>background-position</code>？</p><blockquote><p><strong><code>background-position</code></strong> 为每一个背景图片设置初始位置。 这个位置是相对于由 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-origin"><code>background-origin</code></a> 定义的位置图层的,(引用<code>MDN</code>)</p></blockquote></li><li><p>怎么理解<code>background-position</code></p><blockquote><p><code>-200px</code>（将图片相对容器左移200px，这意味着图片右部分的<code>100px</code>内容将出现在容器中）(引用<code>MDN</code>)</p></blockquote></li><li><p><code>transform: translate()</code>不能实现</p></li><li><p>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">transform</span>: translate(<span class="number">0</span>, -<span class="number">50%</span>);</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">           <span class="attribute">background</span>: url(<span class="string">&#x27;img/bear.png&#x27;</span>) no-repeat;</span><br><span class="line">           <span class="attribute">animation</span>: bear <span class="number">1s</span> steps(<span class="number">8</span>) infinite, move <span class="number">3s</span> forwards;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">@keyframes</span> bear &#123;</span><br><span class="line">           <span class="selector-tag">0%</span> &#123;</span><br><span class="line">               <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           <span class="selector-tag">100%</span> &#123;</span><br><span class="line">               <span class="attribute">background-position</span>: -<span class="number">1600px</span> <span class="number">0</span>;</span><br><span class="line">               <span class="attribute">transform</span>: translate(-<span class="number">50%</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">@keyframes</span> move &#123;</span><br><span class="line">           <span class="selector-tag">0%</span> &#123;</span><br><span class="line">               <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">           <span class="selector-tag">100%</span> &#123;</span><br><span class="line">               <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3D-转换"><a href="#3D-转换" class="headerlink" title="3D 转换"></a>3D 转换</h3><p><code>transfom:translate3d(x,y,z)</code></p><blockquote><p>不可省略 <code>x,y,z</code>，没有为 <code>0</code></p></blockquote><ul><li><p>三维坐标系</p><blockquote><p>三位坐标系其实就是指立体空间,立体空间是由3个轴共同组成</p></blockquote><ul><li><p>X轴: 水平向右 <font color="red" fontWeight="bold">X右边是正值,左边是负值</font></p></li><li><p>Y轴: 垂直向下 <font color="red">Y下面是正值,上面是负值</font></p></li><li><p>Z轴: 垂直屏幕 <font color="red">Z外面是正值,往里面是负值</font></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/20201127111423.png" width="400"></li></ul></li><li><p>透视(<code>perspective</code>)</p><ul><li>距离视觉点越近的就在电脑平面成像越大,越远成像越小</li><li>透视的单位是像素</li></ul></li><li><p>透视写在被观察元素的父盒子上面的</p><ul><li><code>d</code>就是视距,视距就是一个距离人的眼睛到屏幕的距离</li><li><code>z</code>就是z轴,物体距离屏幕的距离,z轴越大(正值)我们看到的物体就越大 （<code>可以组略理解为你自己吧电脑搬在自己眼前看东西,Z轴离我们很近,物体自然变大</code>）</li></ul></li></ul><h3 id="3D旋转"><a href="#3D旋转" class="headerlink" title="3D旋转"></a>3D旋转</h3><ul><li><p><code>transform:rotate3d(x,y,z,deg)</code>对角线旋转</p></li><li><p><code>transform:rotateX(deg)</code></p></li><li><p><code>transform:rotateY(deg)</code></p></li><li><p><code>3D效果</code></p><ul><li><code>transform-style</code></li><li><code>transform-style:preserve-3d</code> 子元素开启立体空间(父级元素添加)</li></ul></li><li><p>在没有添加<code>transform-style</code>属性下旋转子元素<code>Y</code>轴时显示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/rotateY.png" width="400"></li><li><p>添加<code>transform-style: preserve-3d</code>后</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/prever-3d.png" width="400" title="只是添加给子盒子的父元素" alt="只是添加给子盒子的父元素"></li><li><p>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">            <span class="attribute">transition</span>: all <span class="number">2s</span>;</span><br><span class="line">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: rotateY(<span class="number">60deg</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: purple;</span><br><span class="line">            <span class="attribute">transform</span>: rotateX(<span class="number">60deg</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="圆圈3D旋转"><a href="#圆圈3D旋转" class="headerlink" title="圆圈3D旋转"></a>圆圈3D旋转</h3><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/circle.gif" alt="圆圈翻转" title="圆圈反转"><ul><li><p>实现原理</p><ul><li>两个<code>div</code>添加圆角属性</li><li>对子元素的父盒子添加<code>transform-style:preserve-3d;  perspective: 500px;</code></li><li>对父元素添加<code>hover</code>效果</li></ul></li><li><p>实现源码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">           <span class="attribute">perspective</span>: <span class="number">500px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: relative;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">300px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">           <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">  </span><br><span class="line">           <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">           <span class="attribute">transform</span>: rotateY(<span class="number">180deg</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: absolute;</span><br><span class="line">           <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">           <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">12px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: purple;</span><br><span class="line">           <span class="attribute">transform</span>: rotateY(<span class="number">180deg</span>);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>html</code>结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>人生苦短,我学编程<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>我在哔哩哔哩所学总结<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="旋转木马"><a href="#旋转木马" class="headerlink" title="旋转木马"></a>旋转木马</h3><ul><li>实现原理<ul><li>定位 + 3D旋转</li><li>旋转度数 = 360 / 图片数量</li><li>添加动画</li><li>景深效果</li><li><code>transform-style: preserve-3d</code>添加给子元素的父级</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript实战练习分析</title>
      <link href="2020/11/26/JavaScript%E5%AE%9E%E6%88%98%E7%BB%83%E4%B9%A0%E5%88%86%E6%9E%90/"/>
      <url>2020/11/26/JavaScript%E5%AE%9E%E6%88%98%E7%BB%83%E4%B9%A0%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="全屏轮播图"><a href="#全屏轮播图" class="headerlink" title="全屏轮播图"></a>全屏轮播图</h3><h3 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图:"></a>轮播图:</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#Slider</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">27px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80vh</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sContent</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.buttons</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity .<span class="number">4s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 左右按钮*/</span></span><br><span class="line"><span class="selector-id">#prev</span>,</span><br><span class="line"><span class="selector-id">#next</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: translateY(-<span class="number">50%</span>);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: rgb(<span class="number">221</span>, <span class="number">101</span>, <span class="number">101</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#prev</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#next</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(-<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#next</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#prev</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#prev</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-id">#next</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: translate(-<span class="number">50%</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* background-image */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&#x27;../access/img/Slider/01.jpg&#x27;</span>) no-repeat center center/cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&#x27;../access/img/Slider/02.jpg&#x27;</span>) no-repeat center center/cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&#x27;../access/img/Slider/03.jpg&#x27;</span>) no-repeat center center/cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&#x27;../access/img/Slider/04.jpg&#x27;</span>) no-repeat center center/cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&#x27;../access/img/Slider/01.jpg&#x27;</span>) no-repeat center center/cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* centont*/</span></span><br><span class="line"><span class="selector-class">.slider</span> <span class="selector-class">.sContent</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">8</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-class">.current</span> <span class="selector-class">.sContent</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: translateX(<span class="number">600px</span>);</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.7s</span> ease-in-out <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;Slider&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider current&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sContent&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>第一页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        1924年，安特生(瑞典地质学家兼考古学家)在甘肃临洮马家窑村发现一处远古文化遗址，</span><br><span class="line">        定名为仰韶文化马家窑期，在当地收集了大量的代表华夏文化的彩陶器皿。个沉寂几千年的远古文化，</span><br><span class="line">        第一次以马家窑期之名出现在世人面前！</span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sContent&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>第二页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        1924年，安特生(瑞典地质学家兼考古学家)在甘肃临洮马家窑村发现一处远古文化遗址，</span><br><span class="line">        定名为仰韶文化马家窑期，在当地收集了大量的代表华夏文化的彩陶器皿。个沉寂几千年的远古文化，</span><br><span class="line">        第一次以马家窑期之名出现在世人面前！</span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    ···</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;正在加载 Slider.js·········&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sliders = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.slider&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> prev = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#prev&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> next = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#next&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nextSlider = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// get current class</span></span><br><span class="line">  <span class="keyword">const</span> current = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.current&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (current.nextElementSibling) &#123;</span><br><span class="line">    <span class="comment">// add current to next sibling</span></span><br><span class="line">    current.nextElementSibling.classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// add current to start</span></span><br><span class="line">    sliders[<span class="number">0</span>].classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// clear current</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> current.classList.remove(<span class="string">&quot;current&quot;</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prevSlider = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// get current class</span></span><br><span class="line">  <span class="keyword">const</span> current = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.current&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (current.previousElementSibling) &#123;</span><br><span class="line">    <span class="comment">// add current to next sibling</span></span><br><span class="line">    current.previousElementSibling.classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// add current to start</span></span><br><span class="line">    sliders[sliders.length - <span class="number">1</span>].classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// clear current</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> current.classList.remove(<span class="string">&quot;current&quot;</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// click Event</span></span><br><span class="line">next.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  nextSlider();</span><br><span class="line">&#125;);</span><br><span class="line">prev.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  prevSlider();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  nextSlider();</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标移入移除</span></span><br><span class="line"><span class="keyword">var</span> rmTimer = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#Slider &quot;</span>);</span><br><span class="line">rmTimer.addEventListener(<span class="string">&quot;mouseenter&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 鼠标移入清除 定时器</span></span><br><span class="line">  <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">  <span class="comment">// 清除定时器变量</span></span><br><span class="line">  timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;鼠标移入,清除定时器···&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">rmTimer.addEventListener(<span class="string">&quot;mouseleave&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 鼠标移出开启定时器</span></span><br><span class="line">  timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    nextSlider();</span><br><span class="line">  &#125;, <span class="number">2000</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;鼠标移入,开启定时器···&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>轮播图总结:</p><ul><li><p>主要通过 css 中<code>background:url()</code> 存放图片路径</p></li><li><p>添加鼠标移入移出事件</p></li><li><p>添加<code>定时器应用</code></p></li><li><p>掌握 <code>position,transition</code>使用</p></li></ul></blockquote><blockquote><p>内容来源依据: <a href="https://www.bilibili.com/video/BV1LV411z72g?p=22">https://www.bilibili.com/video/BV1LV411z72g?p=22</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rem的使用</title>
      <link href="2020/11/26/Rem%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/26/Rem%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="rem基础"><a href="#rem基础" class="headerlink" title="rem基础"></a>rem基础</h3><ul><li><p><code>rem</code>单位:</p><blockquote><p><code>rem(root em)</code>是一个相对单位,类似于<code>em</code>，<code>em</code>是父元素字体的大小</p><p><font color ="red">不同的是 <code>rem</code>的基准的相对于<code>html</code> 元素的<code>字体大小</code></font></p><p><code>Eg.</code></p><ul><li><p>根元素(<code>html</code>) 设置<code>font-size=12px</code>，非根元素<code>width: 2rem</code>,则换</p><p>成 <code>px</code>就是<code>24px</code></p></li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* em 相对于父元素的字体大小来说 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="comment">/* 14 * 20 = 280px */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="comment">/* 14 * 20 = 280px */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> a <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>图解</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/em.png" width="400" alt="加载中···" title="图解em"></li></ul><h3 id="Less预处理"><a href="#Less预处理" class="headerlink" title="Less预处理"></a><code>Less</code>预处理</h3><ul><li><p>基本使用</p><ul><li><p>安装<code>node</code></p><ul><li><p>检测 <code>node</code>安装</p></li><li><p>下载地址: <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><blockquote><p><code>node -v</code> 输出版本号即为正确安装</p></blockquote></li></ul></li><li><p>安装<code>Less</code></p><ul><li><p><code>Less</code>安装</p><blockquote><p><code>npm install -g less</code></p></blockquote></li><li><p>监测<code>Less</code>安装`</p><blockquote><p><code>lessc -v</code></p><ul><li><p>输出类似如下信息即为正确安装：</p><p><code>lessc 3.12.2 (Less Compiler) [JavaScript]</code></p></li></ul></blockquote></li></ul></li><li><p>(个人使用感觉比插件方便,推荐)客户端解析工具<code>Koala</code>下载</p><ul><li><code>Koala下载链接:</code></li><li><a href="http://koala-app.com/index-zh.html">http://koala-app.com/index-zh.html</a></li></ul><blockquote><p>koala是一个前端预处理器语言图形编译工具，支持<code>Less、Sass、Compass、CoffeeScript，</code>帮助<code>web开发者</code></p><p>更高效地使用它们进行开发。跨平台运行，完美兼容<code>windows、linux、mac。</code></p></blockquote></li></ul></li><li><p>快速使用<code>Less</code></p><ul><li><p>变量定义与使用</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@变量名: 值;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Eg</span>. @<span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">5</span>)</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li><li><p><code>Less</code>变量使用</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>Less</code><font color="green">可以嵌套书写,并在解析后携带最外层<code>ID或者类名</code>,以解决在不同人员之间的因变量名而引起的问题</font></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Less.png" title="Less使用" alt="图片加载中···"></li></ul></li><li><p><code>&amp;</code>在<code>Less</code>中的使用</p><ul><li><p><code>a:hover</code></p></li><li><p>交集、伪类、为元素选择器</p><ul><li><p>内层选择器前面没有<code>&amp;</code>符号,则它被解析为父选择器的后代</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Less:</span><br><span class="line">    a&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">        <span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">css</span>解析:</span><br><span class="line">    <span class="selector-id">#app</span> <span class="selector-tag">a</span> (出现了空格,被解析为父选择器的后代)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: blue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>如果有<code>&amp;</code>符号,它就解析为父元素自身或父元素的伪类</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> Less:</span><br><span class="line">a&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">CSS</span>解析:</span><br><span class="line">    <span class="selector-id">#app</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: blue; <span class="comment">// 不在出现空格</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><code>Less</code>运算</p><ul><li><p><code>+</code> <code>-</code> <code>*</code> <code>/</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Less:</span><br><span class="line">    .header &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span> + <span class="number">50</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span> - <span class="number">20</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span>*<span class="number">20</span> solid red;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">CSS</span>解析:</span><br><span class="line">    <span class="selector-id">#app</span> <span class="selector-class">.header</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">180px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">20px</span> solid <span class="number">#ff0000</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><font color="red" size="4">两个数参与运算,如果两个数都有单位,而且不一样的单位,最后的结果以前面的参数的单位为准</font></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彩陶实战</title>
      <link href="2020/11/21/%E5%BD%A9%E9%99%B6%E5%AE%9E%E6%88%98/"/>
      <url>2020/11/21/%E5%BD%A9%E9%99%B6%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Gansu-University-Painted-Pottery-Network"><a href="#Gansu-University-Painted-Pottery-Network" class="headerlink" title="Gansu-University-Painted-Pottery-Network"></a>Gansu-University-Painted-Pottery-Network</h1><p>中文名:  <a href="javascript:void(0)">甘肃大学生彩陶网</a></p><blockquote><p><a href="https://lovobin.github.io/xiajiaProj/">https://lovobin.github.io/xiajiaProj/（布局展示）</p></blockquote><blockquote><p> <code>ICO在线制作推荐:</code> <a href="https://tool.lu/favicon/">https://tool.lu/favicon/</a></p><p> ​    使用方法:  </p><pre><code>     + 上传图片,剪裁     + 点击下载,跳转后右击另存为(`*.ico`文件)</code></pre></blockquote><h3 id="2020年-11月-18日"><a href="#2020年-11月-18日" class="headerlink" title="2020年-11月-18日:"></a>2020年-11月-18日:</h3><blockquote><p>完成 Header-logo Nav</p><p>背景颜色改动</p><p>图片改动</p><p>文本信息改动</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201119015723538.gif#pic_center" alt="完成 Header-logo Nav"></p><h3 id="2020年-11月-19日；"><a href="#2020年-11月-19日；" class="headerlink" title="2020年-11月-19日；"></a>2020年-11月-19日；</h3><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">应用: Animation</span><br><span class="line"></span><br><span class="line">布局: Flex</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">图片相对垂直居中:</span><br><span class="line">    position: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br></pre></td></tr></table></figure><ul><li><p>整体效果预览</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="F:/独研/access/gif/2020-11-19.gif" alt="布局无坍塌"></p></li></ul><h3 id="2020年11月-20日"><a href="#2020年11月-20日" class="headerlink" title="2020年11月-20日:"></a>2020年11月-20日:</h3><ul><li><p>修复搜索框显示问题</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/searchBtn.png" alt="最终使用"></p></li><li><p>修复<code>card</code>背景颜色显示</p><ul><li><p>采用<code>float</code>布局</p></li><li><p>添加<code>css3 animation</code></p></li><li><p>使用linear-gradient</p><ul><li><p><code> linear-gradient()</code>推荐:</p><blockquote><p>渐变颜色获取:</p><p><a href="https://webgradients.com/">https: //webgradients.com/</a></p><p><a href="https://gradient.shapefactory.co/">https: //gradient.shapefactory.co/</a></p></blockquote></li><li><p>原图:</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/fixCard.png" alt="背景色未修复前"></p></li><li><p>修复后(维护中······)</p></li></ul></li></ul></li><li><p>准备轮播图实现</p><ul><li><p>存在一条 <code>bug</code></p><ul><li><p><code>bug</code>描述:  在判断了最后一张图片的情况下,<code>next</code>事件依然显示一张空白背景(已解决稍微有点缺陷,在提升后修复)</p></li><li><p><code>js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;正在加载 Slider.js·········&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sliders = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.slider&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> prev = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#prev&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> next = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#next&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nextSlider = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// get current class</span></span><br><span class="line">    <span class="keyword">const</span> current = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.current&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (current.nextElementSibling) &#123;</span><br><span class="line">        <span class="comment">// add current to next sibling</span></span><br><span class="line">        current.nextElementSibling.classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// add current to start</span></span><br><span class="line">        sliders[<span class="number">0</span>].classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// clear current</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> current.classList.remove(<span class="string">&quot;current&quot;</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prevSlider = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// get current class</span></span><br><span class="line">    <span class="keyword">const</span> current = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.current&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (current.previousElementSibling) &#123;</span><br><span class="line">        <span class="comment">// add current to next sibling</span></span><br><span class="line">        current.previousElementSibling.classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// add current to start</span></span><br><span class="line">        sliders[sliders.length - <span class="number">1</span>].classList.add(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// clear current</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> current.classList.remove(<span class="string">&quot;current&quot;</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// click Event</span></span><br><span class="line">next.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    nextSlider();</span><br><span class="line">&#125;);</span><br><span class="line">prev.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    prevSlider();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    nextSlider();</span><br><span class="line">&#125;, <span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标移入移除</span></span><br><span class="line"><span class="keyword">var</span> rmTimer = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#Slider &quot;</span>);</span><br><span class="line">rmTimer.addEventListener(<span class="string">&quot;mouseenter&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 鼠标移入清除 定时器</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    <span class="comment">// 清除定时器变量</span></span><br><span class="line">    timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;鼠标移入,清除定时器···&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">rmTimer.addEventListener(<span class="string">&quot;mouseleave&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 鼠标移出开启定时器</span></span><br><span class="line">    timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        nextSlider();</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;鼠标移入,开启定时器···&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>添加新布局</p><ul><li>考虑瀑布流(放弃选择)</li><li>添加<code>footer</code>页脚,已完成 !</li></ul></li><li><p>暂时完成首页布局</p></li></ul><blockquote><p>疑问: <code>float 中</code>未使用 清除浮动，什么时候使用清除浮动(····)</p></blockquote><h3 id="2020年11月21日"><a href="#2020年11月21日" class="headerlink" title="2020年11月21日:"></a>2020年11月21日:</h3><ul><li><p>添加第一个子页</p><ul><li><p>子页新布局考虑</p></li><li><p>整体颜色更改</p></li><li><p>动画内容更改</p></li><li><p>添加 <code>JS</code>事件</p></li><li><p>添加时间倒计时布局(考虑中····)</p></li><li><p><code>H5</code>新标签的使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span>  <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"></span><br><span class="line">figure:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span> <span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"></span><br><span class="line">figcaption:</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>css3 :hover</code>理解与掌握使用</p><ul><li><p><code>css2</code>选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element1 + element2 选择器匹配出现在 element 后面的临近的 element2</span><br></pre></td></tr></table></figure></li><li><p><code>css3</code>选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element1 ~ element2 选择器匹配出现在 element1 后面的 element2</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>box-shadow</code>理解使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: offset-x offset-y blur spread color position;</span><br></pre></td></tr></table></figure></li><li><p>翘边阴影的使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: skew(角度); <span class="comment">// skew() 扭曲</span></span><br></pre></td></tr></table></figure></li><li><p><code>linear-gradient()</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: linear-gradient();</span><br></pre></td></tr></table></figure></li><li><p>添加新属性<code>filter</code>的使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">filter</span>: sepia(.<span class="number">2</span>) brightness(<span class="number">1</span>) contrast(<span class="number">1.3</span>);</span><br><span class="line"></span><br><span class="line">sepia: 将图像转换为深褐色。值定义转换的比例。值为<span class="number">100%</span>则完全是深褐色的，值为<span class="number">0%</span>图像无变化。值在<span class="number">0%</span>到<span class="number">100%</span>之间，则是效果的线性乘子。若未设</span><br><span class="line">置，值默认是<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">brightness: 给图片应用一种线性乘法，使其看起来更亮或更暗。如果值是<span class="number">0%</span>，图像会全黑。值是<span class="number">100%</span>，则图像无变化。其他的值对应线性乘数效果。值超</span><br><span class="line"></span><br><span class="line">过<span class="number">100%</span>也是可以的，图像会比原来更亮。如果没有设定值，默认是<span class="number">1</span>。</span><br><span class="line"></span><br><span class="line">contrast: 调整图像的对比度。值是<span class="number">0%</span>的话，图像会全黑。值是<span class="number">100%</span>，图像不变。值可以超过<span class="number">100%</span>，意味着会运用更低的对比。若没有设置值，默认是<span class="number">1</span>。</span><br></pre></td></tr></table></figure></li><li><p>首页局部锚链接添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    彩陶文化: Painted pottery culture</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    ID简称: ppc</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>学术展览(<code>id: A-e</code>)</li><li>彩陶文化(<code>id: ppc</code>)</li><li>联系我们(<code>id: email</code>)</li></ul></li><li><p>添加返回顶部与返回首页功能</p><ul><li><p>鼠标滚轮事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取返回顶部按钮</span></span><br><span class="line"><span class="keyword">var</span> gotop = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.gotop&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取 cardShow 的偏移量</span></span><br><span class="line"><span class="keyword">var</span> cardShow = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#cardShow&#x27;</span>);</span><br><span class="line"><span class="comment">// 当 cardShow 出现时,返回顶部按钮显示</span></span><br><span class="line"><span class="keyword">var</span> cardShowTop = cardShow.offsetTop;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset &gt;= cardShowTop) &#123;</span><br><span class="line">        gotop.style.opacity = <span class="number">1</span>;</span><br><span class="line">        gotop.style.transition = <span class="string">&quot;all .5s ease-in-out&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        gotop.style.opacity = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取返回顶部 gotop 按钮点击事件</span></span><br><span class="line">gotop.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// window.scroll(0, 0); 无动画状态</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 添加动画函数:</span></span><br><span class="line"><span class="comment">     *  obj： window</span></span><br><span class="line"><span class="comment">     *  target: 返回顶部(0)</span></span><br><span class="line"><span class="comment">     *  callback 暂时不需要</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    animation(<span class="built_in">window</span>, <span class="number">0</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>动画函数封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装动画函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">obj, target, callback</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * object: 目标对象</span></span><br><span class="line"><span class="comment">    * target: 目标位置</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(obj.timer)</span><br><span class="line">    obj.timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> step = (target - <span class="built_in">window</span>.pageYOffset) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset == target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画 即: 停止定时器</span></span><br><span class="line">            <span class="built_in">clearInterval</span>(obj.timer);</span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  水平移动 obj.style.left = window.pageYOffset + step + &#x27;px&#x27;;</span></span><br><span class="line">        <span class="built_in">window</span>.scroll(<span class="number">0</span>, <span class="built_in">window</span>.pageYOffset + step);</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="2020年11月22日"><a href="#2020年11月22日" class="headerlink" title="2020年11月22日:"></a>2020年11月22日:</h3><ul><li>添加第二个子页</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo探索</title>
      <link href="2020/11/18/Hexo%E6%8E%A2%E7%B4%A2/"/>
      <url>2020/11/18/Hexo%E6%8E%A2%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right, please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content">  <script id="hbeData" type="hbeData" data-hmacdigest="0a67472e914b1a4bbff0e3da95d84e112e7afc427976f81f8e4684aba39605fb">3a325dc39ad404746d7c8526f2f7a082308106497415bc0013eb1e405be1ae44e7ae612af5e6fec1064d0d17a8d58f68ab60ea22e9a353643cf1564b1d9bb5807ffd60be10e6b11071fbf5fc216deeffb77952ddd9c51e09a7bc7a067fedd0f6c16ef55c0495e3834c51cb2876407b1907025b73729422601e82fbb788671e38ebb732d76aa9025c8f08c68a8281185ed3ba469a64584838da6ac0164f9308673331040d1ee8a919f6619871d9b40181872f55d5b2ab2a2f411c085ba1a464d0a85d8debaa845ef70e9de0e32bb1b1b431bd6b2a5c30e5acf73ea0cdec2e72755287e49ac4c1cbd5479bcecffb2070c12f03ee16ece6ff0fec1e55fbd7449343e735955c3cf2208ed53a481880695b4bd1ce33364a06febd26855fe5c5d0e8d1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hello, password is required here</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章加密</title>
      <link href="2020/11/18/Hexo%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
      <url>2020/11/18/Hexo%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right, please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content">  <script id="hbeData" type="hbeData" data-hmacdigest="b68944653994c11895692935a86c7b26eb7ee6edb7e67f0a965854d0e1e55a83">3a325dc39ad404746d7c8526f2f7a082308106497415bc0013eb1e405be1ae44c06c4d4e02693327ae078cea36a358f78fb4c9608278998ab99211e63d9eeb09321f7ea4264fa0a142cd9c254cb47dade8be6e2a14e0d17e56d668486a2f44079b014fd8acd8f17270927977abf5e54fee783a24e2117f6384caa9000c146fa52ad9163ea897ae600b1f38c567cd78468363c3d6c45ed2b47b7c4928edae62bb135881584d41ce5265c3c1926feb4ef306bfabb4eef1c8423459718a43302d95ab6bbd34ca974679e5984ac1cb328fa7d599be5605bda067cde5937b262c8cd79707505fdac5c58c4c08ead44617a3fb629035f31d591b12603b74871de4664fe01541127227ccefc6b5264216d04b95ad393ed770757ff382e84bdf37e03d0df600d64caeade9fdf8681bc8f9d3dc63cb9c7fa31cc5759d6ba34ffa7d8a42f3244fe4db3e8cd8d68599d2e24b7ac28aa90b3f2df9038329835aa7a85dff429809cfd4175463533a6290f3ae0ee80423f9915e6ebe4f21a4e6301fa51df9f9fead5bf0c9326dfd9d10c8e5a2ef1feb6ab78c2dd3f5439022306a6d7af20ba873</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hello, password is required here</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源网站整合</title>
      <link href="2020/11/16/%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99%E6%95%B4%E5%90%88/"/>
      <url>2020/11/16/%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h3 id="无版权图片网"><a href="#无版权图片网" class="headerlink" title="无版权图片网:"></a>无版权图片网:</h3><blockquote><p>高清无版权图片，个人和商业用途免费： <a href="https://www.colorhub.me/">https://www.colorhub.me/</a><br>互联网上可免费使用的图像的来源： <a href="https://unsplash.com/">https://unsplash.com/</a></p></blockquote><h3 id="技能提升类"><a href="#技能提升类" class="headerlink" title="技能提升类:"></a>技能提升类:</h3><blockquote><p>在线打字练习: <a href="https://www.keybr.com/">https://www.keybr.com/</a></p><p>git在线图解练习与实战: <a href="https://learngitbranching.js.org/?locale=zh_CN">https://learngitbranching.js.org/?locale=zh_CN</a></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitStu.png" width="600"><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201117113324403.gif#pic_center" alt="演示"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态资源网站部署</title>
      <link href="2020/11/15/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/"/>
      <url>2020/11/15/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="Git下载与安装"><a href="#Git下载与安装" class="headerlink" title="Git下载与安装:"></a>Git下载与安装:</h3><ul><li><p><code>git</code>下载</p><blockquote><p><a href="https://git-scm.com/">点击进入主页下载 git </a>    </p><p>版本: <code>Git-2.29.2.2-64-bit</code></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitDownload.png"></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitInstall.png" alt="点击后直接为下载"></p></li><li><p>修改路径  点击<code>next</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitC.png" width="400" alt="路径修改"></li><li><p>点击<code>next</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitN.png" width="400" alt="点击next"></li><li><p>点击<code>next</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/SecondNext.png" width="400" alt="点击next"></li><li><p>选择中间项</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/centerGit.png" width="400" alt="中间项"></li><li><p>一路<code>next</code>（仅供参考）</p></li><li><p>这一步只勾选第二项(<code>View Release Notes</code>)</p></li><li><p>右击 点击 <code>git bash here</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/finishGit.png" width="400"></li><li><p><code>git bash</code>字体配置</p></li><li><p>点击上图中白色边框选择红色框信息</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Options.png" width="400"></li><li><p><code>git bash</code>主题选择</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitTheme.png" width="400"></li><li><p>字体</p><ul><li><p>按住 <code>ctrl</code>鼠标滚轮向下或向上滚动进行字体放大缩小</p></li><li><p>点击<code>Text</code>,完成下图操作</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/ApplyG.png" width="400"></li></ul></li><li><p>最后点击<code>Save</code>窗口自动关闭</p></li><li><p>验证<code>git</code>版本信息</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></blockquote></li><li><p>显示如下效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitVersion.png" width="400"></li><li><p><code>Windows</code>环境变量检查 </p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">windows + r : 键入: cmd</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p>正确显示如下效果即为成功</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/WindowsGitVersion.png" width="400"></li></ul><h3 id="Github配置："><a href="#Github配置：" class="headerlink" title="Github配置："></a><code>Github</code>配置：</h3><ul><li><p>进入<code>github主页</code>注册或登录</p><blockquote><p><a href="https://github.com/"> Github 请点击</a></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/SignGithub.png" width="600" alt="标注仅为了快速完成"></li></ul><h3 id="首先在本地创建ssh-key"><a href="#首先在本地创建ssh-key" class="headerlink" title="首先在本地创建ssh key:"></a>首先在本地创建<code>ssh key</code>:</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure><p>输入邮箱后按下回车,会在下图蓝框位置出现配置文件</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/configGithub.png" width="600"><blockquote><p>进入该目录下(<code>C:\Users\你的电脑用户名\.ssh</code>), 打开<code>id_rsa.pub</code>，复制里面的<code>key</code></p></blockquote><ul><li><p>返回 <code>github</code>,完成如下操作</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/githubKey.png" width="800"></li><li><p>验证是否成功</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">如果是第一次的会提示是否<span class="built_in">continue</span>，输入yes就会看到:</span><br><span class="line"></span><br><span class="line">You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。 </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>接下来我们要做的就是把本地仓库传到<code>github</code>上去，在此之前还需要设置<code>username</code>和<code>email</code>，因为<code>github</code>每次<code>commit</code>都会记录他们。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git config --global user.name <span class="string">&quot;your name  改这里&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;your_email@youremail.com 改这里&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建仓库</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/NewRe.png"></p></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/NewRepo.png" width="500"><ul><li><p>命令粗略解释</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitInfo.png"></li><li><p>选择带有<code>index.html</code>文件的进行点击,没有则不配置</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/settings.png"></li><li><p>下拉选择<code>Github Pages</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/githubPages.png"></li><li><p>点击<code>Save</code></p></li><li><p>刷新再次进入该页面即可配置静态网页资源</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题下载与使用</title>
      <link href="2020/11/13/Butterfly%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/13/Butterfly%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1. 进入 Butterfl git 主题页</span><br><span class="line"></span><br><span class="line">https://github.com/jerryc127/hexo-theme-butterfly -- 操作链接</span><br><span class="line"></span><br><span class="line">2. 阅读 README.md </span><br><span class="line"></span><br><span class="line">3. 主要进行如下操作:</span><br><span class="line"></span><br><span class="line">克隆稳定版本: git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line">安装: npm i hexo-theme-butterfly (使用 dos 窗口下载,别用gitbash here 的 Terminology)</span><br><span class="line"></span><br><span class="line">     npm install hexo-renderer-pug hexo-renderer-stylus( 保此错误使用 If you don<span class="string">&#x27;t have pug &amp; stylus renderer, try this，建议提前安装，后续不会出现)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">修改博客根目录下的: _config.yml</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">theme: butterfly</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4. 执行 Hexo 命令:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hexo clean</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hexo g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hexo d</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="Butterfly预览"><a href="#Butterfly预览" class="headerlink" title="Butterfly预览:"></a>Butterfly预览:</h3><ul><li><p><code>Butterfly </code>推荐理由</p><blockquote><ul><li>支持<code>markdown</code>代码语法高亮,模块舒适</li></ul></blockquote><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Butterfly.png" width="700"></p><blockquote><ul><li>支持夜间模式</li></ul></blockquote><blockquote><ul><li>支持分页，无需个人配置</li></ul></blockquote><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/fenye.png"></p><blockquote><ul><li>全屏阅读</li></ul></blockquote><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Emax.png" alt="全屏阅读"></p></li><li><p>代码块配置(其余参数没必要尝试，效果没有)</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_theme: <span class="built_in">mac</span>(推荐) / mac light</span><br></pre></td></tr></table></figure></blockquote><ul><li><p><code>mac</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/mac.png" alt="highlight_theme: mac"></p></li><li><p><code>mac light</code></p><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/macLight.png" width="700"></p></li></ul></li><li><p>友情链接显示效果极度舒服</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/friends.png" width="700"></li></ul><h3 id="背景修改"><a href="#背景修改" class="headerlink" title="背景修改:"></a>背景修改:</h3><blockquote><p>主题下的 <code>_cconfig.yml</code></p><p><code>index_img:</code></p><p>​    ·····</p></blockquote><p>​    </p><h3 id="文章左或右图片显示"><a href="#文章左或右图片显示" class="headerlink" title="文章左或右图片显示:"></a>文章左或右图片显示:</h3><blockquote><p>文章顶部添加:</p><p>​    top_img:</p><p>​    cover: 图片链接</p></blockquote><h3 id="修改文章封皮显示图片"><a href="#修改文章封皮显示图片" class="headerlink" title="修改文章封皮显示图片:"></a>修改文章封皮显示图片:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/topImgC.png" alt="图片配置"></p><h3 id="中文化侧边栏"><a href="#中文化侧边栏" class="headerlink" title="中文化侧边栏:"></a>中文化侧边栏:</h3><ul><li><p>在根目录下的<code> _config.yml</code> 文件中:</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/siderbar.png" alt="中文化侧边栏"></p><h3 id="github代码提交集成图的添加"><a href="#github代码提交集成图的添加" class="headerlink" title="github代码提交集成图的添加:"></a>github代码提交集成图的添加:</h3><blockquote><p><a href="https://github.com/Zfour/Butterfly-gitcalendar">效果出处与配置方案</a>(请点击)</p></blockquote><blockquote><h2 id="本小站具体效果在主题官方文档皆可实现-请初遇问题细心，再细心阅读"><a href="#本小站具体效果在主题官方文档皆可实现-请初遇问题细心，再细心阅读" class="headerlink" title="本小站具体效果在主题官方文档皆可实现,请初遇问题细心，再细心阅读"></a>本小站具体效果在主题官方文档皆可实现,请初遇问题细心，再细心阅读</h2><h2 id="官方文档-查阅总有不一样的记忆"><a href="#官方文档-查阅总有不一样的记忆" class="headerlink" title="官方文档!!!!   查阅总有不一样的记忆!!!"></a>官方文档!!!!   查阅总有不一样的记忆!!!</h2></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">个人联系方式: </span><br><span class="line"></span><br><span class="line">QQ: 3327511395</span><br><span class="line"></span><br><span class="line">QQ邮箱:  3327511395@qq.com(QQ有推送查阅及时!)</span><br><span class="line"></span><br><span class="line">Google邮箱: aidou6942@gmail.com(未登录,不能及时查看)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="posts文章头信息修改"><a href="#posts文章头信息修改" class="headerlink" title="_posts文章头信息修改:"></a><code>_posts</code>文章头信息修改:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">站点(`scaffolds`)目录下 `post.md`:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以添加任何存在切你想要出现的配置</span></span><br></pre></td></tr></table></figure><ul><li><p>效果演示</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/HeadConfig.png" alt="文章头配置信息的添加"></p></li></ul><h3 id="文章密码"><a href="#文章密码" class="headerlink" title="文章密码:"></a>文章密码:</h3><blockquote><p>加密文章密码暂时统一为: <code>hexo</code></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git分支初次使用</title>
      <link href="2020/11/13/Git%E5%88%86%E6%94%AF%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/13/Git%E5%88%86%E6%94%AF%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="第一次使用其他分支-关于分支操作理解"><a href="#第一次使用其他分支-关于分支操作理解" class="headerlink" title="(第一次使用其他分支)关于分支操作理解:"></a>(第一次使用其他分支)关于分支操作理解:</h3><blockquote><ol><li><p> 克隆 <code>git clone -b 分支名 分支地址</code></p></li><li><p> 添加文件，删除文件、修改文件</p></li><li><p> <code>git 管理</code></p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add . <span class="comment"># 添加所有文件</span></span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;日志信息&quot;</span> <span class="comment"># 添加日志信息</span></span><br><span class="line"></span><br><span class="line">git push origin 分支名 <span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><ul><li><p>克隆</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitClone.png" alt="克隆"></p></li><li><p>添加日志描述</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitCommitLog.png" alt="添加日志表述"></p></li><li><p>推送至远程仓库</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitPushS.png" alt="推送至远程仓库"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode-Less配置与使用</title>
      <link href="2020/11/11/Vscode-Less%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/11/Vscode-Less%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Vscode配置Less："><a href="#Vscode配置Less：" class="headerlink" title="Vscode配置Less："></a><code>Vscode配置Less</code>：</h3><ul><li><p>全局<code>node</code>安装</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g less</span><br></pre></td></tr></table></figure></blockquote></li><li><p>手动编译</p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lessc styles.less styles.css</span><br></pre></td></tr></table></figure></blockquote></li><li><p>安装插件</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Easy Less</span><br></pre></td></tr></table></figure></blockquote></li><li><p><code>Less配置</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Less 配置</span><br><span class="line"> <span class="string">&quot;less.compile&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;compress&quot;</span>: <span class="literal">false</span>,// 去除多余空格</span><br><span class="line">     <span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,// 生成 map 文件</span><br><span class="line">     <span class="string">&quot;out&quot;</span>: <span class="string">&quot;..\\css\\&quot;</span>, // 这里是代表编译后生成的css文件所放的位置</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure></li><li><p>添加在<code>settings.json</code>中</p></li><li><blockquote><p><code>file(文件)--&gt;Preferences(首选项)--&gt;Settings</code></p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/lessS.png" width="400"><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/less-U.png" width="1000"></blockquote></li><li><p>效果展示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/less-R.png" width="800"></li><li><p>实时渲染效果</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201111155059947.gif#pic_center"></li><li><p><code>Mixins</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">通过 <span class="selector-tag">Mixins</span> 可以将不同类的样式进行混合使用</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">1</span>.类名&#123;</span><br><span class="line">   类选择器(); // 复用 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">2</span>. 类名:<span class="selector-tag">extend</span>(类名 [all])&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 Mixins 时,如果在名字后面添加了()则 mixin 中的样式不会被编译到 css 文件中</span></span><br><span class="line"><span class="comment">// 定义时,可以在() 中指定参数,这个参数就相当于定义了一个变量,但是并没有赋值</span></span><br><span class="line"></span><br><span class="line">类名(@变量名)&#123;</span><br><span class="line">    <span class="attribute">width</span>: @变量名; <span class="comment">// 可以使用默认值 也可以传递参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">类名(@变量名: 默认值)&#123;</span><br><span class="line">    <span class="attribute">width</span>: @变量名; <span class="comment">// 可以使用默认值 也可以传递参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>模块化编写<code>css</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;less文件&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>Less中文文档推荐</p><blockquote><p><code>https://less.bootcss.com/</code></p></blockquote></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> less </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AE</title>
      <link href="2020/11/07/AE/"/>
      <url>2020/11/07/AE/</url>
      
        <content type="html"><![CDATA[<h3 id="AE工具栏及快捷键使用"><a href="#AE工具栏及快捷键使用" class="headerlink" title="AE工具栏及快捷键使用:"></a><code>AE工具栏及快捷键使用</code>:</h3><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">AE 快捷键:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">UU 展开/关闭 fx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shift + F9 关键帧添加缓入</span><br><span class="line"></span><br><span class="line">ctrl + shift + F9 关键帧添加缓出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">帧速率: 25 帧</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl + alt + f 适配窗口大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl +  alt + shift + h  适配宽度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl +  alt + shift + G 适配高度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s 缩放</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alt + [  ]   剪裁时间轴</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl + y 新建纯色图层</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p><code>工具顶栏带有小三角按住左键不松手</code></p></blockquote><ul><li><p>初始<code>AE-七彩花</code>:</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201107132349753.gif#pic_center" alt="AE-七彩花"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> AE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-动画-渐变</title>
      <link href="2020/10/29/CSS-%E5%8A%A8%E7%94%BB-%E6%B8%90%E5%8F%98/"/>
      <url>2020/10/29/CSS-%E5%8A%A8%E7%94%BB-%E6%B8%90%E5%8F%98/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS-动画-animation："><a href="#CSS-动画-animation：" class="headerlink" title="CSS 动画   - animation："></a><code>CSS 动画</code>   - <code>animation</code>：</h3><span id="more"></span><blockquote><p><code>animation</code> <code>属性用来指定一组或多组动画，每组之间用逗号相隔。</code></p></blockquote><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>: <span class="number">3s</span> ease-in <span class="number">1s</span> infinite reverse both running slidein;</span><br><span class="line"></span><br><span class="line"><span class="attribute">animation</span>: <span class="number">3s</span> linear <span class="number">1s</span> infinite running slidein;</span><br><span class="line"></span><br><span class="line"><span class="attribute">animation</span>: <span class="number">3s</span> linear <span class="number">1s</span> infinite alternate slidein;</span><br><span class="line"></span><br><span class="line"><span class="attribute">animation</span>: .<span class="number">5s</span> linear <span class="number">1s</span> infinite alternate slidein;</span><br></pre></td></tr></table></figure></blockquote><h3 id="综合运用-animation："><a href="#综合运用-animation：" class="headerlink" title="综合运用 animation："></a><code>综合运用 animation</code>：</h3><blockquote><ul><li>定义动画</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-webkit-<span class="attribute">animation</span>: carousel <span class="number">8s</span> infinite linear;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画名称 时间  xxx  方式</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li>使用动画(替代轮播图效果)</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@-webkit-keyframes</span> carousel&#123;</span><br><span class="line">    0%&#123;</span><br><span class="line">        <span class="attribute">background-image</span>: url(<span class="string">&quot;../access/img/top-banner/banner01.jpg&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    50%&#123;</span><br><span class="line">         <span class="attribute">background-image</span>: url(<span class="string">&quot;../access/img/top-banner/banner02.png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    100%&#123;</span><br><span class="line">         <span class="attribute">background-image</span>: url(<span class="string">&quot;../access/img/top-banner/banner03.png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="CSS-颜色渐变"><a href="#CSS-颜色渐变" class="headerlink" title="CSS 颜色渐变:"></a><code>CSS 颜色渐变</code>:</h3><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 渐变轴为45度，从蓝色渐变到红色 */</span><br><span class="line"></span><br><span class="line">linear-gradient(<span class="number">45deg</span>, blue, red);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从右下到左上、从蓝色渐变到红色 */</span></span><br><span class="line">linear-gradient(to left top, blue, red);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从下到上，从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束 */</span></span><br><span class="line">linear-gradient(<span class="number">0deg</span>, blue, green <span class="number">40%</span>, red);</span><br></pre></td></tr></table></figure><ul><li></li></ul></blockquote><ul><li><p>上到下渐变</p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: linear-gradient(<span class="number">#e66465</span>, <span class="number">#9198e5</span>);</span><br></pre></td></tr></table></figure><ul><li><p>效果图</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/linear01.png"></p></li></ul></blockquote></li><li><p>左到右渐变</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">0.25turn</span>, <span class="number">#3f87a6</span>, <span class="number">#ebf8e1</span>, <span class="number">#f69d3c</span>);</span><br></pre></td></tr></table></figure><ul><li><p>效果图</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/linear02.png"></p></li></ul></blockquote></li><li><p>混色渐变</p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: linear-gradient(<span class="number">217deg</span>, rgba(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">8</span>), rgba(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="number">70.71%</span>),</span><br><span class="line">            linear-gradient(<span class="number">127deg</span>, rgba(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>,.<span class="number">8</span>), rgba(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="number">70.71%</span>),</span><br><span class="line">            linear-gradient(<span class="number">336deg</span>, rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>,.<span class="number">8</span>), rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>) <span class="number">70.71%</span>);</span><br></pre></td></tr></table></figure><ul><li><p>效果图</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/linear03.png"></p></li></ul></blockquote></li></ul><h3 id="理解-linear-gradient"><a href="#理解-linear-gradient" class="headerlink" title="理解 linear-gradient:"></a><code>理解 linear-gradient</code>:</h3><ul><li><p>起点方向</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/linear-all.png"></p></li></ul><blockquote><ul><li><p>方向(<code>···deg</code>)</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/direcation.png"></p></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linear-gradient((方向)角度,颜色值1，颜色值2，····);</span><br></pre></td></tr></table></figure></blockquote><h3 id="filter-滤镜-gt-高斯模糊-："><a href="#filter-滤镜-gt-高斯模糊-：" class="headerlink" title="filter(滤镜--&gt; 高斯模糊)："></a><code>filter</code>(<code>滤镜--&gt; 高斯模糊</code>)：</h3><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">     <span class="selector-class">.box</span> &#123;</span><br><span class="line">         <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">         <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">         <span class="attribute">position</span>: absolute;</span><br><span class="line">         <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="selector-class">.blue</span> &#123;</span><br><span class="line">         <span class="attribute">position</span>: absolute;</span><br><span class="line">         <span class="attribute">background-color</span>: blue;</span><br><span class="line">         <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">// blur(值越大模糊程度越高)</span></span><br><span class="line">         <span class="attribute">filter</span>: blur(<span class="number">8px</span>);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>效果图</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/fliter.png" style="zoom:80%;" /></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考拉海购</title>
      <link href="2020/10/27/%E8%80%83%E6%8B%89%E6%B5%B7%E8%B4%AD/"/>
      <url>2020/10/27/%E8%80%83%E6%8B%89%E6%B5%B7%E8%B4%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="目录划分"><a href="#目录划分" class="headerlink" title="目录划分:"></a>目录划分:</h3><span id="more"></span><ul><li><code>目录结构</code>:</li></ul><blockquote><ul><li><code>index.html首页</code></li><li><code>access资源</code><ul><li> <code>img图片</code></li><li><code>···········</code></li></ul></li><li><code>css</code><ul><li><code>commen.css</code></li><li><code>style.css</code></li><li><code>reset.css</code></li><li><code>top.css</code></li><li><code>main.css</code></li><li><code>footer.css</code></li><li><code>header.css</code></li></ul></li><li><code>js</code></li></ul></blockquote><ul><li><code>header</code></li></ul><h3 id="三角形"><a href="#三角形" class="headerlink" title="三角形:"></a>三角形:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>:<span class="number">100px</span> solid blue;</span><br><span class="line">    <span class="attribute">border-right</span>:<span class="number">100px</span> solid red;</span><br><span class="line">    <span class="attribute">border-bottom</span>:<span class="number">100px</span> solid green;</span><br><span class="line">    <span class="attribute">border-left</span>:<span class="number">100px</span> solid orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="hover-遗留问题"><a href="#hover-遗留问题" class="headerlink" title="(hover)遗留问题:"></a><code>(hover)遗留问题</code>:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/hover.png"></p><ul><li>最终效果</li></ul><blockquote><ul><li><p>解决(跳出一级)</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 实现 .show:hover*/</span></span><br><span class="line"><span class="selector-class">.navitm-cats</span><span class="selector-pseudo">:hover</span>+<span class="selector-class">.top-cats</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="滤镜效果-高斯模糊"><a href="#滤镜效果-高斯模糊" class="headerlink" title="滤镜效果(高斯模糊):"></a>滤镜效果(高斯模糊):</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">对两个 <span class="selector-tag">div</span> 进行层叠,并实现高斯模糊</span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.box</span> &#123;</span><br><span class="line">     <span class="attribute">margin-top</span>: <span class="number">200px</span>;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">     <span class="attribute">position</span>: absolute;</span><br><span class="line">     <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* filter: blur(8px); */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ 层级关系</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&gt;<span class="selector-class">.blue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="transform-对a无效的解决"><a href="#transform-对a无效的解决" class="headerlink" title="transform 对a无效的解决:"></a><code>transform 对a无效的解决</code>:</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二屏显示"><a href="#第二屏显示" class="headerlink" title="第二屏显示:"></a>第二屏显示:</h3><ul><li><p><code>css吸顶效果</code>:</p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>: sticky; <span class="comment">// 粘性定位元素</span></span><br></pre></td></tr></table></figure><p>基于<code>top</code>, <code>right</code>, <code>bottom</code>, 和 <code>left</code>的值进行偏移。偏移值不会影响任何其他元素的位置。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定位、浮动</title>
      <link href="2020/10/27/%E5%AE%9A%E4%BD%8D%E3%80%81%E6%B5%AE%E5%8A%A8/"/>
      <url>2020/10/27/%E5%AE%9A%E4%BD%8D%E3%80%81%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="定位"><a href="#定位" class="headerlink" title="定位:"></a>定位:</h3><span id="more"></span><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">left</span></span><br><span class="line"><span class="attribute">right</span></span><br><span class="line"><span class="attribute">top</span></span><br><span class="line"><span class="attribute">bottom</span></span><br></pre></td></tr></table></figure><ul><li><p>标准流下的盒子模型</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/WaterFall.png" alt="标准流"></p></li><li><p><code>static</code>默认</p></li><li><p><code>position</code></p><ul><li><p><code>relative</code> 相对定位: 相对定位是根据自己原来的位置进行定位</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/relative.png" alt="relative"></p></li><li><p><code>absolute</code> 绝对定位</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/image-20201027091304443.png" alt="absolute"></p></li><li><p><code>fixed</code> 固定定位</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/fixed.png" alt="fixed"></p></li></ul></li></ul><h3 id="脱离标准流的元素"><a href="#脱离标准流的元素" class="headerlink" title="脱离标准流的元素:"></a>脱离标准流的元素:</h3><blockquote><p><code>position: fixed/absolute，float</code></p></blockquote><ul><li>特点:<ul><li>可以随意设置宽高</li><li>宽高默认有内容决定</li><li>不在受标准流的约束</li><li>不在给父元素汇报宽高数据</li></ul></li></ul><h3 id="效率快捷键演示"><a href="#效率快捷键演示" class="headerlink" title="效率快捷键演示"></a>效率快捷键演示</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">选取所需文字 ctrl + c</span><br><span class="line"></span><br><span class="line">回到编辑器 ctrl + v</span><br><span class="line"></span><br><span class="line">在编辑器中对于竖排文字按下 alt + shift 进行拉选</span><br><span class="line"></span><br><span class="line">找到相应位置的标签按下 alt 拉选 ctrl + v</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>效果演示</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/alt-shift.gif" alt="alt+shift"></p></li></ul><h3 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相:"></a>子绝父相:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/absolute-ul.png" alt="absolute-relative"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> &lt;style&gt;</span><br><span class="line">        <span class="comment">/* reset */</span></span><br><span class="line">        <span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.beauty</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">306px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">24px</span>;</span><br><span class="line">            <span class="attribute">bottom</span>: <span class="number">24px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.beauty</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.left-beauty</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="selector-class">.beauty</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">             <span class="attribute">color</span>: red;</span><br><span class="line">         &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-beauty&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;phone.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;beauty&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 爆款手机 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 个护电器 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 生活电器 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 厨房电器 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 智能影音 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 电脑办公 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二维码定位"><a href="#二维码定位" class="headerlink" title="二维码定位:"></a>二维码定位:</h3><ul><li><p>定位</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/phone-caola.png"></p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="selector-class">.phone</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">            <span class="attribute">font-family</span>: <span class="string">&#x27;Courier New&#x27;</span>, Courier, monospace;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.phone</span> <span class="selector-class">.code</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">27px</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">transform</span>: translate(-<span class="number">50%</span>);</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">50%</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.phone</span> <span class="selector-class">.code</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.arrow</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">            <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">            <span class="attribute">transform</span>: rotate(<span class="number">45deg</span>);</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">80px</span>;</span><br><span class="line">            <span class="attribute">top</span>: -<span class="number">7px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.code</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.code</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; class=&quot;phone&quot;&gt;</span><br><span class="line">      &lt;span&gt; 手机考拉 &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;code&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;</span><br><span class="line">          &lt;img src=&quot;scren.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">          &lt;span&gt; 下载 App &lt;/span&gt;</span><br><span class="line">          &lt;span&gt; 领 10元新人礼包 &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">  &lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动:"></a>浮动:</h3><blockquote><p><code> ························</code></p></blockquote><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动:"></a>清除浮动:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clear-fix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 兼容旧浏览器 */</span></span><br><span class="line">    <span class="attribute">visibility</span>: hidden  /* 兼容旧浏览器 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-fix</span>&#123;</span><br><span class="line">    *zoom: <span class="number">1</span>; <span class="comment">/* 兼容 IE6~7 浏览器 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中:"></a>垂直居中:</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span></span><br><span class="line">margin: auto <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="transform："><a href="#transform：" class="headerlink" title="transform："></a><code>transform</code>：</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: matrix(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: translate(<span class="number">120px</span>, <span class="number">50%</span>);</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: scale(<span class="number">2</span>, <span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: rotate(<span class="number">0.5turn</span>);</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: skew(<span class="number">30deg</span>, <span class="number">20deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: scale(<span class="number">0.5</span>) translate(-<span class="number">100%</span>, -<span class="number">100%</span>);</span><br></pre></td></tr></table></figure><h3 id="transform-origin："><a href="#transform-origin：" class="headerlink" title="transform-origin："></a><code>transform-origin</code>：</h3><blockquote><p><code>transform-origin CSS属性让你更改一个元素变形的原点。</code></p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: center;</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform-origin</span>: top left;</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform-origin</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line"></span><br><span class="line">tranform-origin: bottom right <span class="number">60px</span>;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/transform.gif" alt="transform"></p><h3 id="transition"><a href="#transition" class="headerlink" title="transition:"></a><code>transition</code>:</h3><blockquote><p><code>·····························</code></p></blockquote><h3 id="vertical-align："><a href="#vertical-align：" class="headerlink" title="vertical-align："></a><code>vertical-align</code>：</h3><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">vertical-align</span>: top;</span><br><span class="line">    </span><br><span class="line"><span class="attribute">vertical-align</span>: bottom;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../xxxx.png&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><ul><li><code>图片的垂直居中</code></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/vertical-aligin.png" alt="vertical-align"></p><ul><li><p><code>主要原理</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">           <span class="attribute">position</span>: relative;</span><br><span class="line">           <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">           <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">50%</span>);</span><br><span class="line">           <span class="attribute">margin-left</span>: <span class="number">150px</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局:"></a>双飞翼布局:</h3><ul><li><p><strong>通俗的来说就是左右两栏固定宽度，中间部分自适应的三栏布局。</strong></p></li><li><p>需求<code>左侧固定、右侧内容自适应</code></p></li></ul><blockquote><p>实现原理：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">       *&#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.box</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">           <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.left-site</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">          </span><br><span class="line">           <span class="comment">/* 主要依靠原理:  -200 相当于 0 不占位 */</span></span><br><span class="line">           <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.main</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">background-color</span>: yellow;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">/* 在 main 里面的嵌套改变内容显示 */</span></span><br><span class="line">       <span class="selector-class">.inner</span>&#123;</span><br><span class="line">           <span class="attribute">margin-left</span>: <span class="number">200px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80.gif" alt="双飞翼布局"></p></blockquote><ul><li><p>需求：<code>左右固定中间自适应</code></p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">           <span class="attribute">min-width</span>: <span class="number">600px</span>;</span><br><span class="line">           <span class="attribute">overflow</span>: hidden;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.main</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">       <span class="selector-class">.left</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">          <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: green;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.right</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">           <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>网页结构</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">               中间内容</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/bird.png"  width=500></blockquote></li></ul><h3 id="calc"><a href="#calc" class="headerlink" title="calc():"></a><code>calc()</code>:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - 宽度);</span><br><span class="line"></span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">200px</span>);</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/calc.png" width="600"><ul><li><p>定位实现 <code>投票时间</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">160px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.em</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">      <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.roted</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">15px</span> solid <span class="number">#58bbc8</span>;</span><br><span class="line">      <span class="attribute">border-right</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line">      <span class="attribute">transform</span>: rotate(-<span class="number">90deg</span>);</span><br><span class="line">      <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">      <span class="attribute">left</span>: -<span class="number">22px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;roted&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;em&quot;</span>&gt;</span> 投票时间<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>效果演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/rote.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-盒子模型</title>
      <link href="2020/10/26/CSS-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>2020/10/26/CSS-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型:"></a>盒子模型:</h3><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">width</span><br><span class="line"></span><br><span class="line">height</span><br><span class="line"></span><br><span class="line">margin</span><br><span class="line"></span><br><span class="line">padding</span><br><span class="line"></span><br><span class="line">border</span><br><span class="line"></span><br><span class="line">content</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/box.png" alt="盒子模型"></p><h3 id="上下-margin-传递"><a href="#上下-margin-传递" class="headerlink" title="上下 margin 传递:"></a>上下 <code>margin</code> 传递:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="selector-class">.box1</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#f00</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: green;</span><br><span class="line">            <span class="comment">/*  overflow: hidden; 将会触发 BFC */</span></span><br><span class="line">          <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.inner</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">           </span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">20px</span>; </span><br><span class="line">            </span><br><span class="line">            <span class="attribute">background-color</span>: yellow;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 对比 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- margin-top 传递 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>基础效果（<code>绿色盒子为 inner</code>）</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/margintop.png"></p></li><li><p>对 <code>inner</code>盒子添加 <code>margin-top</code>效果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/topmargin.png" alt="margin-top"></p></li><li><p>什么是 <code>BFC</code>：</p><blockquote><p><strong>块格式化上下文（Block Formatting Context，BFC）</strong> 是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元</p><p>素与其他元素交互的区域。</p></blockquote></li><li><p>如何触发 <code>BFC</code>：</p><blockquote><ul><li>浮动可以触发</li><li>设置一个元素的 overflow 为非 visible<ul><li>hidden</li><li>auto</li><li>scroll</li></ul></li></ul></blockquote></li><li><p>添加<code>overflow: hidden</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/overflow.png" alt="overflow-hidden"></p></li><li><p>在不了解 <code>BFC</code>可以使用 <code>padding</code>加在父元素身上（存在弊端）</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/padding-overflow.png"></p></li></ul><h3 id="box-shadow："><a href="#box-shadow：" class="headerlink" title="box-shadow："></a><code>box-shadow</code>：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影颜色 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">5px</span> <span class="number">5px</span> black;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影扩散半径 | 阴影颜色 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line"></span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li><p><code>box-shadow</code>：</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/box-shadow.png" alt="box-shadow"></p></li></ul><h3 id="text-shadow"><a href="#text-shadow" class="headerlink" title="text-shadow:"></a><code>text-shadow</code>:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">offset-x | offset-y | blur-radius(模糊) | color </span><br><span class="line">   </span><br><span class="line"><span class="attribute">text-shadow</span>:<span class="number">2px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#FF0000</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>霓虹灯文字效果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/helloworld.png" alt="霓虹灯文字效果"></p></li></ul><h3 id="盒子尺寸box-sizing："><a href="#盒子尺寸box-sizing：" class="headerlink" title="盒子尺寸box-sizing："></a>盒子尺寸<code>box-sizing</code>：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">默认内容盒子:</span><br><span class="line"></span><br><span class="line">content-box： 含义是设置宽度和高度时只是指定内容的宽高</span><br><span class="line"></span><br><span class="line">border-box: 含义是设置宽度和高度时是 内容 + 内边距 + 边框的宽度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">box-sizing: border-box;</span><br></pre></td></tr></table></figure><ul><li><p><code>content-box与border-box的差异</code>:</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/cintent-border.png"></p></li></ul><h3 id="margin-0-auto："><a href="#margin-0-auto：" class="headerlink" title="margin: 0 auto："></a><code>margin: 0 auto</code>：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"></span><br><span class="line">auto == margin-left / margin-right</span><br><span class="line"></span><br><span class="line">水平方向的父元素的宽度是 <span class="attribute">auto</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="css-Sprite-精灵图-："><a href="#css-Sprite-精灵图-：" class="headerlink" title="css Sprite(精灵图)："></a><code>css Sprite</code>(精灵图)：</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/sprite.png" alt="sprite"></p><ul><li><p>京东精灵图</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/SpriteImg.png" alt="京东精灵图"></p></li><li><p>多快好省练习</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="comment">/* reset */</span></span><br><span class="line">        <span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span>,</span><br><span class="line">        <span class="selector-tag">p</span>,</span><br><span class="line">        <span class="selector-tag">h5</span>,</span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 具体样式 */</span></span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span>,</span><br><span class="line">        <span class="selector-tag">h5</span>,</span><br><span class="line">        <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">18px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">h5</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">36px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">            <span class="attribute">text-indent</span>: -<span class="number">999px</span>; <span class="comment">/* 新内容 ················ */</span></span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">SpriteImg.png</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.duo</span> &#123;</span><br><span class="line">            <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">192px</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.kuai</span> &#123;</span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">41px</span> -<span class="number">192px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.hao</span> &#123;</span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">82px</span> -<span class="number">192px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.sheng</span> &#123;</span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">123px</span> -<span class="number">192px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.server</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">150px</span> auto;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;server&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;duo&quot;</span>&gt;</span>多<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>品类齐全,轻松购物<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;kuai&quot;</span>&gt;</span>快<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>多仓直发,急速配送<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;hao&quot;</span>&gt;</span>好<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>正品行货,精致服务<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;sheng&quot;</span>&gt;</span>省<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>天天低价,畅叙无忧<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="background-attachment："><a href="#background-attachment：" class="headerlink" title="background-attachment："></a><code>background-attachment</code>：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span>:</span><br><span class="line"></span><br><span class="line">属性值: local、fixed、scroll</span><br></pre></td></tr></table></figure><h3 id="img和background-image的区别"><a href="#img和background-image的区别" class="headerlink" title="img和background-image的区别:"></a><code>img</code>和<code>background-image</code>的区别:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">           <span class="attribute">text-align</span>: center;</span><br><span class="line">           <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">150px</span> auto;</span><br><span class="line">           <span class="comment">/* 合并边框对于表格很重要 */</span></span><br><span class="line">            <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="selector-tag">th</span>,</span><br><span class="line">   <span class="selector-tag">tr</span>,</span><br><span class="line">   <span class="selector-tag">td</span> &#123;</span><br><span class="line">       <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">border</span>: <span class="number">1px</span> solid skyblue;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><table align="center">        <tr>            <th></th>            <th>img</th>            <th>background-image</th>        </tr>        <tr>            <td> 性质</td>            <td> HTML元素</td>            <td> CSS样式</td>        </tr>        <tr>            <td> 图片是否占用空间 </td>            <td> √ </td>            <td> × </td>        </tr>        <tr>            <td> 浏览器右键直接查看地址</td>            <td> √ </td>            <td> × </td>        </tr>        <tr>            <td> 支持 CSS Sprite </td>            <td> × </td>            <td> √ </td>        </tr>        <tr>            <td> 更有可能被搜索引擎收录 </td>            <td> √ (结合alt 属性)</td>            <td> × </td>        </tr>        <tr>            <td> 加载书顺序 </td>            <td> 优先加载 </td>            <td> 等加载完HTML元素后再加载</td>        </tr>    </table>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元素类型的划分</title>
      <link href="2020/10/26/%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%92%E5%88%86/"/>
      <url>2020/10/26/%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%92%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h3 id="块级、行内及元素"><a href="#块级、行内及元素" class="headerlink" title="块级、行内及元素:"></a>块级、行内及元素:</h3><span id="more"></span><ul><li><p>块级元素(<code>block-level elements</code>)</p><ul><li><p>独占父元素一行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">div  tableform articleaside</span><br><span class="line">    </span><br><span class="line">pfooterheaderhgroupmain</span><br><span class="line">    </span><br><span class="line">navsetionhrpreh1~h6ul</span><br><span class="line">    </span><br><span class="line">ollidldtdd</span><br></pre></td></tr></table></figure></li></ul></li><li><p>行内及元素(<code>inline-level elements</code>)</p><ul><li><p>多个行内及元素可以在父元素的同一行中显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">aimgspanstrongcode</span><br><span class="line"></span><br><span class="line">iframelabelinputbuttoncanvas</span><br><span class="line"></span><br><span class="line">embedobjectvideo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/inline.png" alt="块级元素与行级元素"></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/block.png"></p></li></ul></li></ul><h3 id="分页列表的实现"><a href="#分页列表的实现" class="headerlink" title="分页列表的实现:"></a>分页列表的实现:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/displayinline.png" alt="display:inline-block"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/display-inline.png  </span><br><span class="line">&lt;style&gt;</span><br><span class="line">        .box &#123;</span><br><span class="line">            width: <span class="number">752px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid skyblue;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">150px</span> auto;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#f5f5f6</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#3951B3</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">14px</span> arial;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">34px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">36px</span>;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">            <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-class">.prev</span> <span class="selector-tag">a</span>,</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-class">.next</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">88px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.checked</span>,</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#4E6EF2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> 上一页 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 下一页 <span class="symbol">&amp;gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="元素的隐藏"><a href="#元素的隐藏" class="headerlink" title="元素的隐藏:"></a>元素的隐藏:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">display</span>: none;  元素不在占据空间</span><br><span class="line"></span><br><span class="line"><span class="attribute">visibility</span>: hidden 隐藏元素 保留原有的空间</span><br><span class="line"></span><br><span class="line">overflow: hidden / auto / scroll 内容溢出隐藏</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表单</title>
      <link href="2020/10/25/%E8%A1%A8%E5%8D%95/"/>
      <url>2020/10/25/%E8%A1%A8%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h3 id="表单元素-name-value"><a href="#表单元素-name-value" class="headerlink" title="表单元素(name,value):"></a>表单元素(<code>name,value</code>):</h3><span id="more"></span><ul><li><p><code>input</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>password</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>button</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>file</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>radio</code> 提供 <code>value</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>男: <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>女:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>checkbox</code>携带<code>value</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">篮球<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkout&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">足球<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkout&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">羽毛球<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkout&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">乒乓球<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkout&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>reset</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>submit</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>select  &gt; option</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;高中&quot;</span>&gt;</span> 高中 <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;大专&quot;</span>&gt;</span> 大专 <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;博士&quot;</span>&gt;</span> 博士 <span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;研究生&quot;</span>&gt;</span> 研究生 <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>textarea</code> 禁止缩放: <code>resize: none</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>maxlength</code> 字数限制</p></li><li><p><code>placeholder</code> 占位</p></li><li><p><code>readonly = readonly(可以只写 readonly)</code> 只读</p></li><li><p><code>enable</code>和<code>disable</code> 禁用</p></li><li><p><code>checked</code> 默认选中状态</p></li><li><p><code>autofocus</code> 获取焦点</p></li><li><p><code>name</code></p></li><li><p><code>fieldset</code></p></li></ul><h3 id="filedset-和-legend"><a href="#filedset-和-legend" class="headerlink" title="filedset 和 legend"></a><code>filedset 和 legend</code></h3><p>​    <img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/form.png"></p><p>​        </p><h3 id="input和label的关系"><a href="#input和label的关系" class="headerlink" title="input和label的关系"></a><code>input</code>和<code>label</code>的关系</h3><div>    <label for="text">姓名: <input type="text" id="text"></label></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>css</code>缩放</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tabindex=-1 不被选中</span><br><span class="line"></span><br><span class="line">水平缩放: resize: horizontal;</span><br><span class="line"></span><br><span class="line">垂直缩放: resize: vertical;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="表单提交"><a href="#表单提交" class="headerlink" title="表单提交:"></a>表单提交:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">将用户在 input 中输入的内容提交给服务器</span><br><span class="line"></span><br><span class="line">1. 传统的表单提交</span><br><span class="line"></span><br><span class="line">+ 将所有的 input 包裹到一个 form 中</span><br><span class="line"></span><br><span class="line">+ form 设置 action （服务器的地址）</span><br><span class="line"></span><br><span class="line">+ input / button 类型是 submit</span><br><span class="line"></span><br><span class="line">点击 submit 自动将所有的数据提交给服务器</span><br><span class="line"></span><br><span class="line">弊端一: 会进行页面的跳转(意味着服务器必须提交给一个已经写好的页面，并且将写好的页面直接返回给前端，</span><br><span class="line"></span><br><span class="line">   前端直接展示这个页面）  服务器将提前写好页面: 服务端渲染</span><br><span class="line"></span><br><span class="line">弊端二: 不方便进行表单数据的验证</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">2. 前后端分离:</span><br><span class="line"></span><br><span class="line">+ 通过 JavaScript 获取到所有的表单的内容</span><br><span class="line"></span><br><span class="line">+ 通过正则表达式进行表单验证</span><br><span class="line"></span><br><span class="line">+ 发送 ajax 请求，将数据传递给服务器</span><br><span class="line"></span><br><span class="line">+ 验证成功后，服务器会返回结果，需要前端解析这个数据,并且决定显示什么内容(前端渲染和前端路由)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传:"></a>文件上传:</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">enctype</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">form</span> --&gt; POST 类型</span><br><span class="line"></span><br><span class="line">enctype = &quot;multipart/form-data&quot;</span><br></pre></td></tr></table></figure> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​      <span class="tag">&lt;<span class="name">legend</span>&gt;</span> 必填信息 <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;text&quot;</span>&gt;</span>用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>头像: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emmet语法和表格的使用</title>
      <link href="2020/10/24/Emmet%E8%AF%AD%E6%B3%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/10/24/Emmet%E8%AF%AD%E6%B3%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Emmet-语法使用"><a href="#Emmet-语法使用" class="headerlink" title="Emmet 语法使用:"></a><code>Emmet</code> 语法使用:</h3><ul><li><p><code>vscode</code>快速生成 <code>html5</code>代码模板</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">! 感叹号</span><br><span class="line"></span><br><span class="line">html:5</span><br></pre></td></tr></table></figure></li><li><p>子代</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法: div&gt;p&gt;h1</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>兄弟</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法: div+p+span+a</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>兄弟和子代同时使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">语法: div&gt;h2+a+p&gt;span</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>综合使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">语法: div#main&gt;div.box+p.p1+span.title^div#rooter&gt;div.box2</span><br><span class="line">  </span><br><span class="line">结果:</span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;rooter&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法: div#main.box&#123;我是内容&#125;</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>内容中有数字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法: div#main.box&#123;我是内容$&#125;*5</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是内容5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>隐式标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法: .box,#main················</span><br></pre></td></tr></table></figure></li><li><p><code>li</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法:  ul&gt;li.item$&#123;我是内容$&#125;*5</span><br><span class="line"></span><br><span class="line">结果: </span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>我是内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>我是内容3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span>我是内容4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span>我是内容5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>table</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>css</code>的 <code>Emmet</code>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法: .box&#123;</span><br><span class="line">    w200+h200+m20+p30</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line"></span><br><span class="line">    .box&#123;</span><br><span class="line">            width: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>margin</code> 和 <code>padding</code>的上右下左:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>: 上 右 下 左</span><br><span class="line"></span><br><span class="line">语法: m20-<span class="number">30</span>-<span class="number">45</span>-<span class="number">67</span> /p20-<span class="number">30</span>-<span class="number">45</span>-<span class="number">67</span></span><br><span class="line"></span><br><span class="line">结果:  </span><br><span class="line"></span><br><span class="line">margin: <span class="number">20px</span> <span class="number">30px</span> <span class="number">45px</span> <span class="number">67px</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">30px</span> <span class="number">45px</span> <span class="number">67px</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>字体</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">    fw</span><br><span class="line">    fz</span><br><span class="line">    lh90px</span><br><span class="line"></span><br><span class="line">结果:</span><br><span class="line">    font-weight: <span class="number">20</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">90px</span>;</span><br></pre></td></tr></table></figure></li><li><p>表格</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tr</span> 表中的行</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span> 行中的单元格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> 的属性:</span><br><span class="line"></span><br><span class="line">border 边框的宽度</span><br><span class="line">cellpadding 单元格内部的间距</span><br><span class="line">cellspacing 单元格之间的间距</span><br><span class="line">    width 表格的宽度</span><br><span class="line">    align 表格的水平对齐方式 (let、center、right)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>tr</code>的属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">valign 单元格得垂直对齐方式 <span class="attribute">top</span>、middle、<span class="attribute">bottom</span>、baseline</span><br><span class="line"></span><br><span class="line">align 单元格得水平对齐方式 <span class="attribute">left</span>、center、<span class="attribute">right</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>表格边框合并</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br></pre></td></tr></table></figure><ul><li><p>合并后的显示</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/table.png" alt="border-collapse-collapse"></p></li></ul></li><li><p>表格中的其他元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tbody</span> 表格的主体</span><br><span class="line"><span class="selector-tag">caption</span> 标题栏</span><br><span class="line"><span class="selector-tag">thead</span> </span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/caption.png" alt="caption"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">caption</span>&gt;</span> 内容记录排行 <span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="一张完整的表格-（border-collapse-collapse）"><a href="#一张完整的表格-（border-collapse-collapse）" class="headerlink" title="一张完整的表格:（border-collapse: collapse）"></a>一张完整的表格:（<code>border-collapse: collapse</code>）</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/tableContent.png" alt="完整的表格"></p><h3 id="表格单元格的合并"><a href="#表格单元格的合并" class="headerlink" title="表格单元格的合并:"></a>表格单元格的合并:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法: table&gt;(tr&gt;td&#123;单元格$&#125;*<span class="number">5</span>)*<span class="number">3</span></span><br><span class="line"></span><br><span class="line">结果: xxxx··············</span><br></pre></td></tr></table></figure><h3 id="合并的分析"><a href="#合并的分析" class="headerlink" title="合并的分析:"></a>合并的分析:</h3><ul><li><p>浏览器显示结果(分析)</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/collspan.png" alt="合并后在浏览器按下f12"></p></li><li><p>通过开发工具者分析</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/ChromeTd.png" alt="分析合并的原理"></p></li><li><p>请尝试其他</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/redTd.png"></p></li></ul><h3 id="课程表案例练习"><a href="#课程表案例练习" class="headerlink" title="课程表案例练习:"></a>课程表案例练习:</h3><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>Document</title>    <style>        table {            width: 680px;            margin: 20px auto;            line-height: 49px;            text-align: center;            border-collapse: collapse; /* *************** */            border: 1px solid skyblue;        }<pre><code>th,tr,td &#123;    border: 1px solid skyblue;&#125;th &#123;    height: 30px;    line-height: 30px;&#125;caption &#123;    border: 1px solid skyblue;    border-bottom-width: 0;    font-weight: bold;    font-size: 20px;    color: rgb(39, 37, 37);&#125;</code></pre><p></style></p></head><body>    <div class="box">        <table>            <caption> 课程表 </caption>            <tr>                <th></th>                <th>星期一</th>                <th>星期二</th>                <th>星期三</th>                <th>星期四</th>                <th>星期五</th>            </tr>            <tr>                <td rowspan="4">上午</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td rowspan="4">下午</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td rowspan="2">晚自习</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>            <tr>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>                <td>生物</td>            </tr>        </table>    </div></body></html>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee图床</title>
      <link href="2020/10/24/Gitee%E5%9B%BE%E5%BA%8A/"/>
      <url>2020/10/24/Gitee%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<ul><li><p>登录注册 <code>码云</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/QQ%E6%88%AA%E5%9B%BE20201024150508.png" alt="注册账号"></p><span id="more"></span></li><li><p>创建仓库</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/gitReso.png" alt="在gitee创建仓库"></p></li><li><p>安装 <code>PicGo</code></p></li><li><p>运行 <code>PicGo</code> ，点击插件 - 搜索<code>gitee</code> 选择右侧的显示结果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/searchgitee.png" alt="安装插件"></p></li><li><p>添加 <code>gitee  tocken</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/tocken.png" alt="点击圆圈的设置"></p></li><li><p>点击左侧栏的安全设置下的<code>私人令牌</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/lingpai.png" alt="私人令牌"></p><ul><li><p>点击生成新的私人令牌<img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/newtocken.png" alt="生成新的私人令牌"></p></li><li><p>复制并保存私人令牌，以防后续用到</p></li><li><p>打开<code>PicGo</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/picogitee.png" alt="点击左侧栏gitee"></p></li><li><p>成功配置 <code>gitee</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/okPickgo.png" alt="成功配置gitee-PicGo"></p></li><li><p>点击上传区 - 选择一张图片</p></li><li><p>获取图片路径</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/path.png" alt="coloud-photos-path"></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">个人博客: https://lovobin.github.io/ </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符实体的使用</title>
      <link href="2020/10/23/%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/10/23/%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="字符实体的使用"><a href="#字符实体的使用" class="headerlink" title="字符实体的使用:"></a>字符实体的使用:</h3><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&amp;nbsp; 空格</span><br><span class="line"></span><br><span class="line">text-indent: 2em; 段落文字进行缩进(css 样式)</span><br><span class="line"></span><br><span class="line">&amp;lt; &lt;</span><br><span class="line"></span><br><span class="line">&amp;gt; &gt;</span><br><span class="line">    </span><br><span class="line">&amp;quot; 双引号</span><br><span class="line"></span><br><span class="line">&amp;apos; 单引号</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="案例操作"><a href="#案例操作" class="headerlink" title="案例操作:"></a>案例操作:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 在网页上显示一下字符:</span><br><span class="line"></span><br><span class="line">实体字符 &amp;nbsp; 代表空格</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现源码"><a href="#实现源码" class="headerlink" title="实现源码:"></a>实现源码:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;pre&gt;</span><br><span class="line">    实体字符 &amp;nbsp; 代表空格</span><br><span class="line">    &lt;/pre&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防抖、节流</title>
      <link href="2020/10/22/%E9%98%B2%E6%8A%96%E3%80%81%E8%8A%82%E6%B5%81/"/>
      <url>2020/10/22/%E9%98%B2%E6%8A%96%E3%80%81%E8%8A%82%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h3 id="滚动条滚动事件"><a href="#滚动条滚动事件" class="headerlink" title="滚动条滚动事件:"></a>滚动条滚动事件:</h3><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 兼容性处理</span></span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">            <span class="comment">// 打印滚动条滚动高度</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;滚动条滚动高度: &quot;</span>+scrollTop);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022131337206.gif#pic_center" alt="滚动条滚动事件"></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dos窗口修改</title>
      <link href="2020/10/21/Dos%E7%AA%97%E5%8F%A3%E4%BF%AE%E6%94%B9/"/>
      <url>2020/10/21/Dos%E7%AA%97%E5%8F%A3%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">Windows Registry Editor Version 5.00 </span><br><span class="line">[HKEY_CURRENT_USER\Console\%SystemRoot%_system32_cmd.exe] </span><br><span class="line"><span class="string">&quot;WindowSize&quot;</span>=dword:00190069 </span><br><span class="line"><span class="string">&quot;ScreenBufferSize&quot;</span>=dword:01170058 </span><br><span class="line"><span class="string">&quot;WindowPosition&quot;</span>=dword:0079004b </span><br><span class="line"><span class="string">&quot;ColorTable01&quot;</span>=dword:00235600 </span><br><span class="line"><span class="string">&quot;FontSize&quot;</span>=dword:00160010 </span><br><span class="line"><span class="string">&quot;FontWeight&quot;</span>=dword:00000190 </span><br><span class="line"><span class="string">&quot;FaceName&quot;</span>=<span class="string">&quot;Consolas&quot;</span> </span><br><span class="line"><span class="string">&quot;FontFamily&quot;</span>=dword:00000036</span><br><span class="line"></span><br><span class="line">保存为: Consolas.reg</span><br><span class="line"></span><br><span class="line">双击运行</span><br><span class="line"></span><br><span class="line">修改 cmd 属性的透明度为: 85%</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="运行-Ipython"><a href="#运行-Ipython" class="headerlink" title="运行 Ipython:"></a>运行 <code>Ipython</code>:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201021001947816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="改善Doc"></p><h3 id="Vscode默认终端修改"><a href="#Vscode默认终端修改" class="headerlink" title="Vscode默认终端修改:"></a>Vscode默认终端修改:</h3><ul><li><p>修改为<code>bash</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/shellConfig.png"></p></li><li><p>添加配置</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;terminal.integrated.shell.windows&quot;</span>: <span class="string">&quot;D:\\Program Files\\Git\\bin\\bash.exe&quot;</span>, <span class="comment">#改为你的路径</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>主题色自选</p><blockquote><p>主题色: <a href="https://glitchbone.github.io//vscode-base16-term/#/bright">https://glitchbone.github.io//vscode-base16-term/#/bright</a></p></blockquote></li><li><p>添加颜色配置，点击<code>Copy to clipboard</code></p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;workbench.colorCustomizations&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;terminal.background&quot;</span>:<span class="string">&quot;#000000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.foreground&quot;</span>:<span class="string">&quot;#E0E0E0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminalCursor.background&quot;</span>:<span class="string">&quot;#E0E0E0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminalCursor.foreground&quot;</span>:<span class="string">&quot;#E0E0E0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBlack&quot;</span>:<span class="string">&quot;#000000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBlue&quot;</span>:<span class="string">&quot;#6FB3D2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightBlack&quot;</span>:<span class="string">&quot;#B0B0B0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightBlue&quot;</span>:<span class="string">&quot;#6FB3D2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightCyan&quot;</span>:<span class="string">&quot;#76C7B7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightGreen&quot;</span>:<span class="string">&quot;#A1C659&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightMagenta&quot;</span>:<span class="string">&quot;#D381C3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightRed&quot;</span>:<span class="string">&quot;#FB0120&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightWhite&quot;</span>:<span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiBrightYellow&quot;</span>:<span class="string">&quot;#FDA331&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiCyan&quot;</span>:<span class="string">&quot;#76C7B7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiGreen&quot;</span>:<span class="string">&quot;#A1C659&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiMagenta&quot;</span>:<span class="string">&quot;#D381C3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiRed&quot;</span>:<span class="string">&quot;#FB0120&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiWhite&quot;</span>:<span class="string">&quot;#E0E0E0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.ansiYellow&quot;</span>:<span class="string">&quot;#FDA331&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></blockquote></li><li><p>效果预览</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/colorVscode.png" width="600"></li><li><p><code>Vscdoe</code>实际效果偏差较大不是很理想</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过python 封装git命令快速提交</title>
      <link href="2020/10/20/%E9%80%9A%E8%BF%87python-%E5%B0%81%E8%A3%85git%E5%91%BD%E4%BB%A4%E5%BF%AB%E9%80%9F%E6%8F%90%E4%BA%A4/"/>
      <url>2020/10/20/%E9%80%9A%E8%BF%87python-%E5%B0%81%E8%A3%85git%E5%91%BD%E4%BB%A4%E5%BF%AB%E9%80%9F%E6%8F%90%E4%BA%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="新建-github-仓库"><a href="#新建-github-仓库" class="headerlink" title="新建 github 仓库"></a>新建 <code>github</code> 仓库</h3><span id="more"></span><h3 id="本地建立一个资源文件夹，放入tool-py"><a href="#本地建立一个资源文件夹，放入tool-py" class="headerlink" title="本地建立一个资源文件夹，放入tool.py"></a>本地建立一个资源文件夹，放入<code>tool.py</code></h3><ul><li><p>请按照图片显示操作</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201020215554191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="cmd启动"></p></li><li><p>根据 <code>cmd</code> 提示信息操作</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201020215703812.gif#pic_center" alt="在这里插入图片描述"></p></li></ul><h3 id="github-结果展示"><a href="#github-结果展示" class="headerlink" title="github 结果展示:"></a><code>github</code> 结果展示:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201020215554803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="结果"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tool.py 下载地址:</span><br><span class="line">    </span><br><span class="line">    https://github.com/lovobin/GitPythonTool.git</span><br><span class="line">        </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瀑布流</title>
      <link href="2020/10/20/%E7%80%91%E5%B8%83%E6%B5%81/"/>
      <url>2020/10/20/%E7%80%91%E5%B8%83%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h3 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析:"></a>思路分析:</h3><h3 id="瀑布流实现思路"><a href="#瀑布流实现思路" class="headerlink" title="瀑布流实现思路:"></a>瀑布流实现思路:</h3><ul><li><p>什么是瀑布流</p><span id="more"></span><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">瀑布流，又称瀑布流式布局。是比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附</span><br><span class="line"></span><br><span class="line">加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。国内大多数清新站基本为这类风格。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>什么地方需要使用瀑布流</p><ul><li>app 大数据展示等</li></ul></li></ul><ul><li>瀑布流布局的优点<ul><li>有效的降低了界面复杂度，节省了空间：我们不再需要臃肿复杂的页码导航链接或按钮了。</li><li>对触屏设备来说，交互方式更符合直觉：在移动应用的交互环境当中，通过向上滑动进行滚屏的操作已经成为最基本的用户习惯，而且所需要的操作精准程度远远低于点击链接或按钮。</li><li>更高的参与度：以上两点所带来的交互便捷性可以使用户将注意力更多的集中在内容而不是操作上，从而让他们更乐于沉浸在探索与浏览当中。</li></ul></li></ul><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路:"></a>解决思路:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">通过图片等宽不等高:</span><br><span class="line"></span><br><span class="line">    图片的定位</span><br><span class="line"></span><br><span class="line">    left: 最小的索引 * 图片的宽度</span><br><span class="line"></span><br><span class="line">    top: 最小图片的高度</span><br><span class="line"></span><br><span class="line">    定义数组存放图片高度</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="过程中使用到的-jQuery-整合"><a href="#过程中使用到的-jQuery-整合" class="headerlink" title="过程中使用到的 jQuery 整合"></a>过程中使用到的 <code>jQuery 整合</code></h2><h3 id="jQuery中的简写的-BUG"><a href="#jQuery中的简写的-BUG" class="headerlink" title="jQuery中的简写的 BUG:"></a>jQuery中的简写的 <code>BUG</code>:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果使用的入口函数是第一种，当图片没有加载进来时，瀑布流会叠加</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 等到页面的  dom 加载完就会执行对应的 js</span></span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">解决方案:</span><br><span class="line">    + 多栏</span><br><span class="line">    + 插件</span><br><span class="line">    + 如下(推荐):</span><br><span class="line">       </span><br><span class="line">    $(<span class="built_in">window</span>).on(<span class="string">&#x27;load&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 会等到图片、内容都加载完才会执行</span></span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="jQuery-中的常用方法"><a href="#jQuery-中的常用方法" class="headerlink" title="jQuery 中的常用方法:"></a>jQuery 中的常用方法:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Es6 的扩展语法:</span><br><span class="line"></span><br><span class="line">···</span><br><span class="line">    </span><br><span class="line">    快速求取数组中最小最大的值:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">89</span>,<span class="number">43</span>,<span class="number">21</span>,<span class="number">67</span>,<span class="number">90</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> minData = <span class="built_in">Math</span>.min(...arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> maxData = <span class="built_in">Math</span>.max(...arr);</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;最小值是: &quot;</span>+minData);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;最大值是: &quot;</span>+maxData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取索引</span></span><br><span class="line">    <span class="keyword">var</span> minIndex = $.inArray(参数一,参数二);</span><br><span class="line"></span><br><span class="line">参数一: 想要的值 （minData）</span><br><span class="line">    </span><br><span class="line">    参数二: 数组名 (arr)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">循环:</span><br><span class="line"></span><br><span class="line">    $.each(box,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="瀑布流中图片的间距"><a href="#瀑布流中图片的间距" class="headerlink" title="瀑布流中图片的间距:"></a>瀑布流中图片的间距:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">width</span>()—设置或返回元素的宽度（不包括内边距、边框或外边距）</span><br><span class="line"></span><br><span class="line"><span class="attribute">height</span>()—设置或返回元素的高度（不包括内边距、边框或外边距）</span><br><span class="line"></span><br><span class="line">innerWidth()—返回元素的宽度（包括内边距）</span><br><span class="line"></span><br><span class="line">innerHeight()—返回元素的高度（包括内边距）</span><br><span class="line"></span><br><span class="line">outerWidth()—返回元素的宽度（包括内边距和边框） // 使用此项</span><br><span class="line"></span><br><span class="line">outerHeight()—返回元素的高度（包括内边距和边框）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码的具体实现"><a href="#代码的具体实现" class="headerlink" title="代码的具体实现:"></a>代码的具体实现:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">&#x27;load&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">    waterFall();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterFall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yilia 相册实现有效解决</title>
      <link href="2020/10/19/Yilia-%E7%9B%B8%E5%86%8C%E5%AE%9E%E7%8E%B0%E6%9C%89%E6%95%88%E8%A7%A3%E5%86%B3/"/>
      <url>2020/10/19/Yilia-%E7%9B%B8%E5%86%8C%E5%AE%9E%E7%8E%B0%E6%9C%89%E6%95%88%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="创建-photos"><a href="#创建-photos" class="headerlink" title="创建 photos"></a>创建 <code>photos</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\&gt;cd 你的博客路径</span><br><span class="line">E:\blog&gt;cd source <span class="comment">// 进入资源文件夹</span></span><br><span class="line">E:\blog\source&gt;hexo <span class="keyword">new</span> page <span class="string">&quot;photos&quot;</span> <span class="comment">// 创建 photos</span></span><br><span class="line">INFO  Created: E:\blog\source\photos\index.md </span><br><span class="line"></span><br><span class="line">***<span class="comment">// 之后删除 source/photos/ index.md</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="创建-Github仓库"><a href="#创建-Github仓库" class="headerlink" title="创建 Github仓库:"></a>创建 <code>Github</code>仓库:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020101920485210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="创建github仓库"></p><h3 id="克隆你的仓库至本地博客的根目录下"><a href="#克隆你的仓库至本地博客的根目录下" class="headerlink" title="克隆你的仓库至本地博客的根目录下:"></a>克隆你的仓库至本地博客的根目录下:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019205449237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="请在博客根目录下"></p><h4 id="新建两个文件夹在你所克隆的仓库文件夹中"><a href="#新建两个文件夹在你所克隆的仓库文件夹中" class="headerlink" title="新建两个文件夹在你所克隆的仓库文件夹中:"></a>新建两个文件夹在你所克隆的仓库文件夹中:</h4><ul><li><p>新建文件夹并在两个文件夹下存放·<code>2014-11-16_name.jpg</code> 格式的图片(必须是此格式)</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019205859490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="新建两个文件夹"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">开始只新建两个文件夹，分别是:</span><br><span class="line"></span><br><span class="line">+ min_photos</span><br><span class="line"></span><br><span class="line">+ photos</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="通过-git-命令对仓库远程关联"><a href="#通过-git-命令对仓库远程关联" class="headerlink" title="通过 git 命令对仓库远程关联"></a>通过 <code>git</code> 命令对仓库远程关联</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;xxxx&quot;</span></span><br><span class="line"></span><br><span class="line">git branch -M main</span><br><span class="line"></span><br><span class="line">git remote add origin xxx</span><br><span class="line"></span><br><span class="line">git push -u origin main</span><br><span class="line">                </span><br></pre></td></tr></table></figure><h3 id="下载网络上已知的样式"><a href="#下载网络上已知的样式" class="headerlink" title="下载网络上已知的样式:"></a>下载网络上已知的样式:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019210552545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="已知样式下载"></p><h3 id="在掘金发现这个解决方案很是重要"><a href="#在掘金发现这个解决方案很是重要" class="headerlink" title="在掘金发现这个解决方案很是重要:"></a>在掘金发现这个解决方案很是重要:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*** 注意: ***</span><br><span class="line"></span><br><span class="line">1. 修改: class= &quot;instagram itemscope&quot; 下的 href 路径</span><br><span class="line"></span><br><span class="line">2. 删除 photos 下的 dat.json</span><br><span class="line"></span><br><span class="line">修改 index.ejs 的 href = &quot;你的博客地址&quot;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;instagram itemscope&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://chemlez.github.io/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;open-ins&quot;</span>&gt;</span>图片正在加载中…<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改-修改ins-js文件里的render-函数："><a href="#修改-修改ins-js文件里的render-函数：" class="headerlink" title="修改 修改ins.js文件里的render()函数："></a>修改 <code>修改ins.js文件里的render()函数</code>：</h3><ul><li>先通过 <code>ipaddress</code>   解析出可加载的 <code>raw.xx.com</code> 的 <code>ip</code>, 将 <code>ip</code> 添加在 <code>hosts</code> 文件里</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ipaddress: https://www.ipaddress.com/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019211952623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ul><li><p><code>hosts</code>路径:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">C:\Windows\System32\drivers\etc</span><br><span class="line">       </span><br><span class="line">添加对应的 `ip`</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019212505974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="hosts路径"></p></li></ul><h3 id="图片路径的获取"><a href="#图片路径的获取" class="headerlink" title="图片路径的获取:"></a>图片路径的获取:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">minSrc = 如下图</span><br><span class="line"></span><br><span class="line">src = 如下图</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019213247705.gif#pic_center" alt="获取图片路径"></p><h3 id="python脚本："><a href="#python脚本：" class="headerlink" title="python脚本："></a><code>python</code>脚本：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">将其中的.py文件拷贝至本地仓库blog-Picture文件夹中.  (跳转: 新建文件夹那一步查看 python 文件 )</span><br><span class="line"></span><br><span class="line">根据脚本文件，图片的命名规则为：<span class="number">2019</span>-<span class="number">10</span>-21_xxx.jpg/png.</span><br><span class="line"></span><br><span class="line">将图片[empty.png]下载放入博客目录下的 assets/img 文件夹中.</span><br><span class="line"></span><br><span class="line">打开tool.py文件,修改<span class="function"><span class="keyword">def</span> <span class="title">handle_photo</span>():</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    // 路径属于(source下) 删除的 data.json 处</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;E:/blog/source/photos/data.json&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">  -- 安装 python 所需要的两个模块可能出错</span><br><span class="line"></span><br><span class="line">我当初使用 windows + x : Windows PowerShell 到博客目录下使用: </span><br><span class="line">            </span><br><span class="line">            pip install pillow (建议切换 pip 源下载 )</span><br><span class="line">            </span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行:"></a>运行:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="我的博客相册效果截图"><a href="#我的博客相册效果截图" class="headerlink" title="我的博客相册效果截图:"></a>我的博客相册效果截图:</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019214735290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="效果截图"></p><h3 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题:"></a>遗留问题:</h3><ul><li><p>加入第二张图片时出现不了的解决方案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可能是 github 修改了 master --&gt; main,提交命令导致</span><br><span class="line"></span><br><span class="line">所以修改 tool.py 的如下方法的 git 命令，注释掉原先的 git 命令,修改为最新的仓库关联方式</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">git_operation</span>():</span></span><br><span class="line">    </span><br><span class="line">    os.system(<span class="string">&#x27;git remote add origin https://github.com/lovobin/Blog-Back-Up.git&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;git branch -M main&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;git push -u origin main&#x27;</span>)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    git 命令行函数，将仓库提交</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    需要安装git命令行工具，并且添加到环境变量中</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#os.system(&#x27;git add --all&#x27;)</span></span><br><span class="line">    <span class="comment">#os.system(&#x27;git commit -m &quot;add photos&quot;&#x27;)</span></span><br><span class="line">    <span class="comment">#os.system(&#x27;git push origin master&#x27;)</span></span><br></pre></td></tr></table></figure></li><li><p>第二次的图片展示结果:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">首先得在博客本地执行一次 tool.py </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201020100626447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="正确显示二次提交的图片"></p></li><li><p>分析过程来源：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">作者：ChmeLez</span><br><span class="line">链接：https://juejin.im/post/6844904088878972941</span><br><span class="line">来源：掘金</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br><span class="line"></span><br><span class="line">具体参考: https://juejin.im/post/6844904088878972941</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSDN实现图床</title>
      <link href="2020/10/19/CSDN%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A/"/>
      <url>2020/10/19/CSDN%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h3 id="根目录下的source-添加静态资源文件夹："><a href="#根目录下的source-添加静态资源文件夹：" class="headerlink" title="根目录下的source/添加静态资源文件夹："></a>根目录下的<code>source/</code>添加静态资源文件夹：</h3><span id="more"></span><ul><li>添加不被渲染的主文件夹</li><li>在主文件夹下添加子文件夹 / ( <code>idnex.html,css,js</code>)</li></ul><h3 id="添加友情链接："><a href="#添加友情链接：" class="headerlink" title="添加友情链接："></a>添加友情链接：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">smart_menu:</span><br><span class="line">  innerArchive: <span class="string">&#x27;所有文章&#x27;</span></span><br><span class="line">  friends: <span class="string">&#x27;友情链接&#x27;</span></span><br><span class="line">  aboutme: <span class="string">&#x27;关于&#x27;</span></span><br><span class="line"></span><br><span class="line">friends:</span><br><span class="line">    media媒体查询: https://lovobin.github.io/ZONE/PageDemo/</span><br><span class="line">    Flex弹性布局: https://lovobin.github.io/ZONE/QQ-Nav/</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">友情链接的作用: 通过友情链接实现静态资源 demo 的在线预览 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">主要文件是；</span><br><span class="line"></span><br><span class="line">html + css + js + image</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="图床的实现；"><a href="#图床的实现；" class="headerlink" title="图床的实现；"></a>图床的实现；</h3><ul><li><p>繁琐方式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过 CSDN 上传图片获取 图片外连接 </span><br></pre></td></tr></table></figure></li><li><p>图床效果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019144153499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="实现图床"></p></li><li><p>步骤演示</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201019144425216.gif#pic_center" alt="步骤演示"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-基础</title>
      <link href="2020/10/18/Javascript-%E5%9F%BA%E7%A1%80/"/>
      <url>2020/10/18/Javascript-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="基础"><a href="#基础" class="headerlink" title="基础:"></a>基础:</h3><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x); <span class="comment">// undefind</span></span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(x); <span class="comment">// 直接报错</span></span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="let-、const的区别"><a href="#let-、const的区别" class="headerlink" title="let 、const的区别:"></a><code>let 、const</code>的区别:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">let</span>  和 <span class="keyword">const</span> 不存在变量提升</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> <span class="keyword">let</span> 和 <span class="keyword">const</span> 在同一个作用域下不能重复定义相同的一个变量名称</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> <span class="keyword">let</span> 和 <span class="keyword">const</span> 有严格的作用域 块级作用域</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">99</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(c); <span class="comment">// 99</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(d); <span class="comment">// Uncaught SyntaxError: Identifier &#x27;d&#x27; has already been declared</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p><code>const</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></table></figure></li><li><p><code>let</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">12</span>;</span><br><span class="line">age = <span class="number">30</span>;</span><br><span class="line"><span class="built_in">console</span>.log(age); <span class="comment">// 30</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">作用域:</span><br><span class="line">    <span class="number">1.</span> 全局作用域 </span><br><span class="line">    <span class="number">2.</span> 局部作用域</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> 属于函数作用域 -- &gt; 全局</span><br><span class="line"></span><br><span class="line">    <span class="comment">// var 关键字</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">1000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">f(); <span class="comment">// 输出结果: 1000 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> -- &gt; 块级作用域</span><br><span class="line"></span><br><span class="line">   <span class="comment">// let、const 关键字</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> a = <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="number">1000</span>;</span><br><span class="line">     &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(a);</span><br><span class="line">   &#125;</span><br><span class="line">   f(); <span class="comment">// 输出结果: 100</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>  声明一个只读的常量、一旦定义、常量的值不能改变的</span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数:"></a>箭头函数:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">let</span> f = <span class="function"><span class="params">v</span>=&gt;</span>v;</span><br><span class="line"></span><br><span class="line">等价于:</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> <span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line">等价于:</span><br><span class="line"><span class="keyword">let</span> f = <span class="function">()=&gt;</span><span class="number">123</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> <span class="keyword">let</span> f = <span class="function">(<span class="params">n1,n2</span>)=&gt;</span>n1+n2;</span><br><span class="line">等价于:</span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params">n1,n2</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n1+n2;</span><br><span class="line">    &#125;</span><br><span class="line">    f(<span class="number">10</span>,<span class="number">20</span>); <span class="comment">// 结果: 30</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span> <span class="comment">// 返回对象的箭头函数</span></span><br><span class="line"><span class="keyword">let</span> f = <span class="function">(<span class="params">n1, n2</span>) =&gt;</span> (&#123; <span class="attr">n1</span>: <span class="number">10</span>, <span class="attr">n2</span>: <span class="number">20</span> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(f()); <span class="comment">// &#123; n1: 10, n2: 20 &#125;</span></span><br><span class="line"></span><br><span class="line">等价于:</span><br><span class="line"><span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    n1: <span class="number">10</span>,</span><br><span class="line">    n2: <span class="number">20</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(a()); <span class="comment">// &#123; n1: 10, n2: 20 &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span> 指向定义</span><br></pre></td></tr></table></figure><h3 id="Set-和-Map："><a href="#Set-和-Map：" class="headerlink" title="Set 和 Map："></a><code>Set </code>和 <code>Map</code>：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set 似与数组 成员是唯一的</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>(); </span><br><span class="line">s.add(<span class="number">1</span>).add(<span class="number">2</span>).add(<span class="number">3</span>); <span class="comment">// 链式添加</span></span><br><span class="line"><span class="built_in">console</span>.log(s); <span class="comment">// Set &#123; 1, 2, 3 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以添加并实现数组去重</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">23</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="keyword">new</span> <span class="built_in">Set</span>(arr);</span><br><span class="line"><span class="built_in">console</span>.log(s2); <span class="comment">// Set &#123; 1, 23, 22, 2 &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...  扩展运算 参数序列</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> new_arr = [...arr];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(new_arr); <span class="comment">// 【1，2，3】</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组去重 并返回数组</span></span><br><span class="line"><span class="keyword">var</span> arrs = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">var</span> a = [...new <span class="built_in">Set</span>(arrs)];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// [ 1, 4, 3, 5, 6 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// map 类似于对象 键值对的方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">m.set(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;gg&#x27;</span>).set(<span class="string">&#x27;age&#x27;</span>,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速添加 二维数组一样【[],[]】</span></span><br><span class="line"><span class="keyword">let</span> m2 = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&quot;name&quot;</span>, <span class="string">&quot;ggd&quot;</span>], [<span class="string">&quot;age&quot;</span>, <span class="number">16</span>]]); <span class="comment">// Map的键可以是任意类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for of</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [k, v] <span class="keyword">of</span> m2) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log((k+<span class="string">&quot;:&quot;</span>+v));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历的结果 </span></span><br><span class="line">name:ggd</span><br><span class="line">age:<span class="number">16</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript的基本数据类型"><a href="#JavaScript的基本数据类型" class="headerlink" title=" JavaScript的基本数据类型:"></a><code> JavaScript</code>的基本数据类型:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span> 数字</span><br><span class="line"><span class="number">2.</span> 字符串</span><br><span class="line"><span class="number">3.</span> 布尔值</span><br><span class="line"><span class="number">4.</span> <span class="literal">undefined</span></span><br><span class="line"><span class="number">5.</span> <span class="literal">null</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="amp-amp-求-假"><a href="#amp-amp-求-假" class="headerlink" title="&amp;&amp;(求 假):"></a><code>&amp;&amp;(求 假)</code>:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">一假则假</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _num = <span class="number">5</span> &amp;&amp; <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(_num); <span class="comment">// 8 先判断 &amp;&amp; 之前是否为真,为真将 &amp;&amp; 后面的值赋给逻辑表达式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _num = <span class="number">0</span> &amp;&amp; <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(_num); <span class="comment">// 0 前面的值为假,就将前面的值赋给逻辑表达式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="求-真"><a href="#求-真" class="headerlink" title="||(求 真):"></a><code>||(求 真)</code>:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">一真则真</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _num = <span class="number">5</span> || <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(_num); <span class="comment">// true  先判断 || 之前是否为真,如果为真将值赋逻辑表达</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _num = <span class="number">0</span> || <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(_num); <span class="comment">// true // 如果前面得值为假,那么就取后面得值赋给逻辑表达式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="！"><a href="#！" class="headerlink" title="！ :"></a><code>！</code> :</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">非真即假,非假即真</span><br></pre></td></tr></table></figure><h2 id="amp-amp-、-、！"><a href="#amp-amp-、-、！" class="headerlink" title="&amp;&amp;、||、！:"></a><code>&amp;&amp;、||、！</code>:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a &gt; <span class="number">8</span> &amp;&amp; a &lt; <span class="number">9</span>); <span class="comment">//  false 先判断 &amp;&amp; 之前是否为真,为真将 &amp;&amp; 后面的值赋给逻辑表达</span></span><br><span class="line"><span class="built_in">console</span>.log(a &gt; <span class="number">8</span> &amp;&amp; a &lt; <span class="number">100</span>); <span class="comment">// true </span></span><br><span class="line"><span class="built_in">console</span>.log(a &lt; <span class="number">0</span> || a &gt; <span class="number">8</span>); <span class="comment">//  true</span></span><br><span class="line"><span class="built_in">console</span>.log(a &gt; <span class="number">100</span> || a &lt; <span class="number">0</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(a &gt; <span class="number">10</span> / <span class="number">2</span> &amp;&amp; a &lt; <span class="number">10</span> % <span class="number">8</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(!(a &gt; <span class="number">0</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(!(a &gt; <span class="number">10</span> / <span class="number">2</span> + <span class="number">3</span>) || a &lt; (<span class="number">10</span> % <span class="number">8</span>) * <span class="number">6</span>); <span class="comment">//  true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**</span><br><span class="line">    a = <span class="number">0</span> &amp;&amp; <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">var</span> b = a &gt; <span class="number">8</span> &amp;&amp; a &lt; <span class="number">9</span>; <span class="comment">//false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符:"></a>三目运算符:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">三目运算符: </span><br><span class="line"></span><br><span class="line">    先执行第一个表达式(也就是 ? 前面的表达式),看这个表达式是否为真</span><br><span class="line">    如果第一个表达式的值为真,那么吧冒号前面的值,赋值给整个表达式</span><br><span class="line">    如果第一个表达式的值为假,那么吧冒号后面的值,赋值给整个表达式</span><br><span class="line">          </span><br><span class="line"><span class="keyword">var</span> year = <span class="number">2020</span>;</span><br><span class="line"><span class="keyword">var</span> _year = ( year % <span class="number">4</span> ==<span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>) ? <span class="built_in">console</span>.log(<span class="string">&#x27;润年&#x27;</span>) : <span class="built_in">console</span>.log(<span class="string">&#x27;平年&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(_year); <span class="comment">// 闰年</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">var</span> c = a &gt; <span class="number">0</span> ? ++b + a++ : --a + b; </span><br><span class="line"><span class="comment">// console.log(++b,a++,--a+b); 8 6 14</span></span><br><span class="line"><span class="built_in">console</span>.log(c); <span class="comment">//  14</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="比较运算符："><a href="#比较运算符：" class="headerlink" title="比较运算符："></a>比较运算符：</h3><blockquote><ul><li><code>==</code> 判断的是<code>值</code>是否一致</li><li><code>===</code>判断的是<code>类型</code>和<code>值</code>是否都一致 都一致才会为 <code>true</code>  严格判断</li></ul></blockquote><h3 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换:"></a>数据类型的转换:</h3><ol><li><p>数据类型的强制转换</p><ul><li><p><code>number()</code> 强制将一个其他类型的数据转换为数字类型,转不了就是 <code>NaN</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> _Isnum;</span><br><span class="line">_Isnum = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(_Isnum)); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">_Isnum = <span class="string">&#x27;  &#x27;</span>; </span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(_Isnum));<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">_Isnum = <span class="string">&#x27;aa123asas&#x27;</span> </span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(_Isnum)); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line">_Isnum = <span class="number">1.3</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(_Isnum)); <span class="comment">// 1.3 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>通常情况下是用来转字符串的<ul><li>如果字符串整体是一个数字,那么就转化为这个<code>数子</code></li><li>如果字符串是一个<code>特殊的空字符串</code>,那么就转换为<code>0</code>,</li><li>如果字符串整体来看不是一个数字,那就转换为<code>NaN</code></li></ul></li></ul></li><li><p><code>String()</code> 强制将一个其他类型数据转换为字符串类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> IsString = <span class="number">1</span>;</span><br><span class="line">IsString = <span class="built_in">String</span>(IsString);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> IsString); <span class="comment">// string</span></span><br></pre></td></tr></table></figure></li><li><p><code>Boolean()</code> 强制将一个其他类型数据转化为 <code>boolean</code>类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> IsBoolean = <span class="number">6</span>;</span><br><span class="line">IsBoolean = <span class="built_in">Boolean</span>(IsBoolean)</span><br><span class="line"><span class="built_in">console</span>.log(IsBoolean); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li><p>转换数字的时候,除了<code>0</code>是<code>false</code>,其余都是<code>true</code></p></li><li><p>转换字符串的时候,除了空字符串是<code>false</code>,其余都是<code>true</code></p></li><li><p>转换 <code>undefined</code>和<code>null</code>都是<code>false</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;----------------------Boolean 转换 undefined 和 null----------------------&quot;</span>);</span><br><span class="line"><span class="comment">// Boolean 转换 undefined 和 null</span></span><br><span class="line">IsBoolean = <span class="built_in">Boolean</span>(<span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">console</span>.log(IsBoolean); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">IsBoolean = <span class="built_in">Boolean</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="built_in">console</span>.log(IsBoolean); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>数据类型的隐式转换</p><ul><li><p>各种类型在适当的场合会发生隐式转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;------------------- 隐式类型的转换 -------------------&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">var</span> b = a + <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b); <span class="comment">// number b = 15</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> d = a + <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">typeof</span> d); <span class="comment">// number d = 5</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> c = a + <span class="string">&#x27;12&#x27;</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">typeof</span> c); <span class="comment">// string c = 512</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>主要是运算和条件判断过程中</p></li></ul></li><li><p>数据类型的手动转换(在字符串中提取数字)</p><ul><li><code>parseInt()</code></li><li><code>parseFloat()</code></li></ul></li></ol><h3 id="语句结构分类"><a href="#语句结构分类" class="headerlink" title="语句结构分类:"></a>语句结构分类:</h3><h4 id="if判断"><a href="#if判断" class="headerlink" title="if判断:"></a><code>if</code>判断:</h4><h4 id="单分支"><a href="#单分支" class="headerlink" title="单分支:"></a>单分支:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(一般都是一个表达式,但是最终都会转化为 boolean)&#123;</span><br><span class="line">  代码块; <span class="comment">// 表达式为 true 则执行该代码块</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>  双分支(三元表达式)</p></blockquote><h5 id="if判断案例"><a href="#if判断案例" class="headerlink" title="if判断案例"></a><code>if</code>判断案例</h5><ul><li><p>单分支(输入钱数,如果超过 <code>100</code>万我就去学习)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> money = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">if</span> (money &gt; <span class="number">1000000</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我爱学习!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>双分支</p><ul><li>天气好就去看电影,不好就写代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weather = <span class="string">&quot;sunday&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (weather == sunday) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;天气很好,今天我该出去看电影了!&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;算了,今天又是应该努力的时候了!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>输入一个数,这个数大于<code>0</code>就继续写代码,不大于<code>0</code>，嗯嗯，我应该睡觉了!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _number = <span class="built_in">parseInt</span>(prompt(<span class="string">&quot;请输入一个数字: &quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (_number &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;继续写代码··········&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;enen,我应该睡觉了········&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>多分支</p><ul><li>输入体重判断属于什么样的体重</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _weight = <span class="built_in">parseFloat</span>(prompt(<span class="string">&quot;请输入你的体重: &quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (_weight &lt; <span class="number">50</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;你需要稍微补充一些能量················&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_weight &lt; <span class="number">60</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;请保持·············&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_weight &lt; <span class="number">70</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;请您每天坚持锻炼···········&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;接下来,让我们··········&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>输入钱数,根据钱的数量去购买新设备</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _moneyE = <span class="built_in">parseFloat</span>(prompt(<span class="string">&quot;请输入你拥有的钱数: &quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (_moneyE &lt; <span class="number">30</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;买鼠标·········&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_moneyE &gt;= <span class="number">100</span> &amp;&amp; _moneyE &lt;= <span class="number">300</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;买键盘···········&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_moneyE &gt;= <span class="number">2000</span> &amp;&amp; _moneyE &lt;= <span class="number">5000</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我可以买全新的设备了············&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;算了,我可以在等等·············&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>分支嵌套</p><ul><li><code>92</code>汽油和<code>96</code>号汽油</li><li>92号汽油单价<code>5元/L</code> 如果加的超过<code>30L</code>就<code>4元/L</code></li><li><code>96</code>号汽油单价<code>6元/L</code> 如果加超过<code>40L</code>就<code>5元/L</code></li><li>最后花了多钱?</li></ul></li></ul><h3 id="switchcase分支语句"><a href="#switchcase分支语句" class="headerlink" title="switchcase分支语句:"></a><code>switchcase</code>分支语句:</h3><ul><li><p>输入一个数字,判断是星期几</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> _date = <span class="built_in">parseInt</span>(prompt(<span class="string">&quot;请输入1~7之间的数: &quot;</span>));</span><br><span class="line"><span class="keyword">switch</span> (_date) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;请输入有效数字··········&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输入分数,判断优良差和不及格</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> _score = <span class="built_in">parseInt</span>(prompt(<span class="string">&quot;请输入分数: &quot;</span>));</span><br><span class="line"><span class="keyword">switch</span> (_score&gt;<span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">case</span> _score &gt; <span class="number">0</span> &amp;&amp; _score &lt; <span class="number">60</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;不及格···&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> _score &gt;= <span class="number">60</span> &amp;&amp; _score &lt;= <span class="number">75</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;中等···&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> _score &gt;= <span class="number">75</span> &amp;&amp; _score &lt;= <span class="number">85</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;良好···&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> _score &gt;= <span class="number">85</span> &amp;&amp; _score &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;优秀···&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;请输入有效成绩···&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环:"></a><code>for</code>循环:</h3><ul><li><p>循环的含义(为什么要循环)</p></li><li><p>循环语法</p><ul><li><p>打印 <code>1~100</code>之间的数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>打印<code>1~100</code>之间的偶数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>计算<code>1~100</code>的数字和</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">  _sum += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(_sum);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="强化练习"><a href="#强化练习" class="headerlink" title="强化练习:"></a>强化练习:</h3><ul><li><p>打印<code>100~300</code>之间所有能被<code>3</code>或者<code>7</code>整除的数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">100</span>; i &lt;= <span class="number">300</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span> || i % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>打印三位数位上有<code>3</code>或者<code>7</code>的数字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">100</span>; i &lt; <span class="number">999</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> _g = (i % <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> _s = <span class="built_in">parseInt</span>((i / <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">var</span> _b = <span class="built_in">parseInt</span>(i / <span class="number">100</span>);</span><br><span class="line">  <span class="keyword">var</span> _res =  _g == <span class="number">3</span> || _g == <span class="number">7</span> || _s == <span class="number">3</span> || _s == <span class="number">7</span> || _b == <span class="number">3</span> || _b == <span class="number">7</span>;</span><br><span class="line">  <span class="keyword">if</span> (_res) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>计算<code>100</code>的阶乘 == <code>1*2*3···*100</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _Multiply = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">  _Multiply *= i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(_Multiply);</span><br></pre></td></tr></table></figure></li><li><p>求 <code>100-999</code>之间的水仙花数<code>Eg. abc = a^3+b^3+c^3</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> _g = (i % <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> _s = <span class="built_in">parseInt</span>((i / <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">var</span> _b = <span class="built_in">parseInt</span>(i / <span class="number">100</span>);</span><br><span class="line">  <span class="keyword">var</span> _res = _g * _g * _g + _s * _s * _s + _b * _b * _b;</span><br><span class="line">  <span class="keyword">if</span> (i == _res) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输出<code>100-200</code>之间所有的素数(质数)(只能被<code>1</code>和自身整除的数)</p><ul><li><p>方法一<code>标志位</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">100</span>; i &lt;= <span class="number">200</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">      flag = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// falg = false</span></span><br><span class="line">  <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    <span class="comment">// 不会执行</span></span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">  flag = <span class="literal">true</span>; <span class="comment">// 重置标志位 因为每个数都要重新去循环执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>计数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">100</span>; i &lt;= <span class="number">200</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">      num++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">// num == 2 暂时没理解</span></span><br><span class="line">  <span class="keyword">if</span> (num == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">  num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>求<code>1!+2!+3!+···+20!</code>的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _Multiply = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// 内层循环进行累乘</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">    _Multiply *= j;</span><br><span class="line">  &#125;</span><br><span class="line">  sum += _Multiply;</span><br><span class="line">  _Multiply = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure></li><li><p>完成一个等腰直角三角形的打印</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// j 打印空格</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span> - i; j++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;&amp;nbsp;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// k 打印星</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span> * i + <span class="number">1</span>; k++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">效果图:</span><br><span class="line">      *</span><br><span class="line">     ***</span><br><span class="line">    *****</span><br><span class="line">   *******</span><br><span class="line">  *********</span><br><span class="line"> ***********</span><br><span class="line">*************</span><br></pre></td></tr></table></figure></li><li><p>打印圣诞树</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ChristmasTree</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// j 打印空格</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span> - i; j++) &#123;</span><br><span class="line">      <span class="built_in">document</span>.write(<span class="string">&quot;&amp;nbsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// k 打印星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span> * i + <span class="number">1</span>; k++) &#123;</span><br><span class="line">      <span class="built_in">document</span>.write(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">ChristmasTree();</span><br><span class="line"><span class="comment">// 第二层三角形</span></span><br><span class="line">ChristmasTree();</span><br><span class="line"><span class="comment">// 矩形块</span></span><br><span class="line"><span class="comment">// 外层都是控制行数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// 内层完成实际操作</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;&amp;nbsp;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">效果图:</span><br><span class="line">      *</span><br><span class="line">     ***</span><br><span class="line">    *****</span><br><span class="line">   *******</span><br><span class="line">  *********</span><br><span class="line"> ***********</span><br><span class="line">*************</span><br><span class="line">      *</span><br><span class="line">     ***</span><br><span class="line">    *****</span><br><span class="line">   *******</span><br><span class="line">  *********</span><br><span class="line"> ***********</span><br><span class="line">*************</span><br><span class="line">    *****</span><br><span class="line">    *****</span><br><span class="line">    *****</span><br></pre></td></tr></table></figure></li><li><p>打印直角三角形</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// k 打印星</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span> * i + <span class="number">1</span>; k++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">效果:</span><br><span class="line">*</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">*******</span><br><span class="line">*********</span><br><span class="line">***********</span><br><span class="line">*************</span><br></pre></td></tr></table></figure></li><li><p>打印九九乘法口诀表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="continue与break关键字"><a href="#continue与break关键字" class="headerlink" title="continue与break关键字:"></a><code>continue</code>与<code>break</code>关键字:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">continue</span>; 结束当前循环 <span class="keyword">continue</span>以下的代码块不会执行,从下一次开始继续</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>; 在循环当中,跳出离他最近的那层循环,如果是多层循环要注意</span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象:"></a>对象:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象 字面量创建 姓名 年龄 性别 爱好(动作)</span></span><br><span class="line"><span class="keyword">var</span> Info = &#123;</span><br><span class="line">  name: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  age: <span class="number">18</span>,</span><br><span class="line">  gender: <span class="string">&quot;male&quot;</span>,</span><br><span class="line">  hobby: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;我爱JavaScript····&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Info);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">Info.hobby();</span><br></pre></td></tr></table></figure><h3 id="内置对象："><a href="#内置对象：" class="headerlink" title="内置对象："></a>内置对象：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内置对象</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(arr)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(arr.length);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;····&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组案例"><a href="#数组案例" class="headerlink" title="数组案例:"></a>数组案例:</h3><ul><li><p>数组概念</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数组概念:  数组是一个具有相同类型或者不同类型的数据有序集合</span><br><span class="line">   </span><br><span class="line">为什么要有数组:</span><br><span class="line"></span><br><span class="line">当我们想要一次性拿到很多数据,如果没有数组,就得定义很多变量取存储</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>数组<code>length</code>,索引(下标)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只要定义一个数组,数组里面就会有一个默认的属性叫 length,他代表数组的长度</span><br><span class="line"></span><br><span class="line">索引也被叫做下标,通常情况下只要我们知道了索引,就可以拿到这个数组对应的这个索引的值</span><br></pre></td></tr></table></figure></li><li><p>数组的增删改查(底层过程)</p><ul><li><p>数组的定义方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [值<span class="number">1</span>,值<span class="number">2</span>,···];</span><br></pre></td></tr></table></figure></li><li><p>构造函数定义数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(值);</span><br></pre></td></tr></table></figure></li><li><p>在数组的末尾添加一个数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="comment">// 在数组的末尾添加一个数</span></span><br><span class="line">arr[arr.length] = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">  <span class="number">8</span>,  <span class="number">4</span>,  <span class="number">5</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>在数组的中间添加一个数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">or (<span class="keyword">var</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">2</span>; i--) &#123;</span><br><span class="line">    arr[i + <span class="number">1</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="number">120</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">    [</span><br><span class="line">      <span class="number">8</span>, <span class="number">4</span>,  <span class="number">5</span>, <span class="number">120</span>,</span><br><span class="line">      <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></li><li><p>在数组的头部添加一个数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = arr.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">    arr[i + <span class="number">1</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">    [</span><br><span class="line">      <span class="number">100</span>, <span class="number">4</span>,  <span class="number">4</span>, <span class="number">5</span>,</span><br><span class="line">        <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span></span><br><span class="line">    ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>演示</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/Array.gif" alt="Array添加底层过程"></p></li><li><p>分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>]; <span class="comment">// arr.length = 6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = arr.length -<span class="number">1</span>; <span class="comment">// i = 5</span></span><br><span class="line">arr[i+<span class="number">1</span>] == arr[<span class="number">6</span>]</span><br><span class="line">arr[i] = arr[<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">arr[i+<span class="number">1</span>] = arr[i] <span class="comment">//  再进行理解</span></span><br><span class="line"></span><br><span class="line">在循环中,将元素后移···</span><br><span class="line"></span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">100</span>; <span class="comment">// 就将处于首位</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>数组删除</p><ul><li><p>在头部删除</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i - <span class="number">1</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr.length--;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出: [ <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span> ]</span><br></pre></td></tr></table></figure></li><li><p>在中间删除</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="comment">// 在中间删除</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">4</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i - <span class="number">1</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr.length--;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出: [ <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span> ]</span><br></pre></td></tr></table></figure></li><li><p>任意位置删除</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _index = <span class="built_in">parseInt</span>(prompt(<span class="string">&#x27;请输入要删除的位置: &#x27;</span>));</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="comment">// 在中间删除</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = _index; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i - <span class="number">1</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr.length--;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure></li><li><p>在末尾删除</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line">arr.length--;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出: [ <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span> ]</span><br></pre></td></tr></table></figure></li><li><p>查询数组下标</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组查询下标*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] == <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">输出:</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>数组求和</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组求和</span></span><br><span class="line"><span class="keyword">var</span> arrys = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrys.length; i++) &#123;</span><br><span class="line">  sum += arrys[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>求数组最大值、最小值，平均值</p><ul><li><p>最大值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> max = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">        max = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(max);</span><br></pre></td></tr></table></figure></li><li><p>最小值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> min = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">        min = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(min);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>根据班级人数输入每个人的分数,求平均值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据班级人数输入没个人的分数,求平均值</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  arr[i] = <span class="built_in">parseInt</span>(prompt(<span class="string">&quot;请输入第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;位的分数&quot;</span>));</span><br><span class="line">  sum += arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> average = sum / <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="built_in">console</span>.log(average);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>反转数组</p><ul><li><p>反转新数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 反转新数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    newArr[newArr.length] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newArr);</span><br><span class="line">输出:</span><br><span class="line">[ <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">50</span>, <span class="number">4</span>, <span class="number">8</span> ]</span><br></pre></td></tr></table></figure></li><li><p>反转原数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 翻转原数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> temp = arr[i];</span><br><span class="line">    arr[i] = arr[arr.length - <span class="number">1</span> - i];</span><br><span class="line">    arr[arr.length - <span class="number">1</span> - i] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">[ <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">50</span>, <span class="number">4</span>, <span class="number">8</span> ]</span><br></pre></td></tr></table></figure></li><li><p><code>JS方法</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">arr.reverse();</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>冒泡排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="comment">// 外层循环控制轮数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 能层循环控制比较次数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[j]&lt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">            arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">            arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br></pre></td></tr></table></figure></li><li><p><code>sort()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line">arr.sort()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p><code>sort</code>升序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// a 位于 b之前</span></span><br><span class="line">  <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr.sort(compare); <span class="comment">//升序</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">简化(<span class="keyword">if</span>···<span class="keyword">else</span>): </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a-b</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>sort</code>降序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 降序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// a 位于 b之前</span></span><br><span class="line">  <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr.sort(compare); <span class="comment">//降序</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">简化；</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> b-a</span><br></pre></td></tr></table></figure></li><li><p><code>三元运算</code>:</p></li></ul></li><li><p>数组去重</p><ul><li><p>去除所有重复元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> distinct = [...new <span class="built_in">Set</span>(arr)]</span><br><span class="line"><span class="built_in">console</span>.log(distinct);</span><br><span class="line">输出:</span><br><span class="line">    [</span><br><span class="line">      <span class="number">8</span>, <span class="number">4</span>, <span class="number">50</span>,  <span class="number">6</span>, <span class="number">1</span>,</span><br><span class="line">      <span class="number">2</span>, <span class="number">3</span>,  <span class="number">9</span>, <span class="number">10</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></li><li><p>去除数组中指定的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组去重 指定元素去重</span></span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] != <span class="number">3</span>) &#123;</span><br><span class="line">        newArr[newArr.length] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newArr);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line"></span><br><span class="line">[ <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span> ]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>合并数组,原生实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat(多值(逗号分隔)···)</span><br></pre></td></tr></table></figure></li><li><p>数组转换为字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> stringA = arr.toString();</span><br><span class="line"><span class="built_in">console</span>.log(stringA); <span class="comment">// 6</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> stringA); <span class="comment">// string</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>toString()</code></li><li><code>toLocaleString()</code></li><li><code>join()</code> 以指定字符分割</li></ul></li></ul><h3 id="栈-lifo-last-in-first-out-方法队列方法："><a href="#栈-lifo-last-in-first-out-方法队列方法：" class="headerlink" title="栈(lifo last -in-first-out)方法队列方法："></a>栈<code>(lifo last -in-first-out)</code>方法队列方法：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ push() 在数组最后一项添加</span><br><span class="line"></span><br><span class="line">+ pop() 在数组末尾删除</span><br><span class="line"></span><br><span class="line">+ shift() <span class="comment">// 首个删除</span></span><br><span class="line"></span><br><span class="line">+ unshift() <span class="comment">// 首个添加</span></span><br></pre></td></tr></table></figure><ul><li><p><code>push()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line">arr.push(<span class="string">&quot;a&quot;</span>, <span class="number">1</span>); <span class="comment">// 添加两个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">    [</span><br><span class="line">      <span class="number">8</span>, <span class="number">4</span>,  <span class="number">5</span>,   <span class="number">6</span>,</span><br><span class="line">      <span class="number">9</span>, <span class="number">10</span>, <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></li><li><p><code>pop()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> lastItem = arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(lastItem);</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line">输出:</span><br><span class="line"><span class="number">10</span> <span class="comment">// lastItem</span></span><br><span class="line">[ <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span> ] <span class="comment">// 删除后的新数组</span></span><br></pre></td></tr></table></figure></li><li><p><code>shift()</code></p></li><li><p><code>unshift()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="comment">// 首位添加元素 100</span></span><br><span class="line">newLength = arr.unshift(<span class="number">100</span>);</span><br><span class="line"><span class="comment">// 输出新数组长度</span></span><br><span class="line"><span class="built_in">console</span>.log(newLength);</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="comment">// 获取数组的首位元素</span></span><br><span class="line"><span class="keyword">var</span> firstItem = arr.shift();</span><br><span class="line"><span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(firstItem); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">数组新长度: <span class="number">7</span></span><br><span class="line">新数组:</span><br><span class="line">    [</span><br><span class="line">      <span class="number">100</span>, <span class="number">8</span>,  <span class="number">4</span>, <span class="number">5</span>,</span><br><span class="line">        <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span></span><br><span class="line">    ]</span><br><span class="line">首位: <span class="number">100</span></span><br><span class="line">删除后: [ <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span> ]</span><br></pre></td></tr></table></figure></li><li><p>函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数 提示用户输入账号和密码,实现登录成功效果,再次提示</span></span><br><span class="line"><span class="keyword">var</span> userId = prompt(<span class="string">&#x27;请输入您的账号: &#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> userpassword = prompt(<span class="string">&#x27;请输入您的密码: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">userId, userpassword</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (userId == <span class="string">&#x27;123&#x27;</span> &amp;&amp; userpassword == <span class="string">&#x27;123&#x27;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&#x27;恭喜您,登录成功!&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&#x27;请您重新输入!&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">login(userId, userpassword);</span><br></pre></td></tr></table></figure></li><li><p>获取数组元素的索引位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;add&#x27;</span>,<span class="string">&#x27;index&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="built_in">console</span>.log(arr.indexOf(<span class="string">&#x27;index&#x27;</span>)); <span class="comment">// 3 只返回满足条件的第一个 没有返回 -1</span></span><br></pre></td></tr></table></figure></li><li><p>字符串操作(截取)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域:"></a>作用域:</h3><ol><li>作用域概念，作用<ul><li>作用域说的是变量起作用的区域或者范围</li><li>作用域的作用,变量在各自的作用域当中起作用</li></ul></li><li> 局部变量和全局变量</li></ol><ul><li>局部变量,在局部作用域当中的变量(函数当中定义的变量)</li><li>全局变量,在全局作用域当中的变量(函数外部定义的变量)</li></ul><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数:"></a>匿名函数:</h3><blockquote><p>匿名函数自调用,不会发生预解析，匿名函数自调用只能执行一次,通常用来做一些项目的初始化</p><p>匿名函数自调用通常可以做:</p><ul><li><p><code>封装代码实现,不把代码暴露出去</code></p></li><li><p><code>可以防止外部的命名空间被污染</code></p></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">匿名函数语法:</span><br><span class="line"></span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line">    &#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值:"></a>函数的返回值:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> </span><br><span class="line"></span><br><span class="line">+ 终止函数</span><br><span class="line">+ 如果函数有 <span class="keyword">return</span> 则返回的是 <span class="keyword">return</span> 后面的值,如果函数没有 <span class="keyword">return</span> 则返回 <span class="literal">undefined</span></span><br></pre></td></tr></table></figure><h3 id="Arguments使用"><a href="#Arguments使用" class="headerlink" title="Arguments使用:"></a><code>Arguments</code>使用:</h3><blockquote><p>当我们不确定有多少个参数传递的时候,可以用 <code>arguments</code> 来获取,在 <code>JavaScript</code> 中,<code>arguments</code>实际上它是当前函数的一个<code>内置对象</code>,所</p><p>有函数都内置了一个<code> arguments</code>对象,<code>arguments</code>对象中存储了传递的所有实参</p></blockquote><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数:"></a>构造函数:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-基础</title>
      <link href="2020/10/17/Linux-%E5%9F%BA%E7%A1%80/"/>
      <url>2020/10/17/Linux-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="准本工作"><a href="#准本工作" class="headerlink" title="准本工作"></a>准本工作</h3><ul><li><p><code>Centos</code>连接用户信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">login: root</span><br><span class="line"></span><br><span class="line">passwd: aidou123456</span><br></pre></td></tr></table></figure></li><li><p>基本权限符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 超级用户提示符</span></span><br><span class="line"></span><br><span class="line">$ 普通用户提示符</span><br><span class="line"></span><br><span class="line">~ 当前所在家目录</span><br></pre></td></tr></table></figure></li></ul><h3 id="Centos-7-安装后没有网络的解决方案："><a href="#Centos-7-安装后没有网络的解决方案：" class="headerlink" title="Centos 7 安装后没有网络的解决方案："></a>Centos 7 安装后没有网络的解决方案：</h3><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><ol><li><p>设置 - 网络适配器 - <code>NAT模式(wlan可以选择桥接模式)</code></p></li><li><p>进入 <code>Linux终端 </code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 进入 网卡配置信息目录</span></span><br><span class="line"> <span class="built_in">cd</span> /etc/sysconfig/network-scripts</span><br><span class="line"><span class="comment"># 查看具体信息</span></span><br><span class="line">ls </span><br><span class="line"><span class="comment"># 编辑该文件 ens33 每个电脑应该不相同,但以 ifcfg- 开头</span></span><br><span class="line">vi ifcfg-ens33</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>文件解读（配置两个）</p><ul><li><p>公网访问配置</p><details ><summary> ifcfg-ens33-公网访问配置 </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 个人配置项 默认配置项忘记预留 ifconfig/ip addr</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line"></span><br><span class="line">-------- 保存退出 ------------</span><br><span class="line">esc: wq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">service network restart</span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">ping https://www.baidu.com</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>内网配置</p><blockquote><p> <code>再开机启动设置处再添加一个网络适配器</code></p></blockquote><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/nat.png"></li><li><p> 添加 <code>ip</code></p></li></ul>  <details ><summary> 添加内网`IP` </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看已开启的网卡信息 </span></span><br><span class="line">ip -a</span><br><span class="line"><span class="comment"># windows 下</span></span><br><span class="line">控制面板 \ 网络和 Internet \ 网络连接 \ Vmware 网络 [net1 仅主机模式]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入网卡信息配置目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/sysconfig/network-scripts</span><br><span class="line"><span class="comment"># 复制 ifcfg-ens33 到当前目录下</span></span><br><span class="line">cp ifcfg-ens33 new-name</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------</span><br><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEVICE=ens37</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">IPADDR=10.1.1.250 <span class="comment"># 不要和主机同一网段</span></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存退出 重启服务</span></span><br><span class="line">service network restart</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/windowsIP.png">              </div>            </details></li></ul></li></ol><h3 id="主机名永久修改"><a href="#主机名永久修改" class="headerlink" title="主机名永久修改"></a>主机名永久修改</h3><ul><li><p><code>centos7</code>主机名修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network</span><br><span class="line"><span class="comment"># 修改如下配置信息</span></span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=new-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># [主机名和 ip 绑定 前面两个请勿改动 在后续添加即可] 可选操作</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="关闭防火墙-注意权限使用"><a href="#关闭防火墙-注意权限使用" class="headerlink" title="关闭防火墙(注意权限使用)"></a>关闭防火墙(注意权限使用)</h3><ol><li><p>临时关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure></li><li><p>永久关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list | grep iptables</span><br></pre></td></tr></table></figure></li></ol><h3 id="YUM-源配置（请更换aliyun）"><a href="#YUM-源配置（请更换aliyun）" class="headerlink" title="YUM 源配置（请更换aliyun）"></a>YUM 源配置（请更换<code>aliyun</code>）</h3><ul><li><code>yum</code>作用： 类似于 360软件安装管家</li></ul><h4 id="镜像挂载-ISO-镜像文件设置后"><a href="#镜像挂载-ISO-镜像文件设置后" class="headerlink" title="镜像挂载(ISO 镜像文件设置后)"></a>镜像挂载(ISO 镜像文件设置后)</h4><ol><li><p>已挂载在光驱中信息查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[roo@localhost ~]$ lsblk</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0              11:0    1  4.5G  0 rom  /run/media/roo/CentOS 7 x86_64 <span class="comment"># 需要查看信息</span></span><br><span class="line">[roo@localhost ~]$ </span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以只读方式挂载</span></span><br><span class="line">mount -o ro /dev/sr0 /mnt/</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">/dev/sr0                 4.5G  4.5G     0  100% /run/media/roo/CentOS 7 x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看光盘下的目录 [mnt]</span></span><br><span class="line">ls /mnt/</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件告诉<code>yum</code> 工具去那个仓库找</p><details ><summary> yum配置 </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入仓库目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line"><span class="comment"># 查看已有网络源</span></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份已有</span></span><br><span class="line"><span class="comment"># 新建文件见存放已有 repo</span></span><br><span class="line">mkdir backupRepo</span><br><span class="line"><span class="comment"># 移动所有 repo 至 backupRepo目录中</span></span><br><span class="line"> CentOS-* backupRepo/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建文件  光盘镜像源 发现在后续使用有缺陷</span></span><br><span class="line">vi local.repo</span><br><span class="line"><span class="comment"># 添加如下配置</span></span><br><span class="line">[<span class="built_in">local</span>] <span class="comment"># [名称随意]</span></span><br><span class="line">name=xxx <span class="comment"># 描述信息</span></span><br><span class="line">baseurl=file:///mnt <span class="comment"># 必须指定</span></span><br><span class="line">enabled=1 <span class="comment"># 启用仓库</span></span><br><span class="line">gpgcheck=0 <span class="comment"># 不检验 【校验码】</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存 退出</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除 yum 缓存</span></span><br><span class="line">yum clear  all</span><br><span class="line"><span class="comment"># 创建 yum 缓存</span></span><br><span class="line">yum makecache</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure>              </div>            </details> </li><li><p>阿里源更换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. 备份原有镜像源</span><br><span class="line">2. 下载 wget</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">3. 下载新的CentOS-Base.repo 到/etc/yum.repos.d/</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line"></span><br><span class="line">4. 下载aliyun</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo</span><br><span class="line"></span><br><span class="line">5. 清理缓存</span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">6. 生成缓存</span><br><span class="line">yum makecache  </span><br></pre></td></tr></table></figure></li></ol><h3 id="SSH-远程NAT-模式ip不可以连接-需要通过-仅主机模式即为内网ip连接"><a href="#SSH-远程NAT-模式ip不可以连接-需要通过-仅主机模式即为内网ip连接" class="headerlink" title="SSH 远程NAT 模式ip不可以连接,需要通过 仅主机模式即为内网ip连接 "></a>SSH 远程<code>NAT 模式ip不可以连接,需要通过 仅主机模式即为内网ip连接 </code></h3><ul><li><p>检测端口号占用问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstart -a|grep 端口号</span><br><span class="line">ss -a|grep 端口号</span><br><span class="line">lsof -i 端口号</span><br><span class="line">grep 端口号 /etc/services</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/ssh_config </span><br><span class="line"><span class="comment"># 过滤</span></span><br><span class="line">esc: /Port 修改端口号【2209】</span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">service sshd restart</span><br><span class="line"><span class="comment"># 验证连接</span></span><br><span class="line">1. 连接方式一: ssh -l用户名 ip -p端口号</span><br><span class="line">2. ssh 用户名@ip:port 【ip: 使用内网自定义ip可用于连接】</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/ipaddr.png" width="800"><ul><li><p>个人出现了一写问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要原因就是由于使用的光盘镜像中 openssh 包问题,导致 sshd 服务无法启动</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令:"></a>Linux 常用命令:</h3><h4 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h4><ol><li><p>创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p [目录名] (-p递归创建)</span><br></pre></td></tr></table></figure></li><li><p>删除目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf 【目录名】  【-r 删除目录   -f 强制】</span><br></pre></td></tr></table></figure></li><li><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp [选项] [原文件或目录] [目标目录]</span><br><span class="line">[-r 复制目录 -p 连带文件属性复制 -d 若源文件是链接文件，则复制链接属性 -a == -pdr]</span><br></pre></td></tr></table></figure></li><li><p>重命名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv [在移动的基础上进行重命名 cp 命令同样可以进行重命名操作]</span><br></pre></td></tr></table></figure></li></ol><h4 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h4><ul><li><p><code>linux</code>常用目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ /根目录</span><br><span class="line">+ /bin 命令保存目录(普通用户就可以读取)</span><br><span class="line">+ /boot 启动目录，启动相关文件</span><br><span class="line">+ /dev 设备文件保存目录</span><br><span class="line">+ /etc 配置文件保存目录</span><br><span class="line">+ /home 普通用户家目录</span><br><span class="line">+ /lib 系统库保存目录</span><br><span class="line">+ /mnt 系统挂载目录</span><br><span class="line">+ /media 挂载目录</span><br></pre></td></tr></table></figure></li><li><p>文件搜索命令</p><ol><li><p><code>find</code>名令基础使用</p><details ><summary> Find命令基本使用方法 </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">文件搜索命令: locate 文件名[只能是文件名]</span><br><span class="line"></span><br><span class="line">命令搜索命令 whereis 与 <span class="built_in">which</span></span><br><span class="line"></span><br><span class="line">文件搜索命令 find</span><br><span class="line"></span><br><span class="line">字符串搜索命令 grep</span><br><span class="line"></span><br><span class="line">find 命令与 grep 命令的区别</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">搜命令的搜索：</span><br><span class="line"></span><br><span class="line">whereis 命令名</span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> is</span><br><span class="line"></span><br><span class="line">find 命令:</span><br><span class="line"></span><br><span class="line">find 【搜索范围】 【搜索条件】</span><br><span class="line"></span><br><span class="line">find / -name 具体文件名</span><br><span class="line"></span><br><span class="line">通配符:</span><br><span class="line"></span><br><span class="line">    * ? []</span><br><span class="line">    </span><br><span class="line">    find /路径 -name <span class="string">&quot;*&quot;</span>  任意多个</span><br><span class="line">    </span><br><span class="line">    find /root -iname 具体文件名（忽略大小写）</span><br><span class="line">    </span><br><span class="line">    find /root -nouser 没有所有者文件</span><br><span class="line">    </span><br><span class="line">    find /var/<span class="built_in">log</span>/ -mtime +10 （10天前修改的文件）</span><br><span class="line">    </span><br><span class="line">    -10: 10 内修改的文件</span><br><span class="line">     10 10天当天修改的文件</span><br><span class="line">    +10 10天前修改的文件</span><br><span class="line">    </span><br><span class="line">按照文件大小搜索:</span><br><span class="line"></span><br><span class="line">find . -size 25k(k,M 单位)</span><br><span class="line">+25(大于)</span><br><span class="line">-25(小于)</span><br><span class="line"></span><br><span class="line">PATH: 环境变量</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p><code>grep</code> 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">grep 【选项】 字符串 文件名</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line"></span><br><span class="line">-i 忽略大小写</span><br><span class="line"></span><br><span class="line">-v 排除指定字符串</span><br><span class="line"></span><br><span class="line">grep <span class="string">&quot;size&quot;</span> 文件名（xxx）（在xxx 中查找 size 相关的字符串 ）</span><br><span class="line"></span><br><span class="line">grep -v <span class="string">&quot;size&quot;</span> 文件名（xxx）（在 xxx 中不查找 size 相关的字符串 ）</span><br></pre></td></tr></table></figure></li><li><p> <code>find</code>与<code>grep</code> 的区别:</p></li></ol>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find 命令: 在系统当中搜索费和条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配</span><br><span class="line"></span><br><span class="line">grep 命令:  在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式进行匹配，正则表达式包含匹配</span><br></pre></td></tr></table></figure><ol start="4"><li><p>帮助命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man </span><br><span class="line"></span><br><span class="line"><span class="built_in">help</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="压缩与解压缩命令"><a href="#压缩与解压缩命令" class="headerlink" title="压缩与解压缩命令"></a>压缩与解压缩命令</h4><ul><li><p>常见压缩格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">压缩:</span><br><span class="line">    .zip </span><br><span class="line">    .rar</span><br><span class="line">    .bz2</span><br><span class="line"></span><br><span class="line">    .tar.gz</span><br><span class="line">    .tar.bz2</span><br><span class="line">    </span><br><span class="line">   zip 压缩文件名.zip 源文件</span><br><span class="line">   </span><br><span class="line">   zip -r 压缩文件名 源目录 </span><br></pre></td></tr></table></figure></li><li><p>zip 使用</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113743290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>zip file</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113743458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>解压缩命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解压缩:</span><br><span class="line">unzip 压缩文件</span><br></pre></td></tr></table></figure></li><li><p>解压目录压缩文件 <code>unzip one.zip</code> </p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020101811374235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>解压文件 <code>unzip newFile.zip</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113743372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>gzip使用方法</p><details ><summary> gzip使用方法 </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">gzip 源文件</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩为 .gz 格式的压缩文件，源文件会消失</span></span><br><span class="line"></span><br><span class="line">gzip -c 源文件 &gt; 压缩文件</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩为 .gz 格式 源文件保留</span></span><br><span class="line"></span><br><span class="line">gzip -r 目录 <span class="comment"># 测试未通过</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩目录下所有的子文件 但不能压缩目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩:</span></span><br><span class="line"></span><br><span class="line">gzip -d 压缩文件</span><br><span class="line"></span><br><span class="line">gunzip 压缩文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩</span></span><br><span class="line"></span><br><span class="line">bzip 源文件 <span class="comment"># 压缩为 .bz2 格式 不保留源文件</span></span><br><span class="line"></span><br><span class="line">bzip2 -k 源文件 (不能压缩目录) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line"></span><br><span class="line">bzip2 -d 压缩文件（-k 保留压缩文件）</span><br><span class="line"></span><br><span class="line">bunzip2 压缩文件 （-k 保留压缩文件）</span><br></pre></td></tr></table></figure>              </div>            </details></li></ul><h4 id="常用压缩格式"><a href="#常用压缩格式" class="headerlink" title="常用压缩格式"></a>常用压缩格式</h4><ul><li><p>常用压缩格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.tar.gz</span><br><span class="line"></span><br><span class="line">.tar.bz2</span><br></pre></td></tr></table></figure></li><li><p>使用方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf 打包文件名 源文件</span><br><span class="line"></span><br><span class="line">选项: </span><br><span class="line"></span><br><span class="line">-c 打包</span><br><span class="line"></span><br><span class="line">-v </span><br><span class="line"></span><br><span class="line">-f 指定打包的文件名</span><br></pre></td></tr></table></figure></li><li><p><code>.tar.gz</code> 格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .tar.gz 压缩格式</span></span><br><span class="line"></span><br><span class="line">其实 .tar.gz 格式是先打包为 .tar 格式,在压缩为 .gz 格式</span><br><span class="line"></span><br><span class="line">tar -zcvf 压缩包名 .tar.gz 源文件</span><br><span class="line"></span><br><span class="line">选项: </span><br><span class="line"></span><br><span class="line">-z 压缩为 .tar.gz 格式</span><br><span class="line"></span><br><span class="line">-x 解压缩为 .tar.gz 格式</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>tar zcvf </code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018144436364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="tar-gz格式压缩"></p></li><li><p><code>zxvf tar-gz</code></p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018144620489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="解压缩"></p></li><li><p><code>.tar.bz2</code> 压缩格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tar -jcvf 压缩包名.tar.bz2 源文件</span><br><span class="line"></span><br><span class="line">选项；</span><br><span class="line"></span><br><span class="line">-z 压缩为 .tar.bz2 格式</span><br><span class="line"></span><br><span class="line">tar -jxvf 压缩包名.tar.bz2</span><br><span class="line"></span><br><span class="line">-x 解压缩为 .tar.bz2 格式</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>解压到指定位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -jxvf 文件名.tar.bz2 -C xxx/xxx/xxx ( xxx--&gt; 指定的文件路径)</span><br><span class="line"></span><br><span class="line">** 注意: -C 的位置</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020101814505577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>关机和重启命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">关机:</span><br><span class="line"></span><br><span class="line">shutdown -r now</span><br><span class="line"></span><br><span class="line">重启: </span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置VIM编辑器"><a href="#配置VIM编辑器" class="headerlink" title="配置VIM编辑器"></a>配置<code>VIM</code>编辑器</h3><h4 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h4><ul><li><p>配置 vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line">touch .vimrc</span><br><span class="line"><span class="comment"># 写入一下配置信息</span></span><br><span class="line">vim .vimrc</span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span> nu <span class="comment"># 显示行号</span></span><br><span class="line">    syntax on <span class="comment"># 高亮显示</span></span><br><span class="line">    <span class="built_in">set</span> ts=4 <span class="comment"># 制表位</span></span><br><span class="line">    <span class="built_in">set</span> expandtab <span class="comment"># 自动转换 tab</span></span><br><span class="line">    <span class="built_in">set</span> ruler <span class="comment"># 显示光标</span></span><br><span class="line">    <span class="built_in">set</span> nohls <span class="comment"># 关闭搜索高亮</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h4><ol><li><p>显示关闭行号(<code>按下Esc后执行</code>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nonu <span class="comment"># 关闭行号</span></span><br><span class="line"><span class="built_in">set</span> nu <span class="comment"># 显示行号</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>制表键位数设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ts=4</span><br></pre></td></tr></table></figure></li><li><p><code>vim</code>下代码高亮显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">syntax on <span class="comment"># 开启</span></span><br><span class="line">syntax off <span class="comment"># 关闭</span></span><br></pre></td></tr></table></figure></li><li><p>光标所在位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ruler <span class="comment"># 显示光标所在位置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> noruler <span class="comment"># 关闭光标显示</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/ruler.png"></li><li><p>命令模式</p></li></ol><ul><li><p>移动光标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">G <span class="comment"># 光标移到文件末尾</span></span><br><span class="line">200G <span class="comment"># 光标移动到第 200行</span></span><br><span class="line">gg <span class="comment"># 光标移动到行首</span></span><br><span class="line"></span><br><span class="line">h 左</span><br><span class="line">j 下</span><br><span class="line">k 上</span><br><span class="line">l 右</span><br><span class="line"> </span><br><span class="line"> ctrl + y / ctrl + e 移动一行</span><br><span class="line"> ctrl + f / ctrl + b 翻一页</span><br><span class="line"> </span><br><span class="line"> 0 光标移动到行首</span><br><span class="line"> $ 光标移动到行尾</span><br><span class="line"> w 光标移动到下一个单词</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/LinuxD.png" title="慕课网截图"></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="comment"># 删除光标所在行</span></span><br><span class="line">100dd 从光标所在删除 100 行</span><br></pre></td></tr></table></figure></li><li><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yy <span class="comment"># 复制光标所在行</span></span><br><span class="line"></span><br><span class="line">10yy <span class="comment"># 光标所在行开始复制 10 行</span></span><br><span class="line"></span><br><span class="line">p <span class="comment"># 粘贴</span></span><br><span class="line">10p <span class="comment"># 粘贴 10 遍</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>撤销恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u <span class="comment"># 撤销</span></span><br><span class="line">ctrl + r <span class="comment"># 恢复</span></span><br></pre></td></tr></table></figure></li><li><p>映射快捷键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">map &lt;F2&gt; gg99999dd <span class="comment"># 回到行首 删除 9999行</span></span><br><span class="line"></span><br><span class="line">inoremap _main <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span> </span><br></pre></td></tr></table></figure></li><li><p>多文件操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:ls <span class="comment"># 查看当前打开的所有文件（类似于windows的 windows + Tab,在linux只显示文件名称）</span></span><br><span class="line">:b 数字 <span class="comment"># 显示指定文件</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/lsAllfile.png"></li><li><p>窗口显示(分屏)</p><ul><li><p>水平拆分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换窗口</span></span><br><span class="line">ctrl + ww</span><br></pre></td></tr></table></figure></li><li><p>垂直拆分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vs <span class="comment"># 垂直拆分窗口</span></span><br></pre></td></tr></table></figure></li><li><p>退出窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">qa <span class="comment"># 水平拆分垂直窗口</span></span><br><span class="line"></span><br><span class="line">wqa <span class="comment"># 保存并退出所有窗口</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>中断恢复</p><ul><li><code>shift + r</code></li></ul><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/recover.png"><ul><li><p>删除隐藏文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示隐藏文件 </span></span><br><span class="line">ls -a</span><br><span class="line"></span><br><span class="line">rm -y 上一次中断的执行文件.后缀名.swp</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>命令别名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 别名: 简化输入</span></span><br><span class="line"><span class="built_in">alias</span> 别名 = <span class="string">&#x27;命令&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># alias nl=&#x27;ls -laR&#x27; # 递归显示,</span></span><br></pre></td></tr></table></figure></li><li><p>查找替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全文替换</span></span><br><span class="line">:1,<span class="variable">$s</span>/替换目标/替换为/ci <span class="comment"># c确认 i 忽略大小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前 n 替换</span></span><br><span class="line">:1,10s/替换目标/替换为/ci <span class="comment"># c确认 i 忽略大小写 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一行有多个需要替换就需要添加 g 参数</span></span><br><span class="line">:1,10s/替换目标/替换为/cg <span class="comment"># c确认 g 全局 global</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接替换</span></span><br><span class="line">:1,<span class="variable">$s</span>/替换目标/替换为</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="VIM查找"><a href="#VIM查找" class="headerlink" title="VIM查找"></a><code>VIM</code>查找</h4><blockquote><p><code> ? 或 /</code></p></blockquote><ol><li><p>快捷键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">shift</span> + v | V <span class="comment"># 选中光标所在行</span></span><br><span class="line">  </span><br><span class="line"><span class="built_in">shift</span> + g | G <span class="comment"># 向下选择  </span></span><br></pre></td></tr></table></figure></li><li><p><code>vim</code>主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 末行模式下</span></span><br><span class="line"></span><br><span class="line">:colorscheme (空格一下，按下 ctrl + d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示可选主题</span></span><br><span class="line">    blue       default    desert     evening    koehler    murphy     peachpuff  shine      torte</span><br><span class="line">    darkblue   delek      elflord    industry   morning    pablo      ron        slate      zellner</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以从网络下载主题</span></span><br><span class="line"></span><br><span class="line">https://github.com/flazz/vim-colorschemes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可写入 .vimrc 文件永久配置 存入 git 进行版本控制, 以后方便使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开源: https://github.com/liuchengxu/space-vim (以后配置)</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/autoindent.png" title="python 文件未能实现自动换行"></li><li><p><code>Vim</code>插件配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/sbdchd/neoformat vim 代码格式化插件</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="宏："><a href="#宏：" class="headerlink" title="宏："></a>宏：</h4><ul><li><p>录制宏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">末行模式: q其他字母</span><br></pre></td></tr></table></figure></li><li><p><code>python</code>注释宏录制</p><ul><li><p><code>vim</code>文件</p></li><li><p>按下<code>q</code>，在键入其他字母<code>Eg. a 寄存器名称</code></p></li><li><p>按下<code>i</code></p></li><li><p>添加注释 <code>#</code></p></li><li><p>按下<code>ESC</code>，按下<code>j</code>进入下一行</p></li><li><p>按下<code>q</code>结束宏</p></li><li><p>播放宏</p><ul><li>数字 <code>@a</code></li></ul></li><li><p>演示</p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/repo-bin/raw/master/hong.gif" width="600"></li></ul></li></ul><h3 id="Shell基础"><a href="#Shell基础" class="headerlink" title="Shell基础:"></a>Shell基础:</h3><div class="tabs" id="shell-符号"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#shell-符号-1">管道符</button></li><li class="tab"><button type="button" data-href="#shell-符号-2">通配符</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="shell-符号-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">管道符；</span><br><span class="line"> </span><br><span class="line"> ;</span><br><span class="line"> </span><br><span class="line"> &amp;&amp;</span><br><span class="line"> </span><br><span class="line"> ||</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> 检测:</span><br><span class="line"> </span><br><span class="line"> ls &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 ls 正确执行 输出 yes 否则 no</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="shell-符号-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通配符:</span><br><span class="line"></span><br><span class="line">?</span><br><span class="line">*</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组:"></a>用户和用户组:</h3><div class="tabs" id="用户和用户组"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#用户和用户组-1">认识用户和用户组</button></li><li class="tab"><button type="button" data-href="#用户和用户组-2">创建用户和用户组</button></li><li class="tab"><button type="button" data-href="#用户和用户组-3">删除用户和用户组</button></li><li class="tab"><button type="button" data-href="#用户和用户组-4">户和用户组权限管理</button></li><li class="tab"><button type="button" data-href="#用户和用户组-5">进阶</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="用户和用户组-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用户: 使用操作系统</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户组: 具有相同系统权限的一组用户</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="用户和用户组-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户组</span></span><br><span class="line">groupadd 组名</span><br><span class="line"><span class="comment"># 修改用户组名称</span></span><br><span class="line">groupmod -n 新组名 旧组名</span><br><span class="line"><span class="comment"># 添加组编号</span></span><br><span class="line">groupmod -g 668(组编号) 组名</span><br><span class="line"><span class="comment"># 创建用户组 并添加组编号</span></span><br><span class="line">groupadd -g 888 组名</span><br><span class="line"><span class="comment"># 删除用户组</span></span><br><span class="line">groupdel 组名(必须先删除用户)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户</span></span><br><span class="line"><span class="comment"># 创建用户组</span></span><br><span class="line">groupadd 组名</span><br><span class="line"><span class="comment"># 添加用户</span></span><br><span class="line">useradd -g 组名 用户名1</span><br><span class="line">useradd -g 组名 用户名2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加用户 并指定用户个人文件夹</span></span><br><span class="line">useradd -d /hone/xxx (用户组 可省略) 用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="用户和用户组-3"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对用户添加备注</span></span><br><span class="line">usermod -c 备注信息 用户名</span><br><span class="line"><span class="comment"># 修改用户的文件夹路径</span></span><br><span class="line">usernod -d /home/xxx 用户名</span><br><span class="line"><span class="comment"># 修改用户的所属用户组</span></span><br><span class="line">usermod -g 新用户组名 旧用户组名</span><br><span class="line"><span class="comment"># 删除用户和用户文件夹</span></span><br><span class="line">userdel -r 用户名</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="用户和用户组-4"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止除了root 其他用户登录</span></span><br><span class="line"></span><br><span class="line">touch /etc/nologin</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="用户和用户组-5"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 锁定用户</span></span><br><span class="line">passwd -l 用户名 </span><br><span class="line"><span class="comment"># 解锁用户</span></span><br><span class="line">password -u 锁定的用户名</span><br><span class="line"><span class="comment"># 无密码登录</span></span><br><span class="line">passwd -d 用户名</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端</title>
      <link href="2020/10/15/Web%E5%89%8D%E7%AB%AF/"/>
      <url>2020/10/15/Web%E5%89%8D%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right, please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content">  <script id="hbeData" type="hbeData" data-hmacdigest="15071438a5c9478a2f01722e76402c7e134affc9a1db6151e5178c9f419aec08"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hello, password is required here</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 简历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-添加HTML文件案例</title>
      <link href="2020/10/15/Hexo-%E6%B7%BB%E5%8A%A0HTML%E6%96%87%E4%BB%B6%E6%A1%88%E4%BE%8B/"/>
      <url>2020/10/15/Hexo-%E6%B7%BB%E5%8A%A0HTML%E6%96%87%E4%BB%B6%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 在 Hexo 博客所在的本地地址 --&gt; source --&gt; 新建存放 HTML 文件的夹 --&gt; 子类问价夹</span><br><span class="line"></span><br><span class="line">(index.html,css,js,img)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018114518860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="本地路径"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2. 修改配置文件 _config.yml(在根目录下，不是主题文件夹下的配置文件)</span><br><span class="line"></span><br><span class="line">修改：</span><br><span class="line"></span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line">  - &quot;ZONE/PageDemo/*&quot; </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 新添加注意格式(修改为你本地的路径，，建议路径写全) --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- skip_render: 跳过解析的作用 --&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">3. 修改主题文件夹下的 _config.yml </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  随笔: /tags/随笔/</span><br><span class="line">  相册: /photos</span><br><span class="line">  分类: /categories</span><br><span class="line">  HTMLDemo: /ZONE/PageDemo/  <span class="comment">&lt;!-- 新添加 HTMLDemo --&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">4. 提交预览：</span><br><span class="line"></span><br><span class="line">hexo clean </span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s (本地预览)</span><br><span class="line"></span><br><span class="line">如果出现 4000 端口被占用的情况使用: hexo s -p 新端口号即可</span><br><span class="line"></span><br><span class="line">hexo d </span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5. 过程中出现的问题</span><br><span class="line"></span><br><span class="line">+ source 下的子文件夹第一次提交可能不出现，请等待或再次提交 </span><br><span class="line"></span><br><span class="line">+ css、js、img 保持原样即可不动</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础内容详解</title>
      <link href="2020/10/14/HTML/"/>
      <url>2020/10/14/HTML/</url>
      
        <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">基础概念:</span><br><span class="line"></span><br><span class="line">em: em相对于父元素(倍数···)</span><br><span class="line"></span><br><span class="line">rem: rem相对于根元素(···html)</span><br><span class="line"></span><br><span class="line">body 字体初始大小: <span class="number">16px</span></span><br><span class="line"></span><br><span class="line">html&#123;</span><br><span class="line">font-size: 62.5%; 配合 rem 使用 14 * 62.5% = 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">1.4rem</span>  （<span class="number">14px</span> == <span class="number">14</span>/<span class="number">10</span> = <span class="number">1.4rem</span>）  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 将视窗分为 100 等分 */</span></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">60vw</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="默认样式清除"><a href="#默认样式清除" class="headerlink" title="默认样式清除:"></a>默认样式清除:</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Verdana, Geneva, Tahoma, sans-serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">62.5%</span>; <span class="comment">/* 10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 实际宽度 = width - (border+padding)*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none; <span class="comment">/* 去除超链接下划线 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 内边距 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 外边距 */</span></span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-tag">h6</span>,</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清除浮动 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="media媒体查询"><a href="#media媒体查询" class="headerlink" title="media媒体查询:"></a><code>media</code>媒体查询:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">实现自适应</span><br><span class="line"></span><br><span class="line">@media (max-width: xxx px) and (min-width: xxx px) &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113743254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="尺寸自适应"></p><h3 id="盒子相对页面实现垂直居中"><a href="#盒子相对页面实现垂直居中" class="headerlink" title="盒子相对页面实现垂直居中:"></a>盒子相对页面实现垂直居中:</h3><ul><li><p>定位(需要知道具体宽高的情况)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义一个盒子 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="selector-tag">html</span>,</span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.out-box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">           </span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: -<span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意: `html` 在过程中发现必不可少,缺少(盒子将会向上偏移盒子高度的一半) 将不能实现垂直居中</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113742183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="halfBox"></p></li><li><p>定位(无需具体宽高)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">      <span class="selector-tag">html</span>,</span><br><span class="line">      <span class="selector-tag">body</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">          <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-tag">body</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: relative;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="selector-class">.box</span> &#123;</span><br><span class="line">          <span class="comment">/* 盒子的宽高不可省略 */</span></span><br><span class="line">          <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">          <span class="attribute">background-color</span>: red;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">  </span><br><span class="line">          <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">margin</span>: auto;</span><br><span class="line">      &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* css3属性: 盒子可以让内容撑开 可以没有具体的宽高 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="comment">/* 盒子的宽高不可省略 */</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flex </code>布局：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 根元素 html 不能少 */</span> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="selector-tag">html</span>,</span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">body</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: flex;</span><br><span class="line">            <span class="attribute">justify-content</span>: center;</span><br><span class="line">            <span class="attribute">align-items</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201018113739779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="垂直居中"></p></li></ul><h3 id="img-："><a href="#img-：" class="headerlink" title="img ："></a><code>img </code>：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;img src=&quot;xxx&quot; alt=&quot;&quot; title=&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">其中alt属性是指图片的替换文本，主要有两个作用:</span><br><span class="line"></span><br><span class="line">    ①当根据路径找不到该图片时,作为替换文本出现,不同的浏览器显示形式不一样。</span><br><span class="line"></span><br><span class="line">    ②通过alt 可以让搜索引擎知道该图片的内容是什么,因为搜索引擎无法根据图片识别当前图片显示的内容。</span><br><span class="line"></span><br><span class="line">其中的title属性的作用为:</span><br><span class="line"></span><br><span class="line">title属性的作用是指当鼠标放在图片上的时候会出现对图片的描述信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Web语义化"><a href="#Web语义化" class="headerlink" title="Web语义化:"></a><code>Web</code>语义化:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">什么是Web语义化:</span><br><span class="line"></span><br><span class="line">web语义化包含了html标签语义化和css命名语义化。</span><br><span class="line"></span><br><span class="line">Web 语义化是指使用恰当语义的 html 标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="html-语义化"><a href="#html-语义化" class="headerlink" title="html 语义化:"></a>html 语义化:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> 语义化标签:</span><br><span class="line"></span><br><span class="line">HTML为网页文档内容提供上下文结构和含义。</span><br><span class="line"></span><br><span class="line">html 语义化标签包括 body, article, nav, aside, section, header, footer, hgroup, 还有 h1-h6 address等。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hgroup 元素代表“网页”或“section”的标题，当元素有多个层级时，该元素可以将h1到h6元素放在其内，譬如文章的主标题和副标题组合</span><br><span class="line"></span><br><span class="line">article 代表一个在文档，页面或者网站中自成一体的内容，其目的是为了让开发者独立开发或重用。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">总之，<span class="selector-tag">HTML</span>语义化是反对大篇幅使用无语义化的<span class="selector-tag">div</span>+<span class="selector-tag">span</span>+class，而鼓励使用<span class="selector-tag">HTML</span>定义好的语义化标签。</span><br></pre></td></tr></table></figure><h3 id="CSS语义化"><a href="#CSS语义化" class="headerlink" title="CSS语义化:"></a>CSS语义化:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CSS语义就是 class 和 ID 命名的语义。</span><br><span class="line"></span><br><span class="line">    class 属性作为 <span class="selector-tag">HTML</span> 与 CSS 衔接的纽带，其本意是用来描述元素内容的。指用易于理解的名称对 <span class="selector-tag">html</span> 标签附加的 class 或 id 命名。</span><br><span class="line"></span><br><span class="line">    如果说 <span class="selector-tag">HTML</span> 语义化标签是给机器看的，那么 CSS 命名的语义化就是给人看的。良好的 CSS 命名方式减少沟通调试成本，易于理解。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为什么要语义化？"><a href="#为什么要语义化？" class="headerlink" title="为什么要语义化？"></a>为什么要语义化？</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有利于 SEO</span><br><span class="line"></span><br><span class="line">SEO: SEO 也就是 Search Engine Optimization，搜索引擎优化</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="display的属性值"><a href="#display的属性值" class="headerlink" title="display的属性值:"></a><code>display</code>的属性值:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">none</span> 此元素不会被显示</span><br><span class="line"></span><br><span class="line">block 此元素将显示为块级元素，此元素前后会带有换行符</span><br><span class="line"></span><br><span class="line">inline 默认。此元素会被显示为内联元素，元素前后没有换行符。</span><br><span class="line"></span><br><span class="line">inline-block 行内块元素。</span><br><span class="line"></span><br><span class="line">inheirt 规定应该从父元素继承 <span class="attribute">display</span> 属性的值。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="了解并使用-title-属性："><a href="#了解并使用-title-属性：" class="headerlink" title="了解并使用 title 属性："></a>了解并使用 <code>title</code> 属性：</h3><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201023224859920.png#pic_center" alt="title"></p><h3 id="span-元素的基本使用"><a href="#span-元素的基本使用" class="headerlink" title="span 元素的基本使用:"></a><code>span</code> 元素的基本使用:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是一段文字 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是第二行文字,我们之间有间隙，如何去除间隙？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>css</code> 实现价格变更:</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201023232128752.png#pic_center" alt="del"></p></li><li><p><code>del</code>标签的使用:</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201023232352136.png#pic_center" alt="在这里插入图片描述"></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> 主要的作用是对普通文本进行归类</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="a-和-base-的结合使用"><a href="#a-和-base-的结合使用" class="headerlink" title="a 和 base 的结合使用:"></a><code>a</code> 和 <code>base</code> 的结合使用:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">抽离:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">“_blank”</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/img/bd_logo1.png&quot;</span>&gt;</span> 百度一下 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/s?wd=vue&quot;</span>&gt;</span> 搜索Vue.js <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="锚点链接"><a href="#锚点链接" class="headerlink" title="锚点链接:"></a>锚点链接:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用方式:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#要跳转位置标签的 id值 &quot;</span>&gt;</span> Text <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201023235839211.gif#pic_center" alt="在这里插入图片描述"></p><h3 id="URL"><a href="#URL" class="headerlink" title="URL:"></a><code>URL</code>:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">query 查询</span><br><span class="line"></span><br><span class="line">protocol 协议</span><br><span class="line"></span><br><span class="line">url: 统一资源定位符</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="CSS-指定字符集"><a href="#CSS-指定字符集" class="headerlink" title="CSS 指定字符集:"></a><code>CSS</code> 指定字符集:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 指定 css 文件的编码 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式:"></a><code>CSS</code>引入方式:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;css文件的相对路径·········&#x27;</span>)</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="outline的使用"><a href="#outline的使用" class="headerlink" title="outline的使用:"></a><code>outline</code>的使用:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">outline</span>: <span class="number">3px</span> solid red <span class="meta">!important</span>; // 可以作为调试技巧 快速了解到布局结构</span><br></pre></td></tr></table></figure><ul><li>基础布局（使用 <code>outline</code>属性快速了解网页布局特性）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">       <span class="selector-class">.box</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="selector-class">.content</span> &#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">420px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">float</span>: right;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="selector-tag">div</span> &#123;</span><br><span class="line">           <span class="attribute">outline</span>: <span class="number">2px</span> solid red;</span><br><span class="line">       &#125;</span><br><span class="line">   &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">       BOX 所占的内容区域</span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">           content 所占的内容区域</span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>outline</code>使用详解</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/cssline.png" alt="css-outline属性"></p></li></ul><ul><li><p><code>line-height</code>详解</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/linehight.png" alt="line-height"></p></li><li><p><code>font</code>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">font-variant</span> 斜体  <span class="attribute">font-weight</span> <span class="attribute">font-size</span>/line-hieght <span class="attribute">font-family</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">font</span>: <span class="number">30px</span> <span class="string">&quot;宋体&quot;</span> (顺序不可切换)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>属性选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[title]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div title=&quot;xxx-name&quot;&gt;</span><br><span class="line">&lt;p title=&quot;xxx-p&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>伪类和伪元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:target</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作用: 锚点链接点击时发生的效果</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p><code>:target</code>的使用效果</p><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020102418452993.gif#pic_center" alt="target"></p></li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-pseudo">:disabled</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#f00</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">button</span> disable&gt; 我是有disable的按钮 &lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">button</span>&gt; 我是没有disable的按钮 &lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://gitee.com/wang_hong_bin/pic-go-photos/raw/master/disable.png" alt="disable与enable的区别"></p><p><button>BUTTON</button></p><ul><li><code>a:link</code> 未访问的超链接</li><li><code>a:hover</code> 悬停状态</li><li><code>nth:child()</code> 子类</li></ul><h3 id="nth-child详解"><a href="#nth-child详解" class="headerlink" title="nth:child详解:"></a><code>nth:child</code>详解:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* n 是自然数 */</span></span><br><span class="line">nth-child(n)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2n 偶数位显示效果  2n == even*/</span></span><br><span class="line">nth-child(2n)&#123;&#125; == nth-child(even)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 奇数： odd == 2n+1 */</span></span><br><span class="line">nth-child(2n+1)&#123;&#125; == nth-child(odd)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 负数 代表前几个········*/</span></span><br><span class="line">nth-child(-n+<span class="number">5</span>)&#123;</span><br><span class="line">    <span class="comment">/* 前 5 个显示红色 */</span></span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>nth-last-child()&#123;&#125;</code> （倒这数）</p></li><li><p><code>nth-of-type()&#123;&#125;</code></p></li><li><p><code>nth-last-of-type()&#125;&#123;&#125;</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201024191633699.gif#pic_center" alt="nth-last-child"></p><h3 id="before-和-after"><a href="#before-和-after" class="headerlink" title="::before 和 ::after:"></a><code>::before 和 ::after</code>:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xxx<span class="selector-pseudo">::before</span>,</span><br><span class="line">xxx<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;(文字、图片，空)</span><br><span class="line">    <span class="comment">/* 其他属性值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="显示与隐藏的总结"><a href="#显示与隐藏的总结" class="headerlink" title="显示与隐藏的总结"></a>显示与隐藏的总结</h3><table>    <caption> 显示与隐藏的总结</caption>    <tr>        <th>属性</th>        <th>区别</th>        <th>用途</th>    </tr>    <tr>        <td>display</td>        <td>visibility</td>        <td>overflow</td>    </tr>     <tr>        <td>隐藏对象,不保留位置</td>        <td>隐藏对象,保留位置</td>        <td>只是隐藏超出大小的部分</td>    </tr>     <tr>        <td>配合后面的JS做特效,比如下拉菜单,:hover显示与隐藏</td>        <td>使用较少</td>        <td>1.清除浮动 2. 保证盒子里面的内容不会超出该盒子范围</td>    </tr></table><h3 id="文字处理"><a href="#文字处理" class="headerlink" title="文字处理:"></a>文字处理:</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">1</span>. 先强制一行内显示文本</span><br><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</span><br><span class="line"><span class="selector-tag">2</span>. 超出的部分隐藏</span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hiddden</span>;</span><br><span class="line"><span class="selector-tag">3</span>. 文字用省略号替代超出的部分</span><br><span class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br></pre></td></tr></table></figure><h3 id="弹性盒"><a href="#弹性盒" class="headerlink" title="弹性盒"></a>弹性盒</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">弹性容器:</span><br><span class="line">- 弹性元素就是弹性容器,要使用弹性盒,必须先将元素设置弹性容器</span><br><span class="line">- 设置弹性容器有两种方式:</span><br><span class="line">display: flex; 块级弹性容器</span><br><span class="line">display: inline-flex; 行内弹性容器</span><br><span class="line">弹性元素(弹性项,弹性子元素):</span><br><span class="line">- 弹性容器中的子元素就是弹性元素</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">弹性元素的属性:</span><br><span class="line">flex-direction</span><br><span class="line">- 作用: 用来设置弹性容器的主轴方向</span><br><span class="line">- 可选值:</span><br><span class="line">row,主轴时横向的(自左向右 X) </span><br><span class="line">row-reverse,主轴是横向的(自右向左排列)</span><br><span class="line">column,主轴是纵向的(自上向下的排列 Y)</span><br><span class="line">column-reverse,主轴是纵向的(自下向上排列)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex-wrap</span><br><span class="line">- 作用: 弹性元素在主轴上是否自动换行</span><br><span class="line">- 可选值:</span><br><span class="line">nowrap 默认值</span><br><span class="line">wrap 自动换行</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-flow: </span><br><span class="line">- 作用: 是一个简写属性,可以同时设置 flex-decoration 和 flex-wrap</span><br><span class="line">- flex-flow: column wrap; <span class="comment">&lt;!-- Y 换行 --&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>主轴的对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">justify-content</span><br><span class="line">- 元素在主轴上的对齐方式</span><br><span class="line">- 可选值:</span><br><span class="line">flex-start 主轴起边</span><br><span class="line">flex-end 主轴终边</span><br><span class="line">center 主轴的中间</span><br><span class="line">space-between 将空白区域平均分配到弹性元素间</span><br><span class="line">space-around 将空白空间设置到元素的前后</span><br><span class="line">space-evenly 将空白空间设置到元素的一侧</span><br><span class="line">stretch 拉伸以使元素充满盒子</span><br></pre></td></tr></table></figure></li><li><p>垂轴、辅轴、测轴对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">垂轴、辅轴、测轴对齐方式:</span><br><span class="line">align-items: </span><br><span class="line">- 可选值:</span><br><span class="line">        flex-start 侧轴起边</span><br><span class="line">        flex-end 侧轴终边</span><br><span class="line">        stretch 拉伸以使元素充满盒子</span><br><span class="line">align-conetent: </span><br><span class="line">作用: 用来设置辅轴上的空白分布方式</span><br><span class="line">flex-start</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当父元素中有空白空间时,需要使用增长的系数,来分配每一个元素的增长大小</span><br><span class="line"></span><br><span class="line">flex-grow: 数值</span><br><span class="line">flex-shrink: 0 </span><br></pre></td></tr></table></figure></li><li><p>遇见<code>BFC</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li&#123;内容$&#125;*5</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">4px</span> solid skyblue；</span><br><span class="line">    // 开启 BFC</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left; // 引起高度塌陷</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyMYSQL CURD</title>
      <link href="2020/10/13/PyMYSQL-CURD/"/>
      <url>2020/10/13/PyMYSQL-CURD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 存在一条问题:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- userinfo 表的数据通过循环读取到多条暂未解决</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 此环境下只保留一条数据 用作模拟登陆</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> userinfo;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">16</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">int</span>(<span class="number">18</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表 user_id 用来存放 OEM 的增删改查的数据</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> user_id;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field     <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id        <span class="operator">|</span> <span class="type">int</span>(<span class="number">12</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> user_name <span class="operator">|</span> <span class="type">char</span>(<span class="number">9</span>)     <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gender    <span class="operator">|</span> <span class="type">char</span>(<span class="number">6</span>)     <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> address   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">18</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 中文字符集乱码问题:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入如下 命令解决中文乱码</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> character_set_results<span class="operator">=</span>gb2312;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> pymysql  <span class="comment"># 导入第三方模块 pymysql 库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Oper_Sql</span>:</span></span><br><span class="line">    select_user_login = <span class="string">&#x27;select username,password from userinfo&#x27;</span>  <span class="comment"># 查询 登录信息语句</span></span><br><span class="line"></span><br><span class="line">    select_user_info = <span class="string">&#x27;select id,user_name,gender,address from user_id&#x27;</span>  <span class="comment"># 查询表的数据信息</span></span><br><span class="line"></span><br><span class="line">    select_self_value = <span class="string">&#x27;select id,user_name,gender,address from user_id where id = %s&#x27;</span>  <span class="comment"># 精准查询根据输入 id 时查询</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">count = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> count &gt;= <span class="number">1</span>:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27; 异常  &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="comment"># 1. 创建连接对象</span></span><br><span class="line"></span><br><span class="line">            conn = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">                                   password=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                                   user=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">                                   charset=<span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                                   port=<span class="number">3306</span>,</span><br><span class="line">                                   db=<span class="string">&#x27;scott&#x27;</span>,</span><br><span class="line">                                   cursorclass=pymysql.cursors.DictCursor  <span class="comment"># 改变为字典对象</span></span><br><span class="line">                                   )</span><br><span class="line">            print(conn)  <span class="comment"># 打印连接对象地址代表成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 序号 1 执行查询操作</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">select_user</span>():</span></span><br><span class="line">                <span class="string">&#x27;&#x27;&#x27;  序号 1 查询操作 &#x27;&#x27;&#x27;</span></span><br><span class="line">                <span class="comment"># 查询sql</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                        cursor.execute(Oper_Sql.select_user_info)  <span class="comment"># 查询 user_id 表</span></span><br><span class="line">                        table_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入您查询表的名称: &#x27;</span>)</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 循环遍历表 user_id</span></span><br><span class="line">                        <span class="keyword">for</span> user_i <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">                            <span class="comment"># 判断表为空的条件</span></span><br><span class="line">                            <span class="built_in">id</span> = user_i[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">                            name = user_i[<span class="string">&#x27;user_name&#x27;</span>]</span><br><span class="line">                            gender = user_i[<span class="string">&#x27;gender&#x27;</span>]</span><br><span class="line">                            address = user_i[<span class="string">&#x27;address&#x27;</span>]</span><br><span class="line"></span><br><span class="line">                            print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                                    ------------------------------</span></span><br><span class="line"><span class="string">                                              查询 &#123;&#125; 表</span></span><br><span class="line"><span class="string">                                    ID: &#123;&#125;</span></span><br><span class="line"><span class="string">                                    Name: &#123;&#125;</span></span><br><span class="line"><span class="string">                                    Gendegr: &#123;&#125;</span></span><br><span class="line"><span class="string">                                    Address: &#123;&#125;</span></span><br><span class="line"><span class="string">                                    -----------------------------</span></span><br><span class="line"><span class="string">                                    &#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(table_name, <span class="built_in">id</span>, name, gender, address))</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                    print(<span class="string">&#x27;登陆后查询时异常: &#x27;</span>, err)</span><br><span class="line">                <span class="comment"># 调用查询结束  # # #</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 序号 2 执行 准确信息查询 比如根据 id 或者 name 查询</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">select_self</span>():</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                        self_value = <span class="built_in">input</span>(<span class="string">&#x27;请输入您要查询的编号: &#x27;</span>)</span><br><span class="line">                        cursor.execute(query=Oper_Sql.select_self_value, args=[self_value])</span><br><span class="line">                        <span class="keyword">for</span> self_all <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">                            <span class="built_in">id</span> = self_all[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">                            name = self_all[<span class="string">&#x27;user_name&#x27;</span>]</span><br><span class="line">                            gender = self_all[<span class="string">&#x27;gender&#x27;</span>]</span><br><span class="line">                            address = self_all[<span class="string">&#x27;address&#x27;</span>]</span><br><span class="line">                            print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                            -----------------------------------------------------------------</span></span><br><span class="line"><span class="string">                            </span></span><br><span class="line"><span class="string">                            精准查询的结果为:</span></span><br><span class="line"><span class="string">                            </span></span><br><span class="line"><span class="string">                            ID: &#123;&#125;\tName: &#123;&#125;\tGender: &#123;&#125;\tAddress: &#123;&#125;</span></span><br><span class="line"><span class="string">                            </span></span><br><span class="line"><span class="string">                            -----------------------------------------------------------------</span></span><br><span class="line"><span class="string">                            &#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>, name, gender, address))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                    print(<span class="string">&#x27;精准查询时的异常: &#x27;</span>, err)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 通过键盘输入特定字段并进行数据库数据源的更新</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">update_user_info</span>():</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 根据输入完成更新操作</span></span><br><span class="line">                        set_column_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入字段名[set id =&quot;&quot;]: &#x27;</span>)  <span class="comment">#</span></span><br><span class="line">                        new_value = <span class="built_in">input</span>(<span class="string">&#x27;请输入修改的新值: &#x27;</span>)</span><br><span class="line">                        column_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入字段名[set id =&quot;&quot;]: &#x27;</span>)</span><br><span class="line">                        where_column_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入依据的条件字段名[where =&quot;193161&quot;]: &#x27;</span>)</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 动态输入字段及更新的新值</span></span><br><span class="line">                        cursor.execute(<span class="string">&#x27;update user_id set %s = %s where %s = %s &#x27;</span> % (</span><br><span class="line">                            <span class="built_in">str</span>(set_column_name), new_value, column_name, where_column_name))</span><br><span class="line">                        <span class="comment"># 提交事务</span></span><br><span class="line">                        conn.commit()</span><br><span class="line">                        print(<span class="string">&#x27;更新成功,结果: &#123;&#125; : &#123;&#125; &#x27;</span>.<span class="built_in">format</span>(set_column_name, new_value))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                    print(<span class="string">&#x27;修改数据时的异常: &#x27;</span>, err)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 删除用户个人信息</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">delete_self_info</span>():</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                        delete_table_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入您要删除数据的表: &#x27;</span>)</span><br><span class="line">                        delete_con = <span class="built_in">input</span>(<span class="string">&#x27;请输入条件字段名: &#x27;</span>)  <span class="comment"># conditions 条件</span></span><br><span class="line">                        delete_con_value = <span class="built_in">input</span>(<span class="string">&#x27;请输入删除条件的值: &#x27;</span>)</span><br><span class="line">                        <span class="comment"># 删除的 SQL 语句</span></span><br><span class="line">                        cursor.execute(</span><br><span class="line">                            <span class="string">&#x27;delete from %s where %s = %s&#x27;</span> % (delete_table_name, delete_con, delete_con_value))</span><br><span class="line">                        conn.commit()</span><br><span class="line">                        print(<span class="string">&#x27;在表: &#123;&#125; 中根据 &#123;&#125; = &#123;&#125; 的记录已经被成功删除!&#x27;</span>.<span class="built_in">format</span>(delete_table_name, delete_con, delete_con_value))</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                    print(<span class="string">&#x27;删除数据时的异常: &#x27;</span>, err)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 插入用户信息</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">insert_self_info</span>():</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                        insert_id = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的ID: &#x27;</span>)</span><br><span class="line">                        insert_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的姓名: &#x27;</span>)</span><br><span class="line">                        insert_gender = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的性别: &#x27;</span>)</span><br><span class="line">                        insert_address = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的地址: &#x27;</span>)</span><br><span class="line">                        <span class="comment"># MYSQL 列名重命名: alter table 表名 change column 列名 数据类型;</span></span><br><span class="line"></span><br><span class="line">                        insert_self_value = <span class="string">&quot;insert into user_id values(%s,%s,%s,%s)&quot;</span></span><br><span class="line">                        cursor.execute(query=insert_self_value,</span><br><span class="line">                                       args=[insert_id, insert_name, insert_gender, insert_address])</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">                            <span class="built_in">id</span> = i[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">                            user_name = i[<span class="string">&#x27;user_name&#x27;</span>]</span><br><span class="line">                            gender = i[<span class="string">&#x27;gender&#x27;</span>]</span><br><span class="line">                            address = i[<span class="string">&#x27;address&#x27;</span>]</span><br><span class="line"></span><br><span class="line">                        conn.commit()</span><br><span class="line">                        print(<span class="string">&#x27;在表 user_id 中成功插入ID: &#123;&#125;\tName: &#123;&#125;\tGender: &#123;&#125;\tAddress: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>, user_name, gender,</span><br><span class="line">                                                                                                 address))</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                    print(<span class="string">&#x27;插入数据时的异常: &#x27;</span>, err)</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line"></span><br><span class="line">                <span class="string">&#x27;&#x27;&#x27; 登录模块 &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                    cursor.execute(Oper_Sql.select_user_login)  <span class="comment"># 执行查询语句</span></span><br><span class="line">                    <span class="keyword">for</span> user <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">                        username = user[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">                        password = user[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">                        <span class="comment"># print(username,password) # 读取成功并追加到 列表中</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 创建空字典空列表，将username，password 存入字典 在将字典存在列表之后，将字典中的值取出与输入的值进行对比</span></span><br><span class="line">                        user_info = []</span><br><span class="line">                        user_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 字典赋值</span></span><br><span class="line">                        user_dict[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">                        user_dict[<span class="string">&#x27;password&#x27;</span>] = password</span><br><span class="line">                        <span class="comment"># 追加列表到字典</span></span><br><span class="line">                        user_info.append(user_dict)</span><br><span class="line">                        print(user_info)</span><br><span class="line">                        user = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的用户名: &#x27;</span>)</span><br><span class="line">                        password = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入您的密码: &#x27;</span>))</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> user_dict[<span class="string">&#x27;username&#x27;</span>] == user <span class="keyword">and</span> user_dict[<span class="string">&#x27;password&#x27;</span>] == password:</span><br><span class="line">                            print(<span class="string">&#x27;数据库已经成功登录!&#x27;</span>)</span><br><span class="line">                            <span class="comment"># 进入管理系统 -- 执行一系列的操作</span></span><br><span class="line">                            print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                                    ---------------------------------</span></span><br><span class="line"><span class="string">                                    *        用户注册管理系统         *</span></span><br><span class="line"><span class="string">                                    ----------------------------------</span></span><br><span class="line"><span class="string">                                    +                                </span></span><br><span class="line"><span class="string">                                    |    *1. 查询所有用户信息         </span></span><br><span class="line"><span class="string">                                    +                               </span></span><br><span class="line"><span class="string">                                    |    *2. 查找个人相关信息        </span></span><br><span class="line"><span class="string">                                    +                              </span></span><br><span class="line"><span class="string">                                    |    *3. 修改用户个人的信息      </span></span><br><span class="line"><span class="string">                                    +                              </span></span><br><span class="line"><span class="string">                                    |    *4. 删除用户个人信息         </span></span><br><span class="line"><span class="string">                                    +                               </span></span><br><span class="line"><span class="string">                                    |    *5. 添加新用户信息      </span></span><br><span class="line"><span class="string">                                    +</span></span><br><span class="line"><span class="string">                                    |    *6. 关闭数据库连接    </span></span><br><span class="line"><span class="string">                                    ---------------------------------</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">                                    &#x27;&#x27;&#x27;</span>)</span><br><span class="line">                            <span class="comment"># select_user()</span></span><br><span class="line">                            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                                input_number = <span class="built_in">input</span>(<span class="string">&#x27;请输入您需要操作的编号[1~6]: &#x27;</span>)</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> input_number == <span class="string">&#x27;1&#x27;</span>:  <span class="comment"># 输入编号 1 执行查询表操作</span></span><br><span class="line">                                    select_user()</span><br><span class="line">                                <span class="keyword">elif</span> input_number == <span class="string">&#x27;2&#x27;</span>:  <span class="comment"># 输入编号 2 执行精准信息查询</span></span><br><span class="line">                                    select_self()</span><br><span class="line">                                <span class="keyword">elif</span> input_number == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                                    update_user_info()</span><br><span class="line">                                <span class="keyword">elif</span> input_number == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                                    delete_self_info()</span><br><span class="line">                                <span class="keyword">elif</span> input_number == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                                    insert_self_info()</span><br><span class="line">                                <span class="keyword">elif</span> input_number == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                                    close_oem = <span class="built_in">input</span>(<span class="string">&#x27;确定要关闭数据库连接 yes or no?: &#x27;</span>)</span><br><span class="line">                                    <span class="keyword">if</span> close_oem == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">                                        print(<span class="string">&#x27;欢迎使用OEM管理系统,再见!&#x27;</span>)</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                <span class="keyword">else</span>:</span><br><span class="line">                                    print(<span class="string">&#x27;请输入1~6之间的编号!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            print(<span class="string">&#x27;登陆失败!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 调用登录</span></span><br><span class="line">            login()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1. 连接数据库成功后调用登录函数进行校验数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(<span class="string">&#x27;连接时异常: &#x27;</span>, err)  <span class="comment"># 捕获异常错误进行输出</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            conn.close()</span><br><span class="line">            conn.rollback() <span class="comment"># 回滚的位置需要在考虑</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        main()  <span class="comment"># 调用 main 方法</span></span><br><span class="line">        print(<span class="string">&#x27;剩余输入次数: &#x27;</span>, count)</span><br><span class="line">        count -= <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>数据库连接成功后的部分截图<br><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200514163744392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>插入功能 <code>: 5</code>、查询实现<code>: 1</code><br><img src= "https://cdn.jsdelivr.net/gh/lovobin/FileJsDeliver@v1.1.13/gif/3.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020051416412938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM0MDQyMA==,size_16,color_FFFFFF,t_70#pic_center" alt="实现插入查询"></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis CURD</title>
      <link href="2020/10/13/Mybatis-CURD/"/>
      <url>2020/10/13/Mybatis-CURD/</url>
      
        <content type="html"><![CDATA[<h3 id="User类-只需要写数据库中对应的字段名，通过IDEA-快捷键-Alt-ins-快速实现-setxxx方法-和-toString"><a href="#User类-只需要写数据库中对应的字段名，通过IDEA-快捷键-Alt-ins-快速实现-setxxx方法-和-toString" class="headerlink" title="User类(只需要写数据库中对应的字段名，通过IDEA 快捷键 Alt + ins) 快速实现 setxxx方法 和 toString():"></a>User类(只需要写数据库中对应的字段名，通过IDEA 快捷键 <code>Alt + ins</code>) 快速实现 <code>setxxx</code>方法 和 <code>toString()</code>:</h3><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.aiodu;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Serializable 可序列化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> userid;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String userpassword;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserid</span><span class="params">(<span class="keyword">int</span> userid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userid = userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserpassword</span><span class="params">(String userpassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userpassword = userpassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;userid=&quot;</span> + userid +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, userpassword=&#x27;&quot;</span> + userpassword + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="用户接口-dao层"><a href="#用户接口-dao层" class="headerlink" title="用户接口(dao层)"></a>用户接口(dao层)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户持久层接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IuserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 添加数据</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertMall</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="comment">// 删除数据</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteMall</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="comment">// 修改数据</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateMall</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="comment">// 查询所有操作</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MYSQL数据库准备一张表"><a href="#MYSQL数据库准备一张表" class="headerlink" title="MYSQL数据库准备一张表"></a><code>MYSQL</code>数据库准备一张表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mall_info;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> userid <span class="operator">|</span> username    <span class="operator">|</span> userpassword <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+--------------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1001</span> <span class="operator">|</span> user1001    <span class="operator">|</span> user1001     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1002</span> <span class="operator">|</span> user1002    <span class="operator">|</span> user1002     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1003</span> <span class="operator">|</span> user1003    <span class="operator">|</span> user1003     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1004</span> <span class="operator">|</span> user1004    <span class="operator">|</span> user1004     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1005</span> <span class="operator">|</span> user1005    <span class="operator">|</span> user1005     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1006</span> <span class="operator">|</span> user1006    <span class="operator">|</span> user1006     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">12431</span> <span class="operator">|</span> user0012300 <span class="operator">|</span> user000000   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">100000</span> <span class="operator">|</span> aidou       <span class="operator">|</span> user193161   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">193162</span> <span class="operator">|</span> user193162  <span class="operator">|</span> user193162   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">193163</span> <span class="operator">|</span> user000000  <span class="operator">|</span> user000000   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+--------------+</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec</span><br></pre></td></tr></table></figure><h3 id="Mapper-可随意更改SQL-："><a href="#Mapper-可随意更改SQL-：" class="headerlink" title="Mapper(可随意更改SQL)："></a>Mapper(可随意更改<code>SQL</code>)：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>mapper namespace<span class="operator">=</span>&quot;com.ltd.dao.IuserDao&quot;<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span><span class="keyword">select</span> id<span class="operator">=</span>&quot;findAll&quot; resultType<span class="operator">=</span>&quot;com.ltd.aiodu.User&quot;<span class="operator">&gt;</span></span><br><span class="line">    <span class="comment">-- 查询 mall 数据库下mall_info 表的所有信息 id = 方法名</span></span><br><span class="line">    <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mall.mall_info;</span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span><span class="keyword">select</span><span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span><span class="keyword">insert</span> id<span class="operator">=</span>&quot;insertMal&quot;<span class="operator">&gt;</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> mall.mall_info <span class="keyword">values</span>(<span class="number">12431</span>,<span class="string">&#x27;user0012300&#x27;</span>,<span class="string">&#x27;user000000&#x27;</span>);</span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span><span class="keyword">insert</span><span class="operator">&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="operator">&lt;</span><span class="keyword">delete</span> id<span class="operator">=</span>&quot;deleteMall&quot;<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">delete</span> <span class="keyword">from</span> mall.mall_info <span class="keyword">where</span> userid<span class="operator">=</span>&quot;12431&quot;</span><br><span class="line">    <span class="operator">&lt;</span><span class="operator">/</span><span class="keyword">delete</span><span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="operator">&lt;</span>update id<span class="operator">=</span>&quot;updateMal&quot;<span class="operator">&gt;</span></span><br><span class="line">        update mall.mall_info <span class="keyword">set</span> userid<span class="operator">=</span><span class="string">&#x27;100000&#x27;</span> <span class="keyword">where</span> userid<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">    <span class="operator">&lt;</span><span class="operator">/</span>update<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span>mapper<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现测试方法"><a href="#实现测试方法" class="headerlink" title="实现测试方法:"></a>实现测试方法:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line">    SqlSession session = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBefore</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line">        session = factory.openSession(<span class="keyword">true</span>); <span class="comment">// true 自动提交，默认 false ，也可手动提交 -- session.commit(); </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新形势数据的插</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertMalls</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 添加一条数据 000000 user000000 user000000</span></span><br><span class="line">        <span class="comment">// 通过 session 执行 sql 语句，返回执行结果</span></span><br><span class="line">        <span class="keyword">int</span> rows = session.insert(<span class="string">&quot;com.ltd.dao.IuserDao.insertMal&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;影响的行数: &quot;</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据的删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rows = session.delete(<span class="string">&quot;com.ltd.dao.IuserDao.deleteMall&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除影响的行数: &quot;</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据的更改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> nums = session.update(<span class="string">&quot;com.ltd.dao.IuserDao.updateMal&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;更新影响的行数: &quot;</span> + nums);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 数据查询</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">       List&lt;User&gt; users = session.selectList(<span class="string">&quot;com.ltd.dao.IuserDao.findAll&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span>(User user:users)&#123;</span><br><span class="line">           System.out.println(user);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle基础语法</title>
      <link href="2020/10/13/Oracle%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>2020/10/13/Oracle%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="Oracle-11g"><a href="#Oracle-11g" class="headerlink" title="Oracle 11g :"></a>Oracle 11g :</h4><span id="more"></span><p><font color='red'>注：此笔记为个人在学习Oracle时从教学视频、练习整理</font></p><blockquote><p> <font color='red'>安装问题: </font></p><ul><li>在安装完成后如果遇到口令管理无法出现那么就需要手动配置数据库</li></ul><ol><li> <font color='green'>找到Oracle 安装中出现的 Database Configuration Assistant</font> </li><li>进行手动配置数据库(默认操作) – 完成<font color='red'>口令管理</font></li></ol></blockquote><blockquote><p> <font color='red'>图形化界面助手(SQLDEVELOPER)安装问题: </font></p><ul><li>TNS 加载出错，找到安装路径进行对后缀名为点 <font color='red'>ora</font>文件进行查看。(主要是对端口看，全局数据库名查看)</li></ul></blockquote><h4 id="目录"><a href="#目录" class="headerlink" title="目录:"></a>目录:</h4><ul><li>用户创建并赋予基础权限<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--  显示当前连接用户</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="comment">-- 创建用户 student</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> student identified <span class="keyword">by</span> student;</span><br><span class="line"><span class="comment">-- 对用户 student 赋予权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> session <span class="keyword">to</span> student;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span>,resource <span class="keyword">to</span> student;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 解锁用户</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> 解锁用户名 account unlock;</span><br></pre></td></tr></table></figure></li></ul><h4 id="表的增删改查练习"><a href="#表的增删改查练习" class="headerlink" title="表的增删改查练习:"></a>表的增删改查练习:</h4><ul><li><font color='red'>注： ROWID Oracle特有可自行查阅理解</font><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 emp 表的最小 ROWID </span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(rowid) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure></li><li>Oracle 常用的几个函数：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名;</span><br><span class="line"><span class="comment">-- 作用介绍：</span></span><br><span class="line">在已创建表的基础上插入值的时候会出现数据类型不匹配，可以通过 <span class="keyword">desc</span> 表名 显示字段的数据类型，快速插入匹配的数据记录</span><br></pre></td></tr></table></figure><h4 id="表空间："><a href="#表空间：" class="headerlink" title="表空间："></a>表空间：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">select</span> file_name,tablespace_name</span><br><span class="line"><span class="number">2</span>  <span class="keyword">from</span> dba_data_files</span><br><span class="line"><span class="number">3</span>  <span class="keyword">order</span> <span class="keyword">by</span> tablespace_name;</span><br></pre></td></tr></table></figure></li></ul><h4 id="修改表空间-新增数据文件"><a href="#修改表空间-新增数据文件" class="headerlink" title="修改表空间(新增数据文件):"></a>修改表空间(新增数据文件):</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">Table</span>Space 文件名 <span class="keyword">add</span>  DataFile  <span class="string">&#x27;d；/文件名02.dbf&#x27;</span> size <span class="number">10</span>m Autoexitend</span><br><span class="line"><span class="keyword">on</span> next <span class="number">10</span>m maxSize z;  </span><br></pre></td></tr></table></figure><h4 id="增加表空间N的大小-调整数据文件"><a href="#增加表空间N的大小-调整数据文件" class="headerlink" title="增加表空间N的大小: 调整数据文件"></a>增加表空间N的大小: 调整数据文件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> database datafile <span class="string">&#x27;文件名01.dbf&#x27;</span></span><br><span class="line">autoextend <span class="keyword">on</span> next Y maxsize Z;</span><br></pre></td></tr></table></figure><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表:"></a>创建数据表:</h3><ul><li>关系模式到关系表的映射:</li></ul><table><thead><tr><th align="center">概念模型</th><th align="center">关系表</th></tr></thead><tbody><tr><td align="center">元组</td><td align="center">记录</td></tr><tr><td align="center">属性</td><td align="center">字段名</td></tr><tr><td align="center">属性值</td><td align="center">字段值</td></tr><tr><td align="center">域</td><td align="center">数据类型及长度</td></tr><tr><td align="center">码、候选码</td><td align="center">主键、关键字</td></tr></tbody></table><ul><li>Oracle数据类型；</li></ul><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">CHAR(n)</td><td align="center">定长字符</td></tr><tr><td align="center">VARCHAR2(n)</td><td align="center">变长字符</td></tr><tr><td align="center">NUMBER([n],[m])</td><td align="center">数值</td></tr><tr><td align="center">DATE</td><td align="center">日期</td></tr></tbody></table><h4 id="Oracle日期型"><a href="#Oracle日期型" class="headerlink" title="Oracle日期型:"></a>Oracle日期型:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 获取当前系统的时间</span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>) <span class="keyword">FROM</span> dual;</span><br><span class="line"></span><br><span class="line"> <span class="comment">--日期转化为字符串  </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>) <span class="keyword">AS</span> NOWTIME <span class="keyword">FROM</span> DUAL;  </span><br><span class="line"> <span class="comment">-- 获取时间的年</span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;yyyy&#x27;</span>) <span class="keyword">AS</span> NOWYEAR   <span class="keyword">FROM</span> DUAL;      </span><br><span class="line">   <span class="comment">-- 获取时间的月   </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;mm&#x27;</span>)    <span class="keyword">AS</span> NOWMONTH <span class="keyword">FROM</span> DUAL;   </span><br><span class="line"> <span class="comment">-- 获取时间的日  </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;dd&#x27;</span>)    <span class="keyword">AS</span> NOWDAY    <span class="keyword">FROM</span> DUAL;    </span><br><span class="line">    <span class="comment">-- 获取时间的时 </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;hh24&#x27;</span>) <span class="keyword">AS</span> NOWHOUR   <span class="keyword">FROM</span> DUAL;     </span><br><span class="line">    <span class="comment">-- 获取时间的分  </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;mi&#x27;</span>)    <span class="keyword">AS</span> NOWMINUTE <span class="keyword">FROM</span> DUAL;  </span><br><span class="line">   <span class="comment">--获取时间的秒</span></span><br><span class="line"><span class="keyword">SELECT</span> TO_CHAR(SYSDATE,<span class="string">&#x27;ss&#x27;</span>)    <span class="keyword">AS</span> NOWSECOND <span class="keyword">FROM</span> DUAL;  </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入特定格式日期</span></span><br><span class="line">to_date(<span class="string">&#x27;2020-02-20&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表:"></a>创建表:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableName(</span><br><span class="line"><span class="comment">-- 用户id</span></span><br><span class="line">id number nut <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line"><span class="comment">-- 用户名</span></span><br><span class="line">userName <span class="type">char</span>(<span class="number">6</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">-- 用户性别</span></span><br><span class="line">sex varchar2(<span class="number">3</span>),</span><br><span class="line"><span class="comment">-- 用户生日</span></span><br><span class="line">birthday <span class="type">date</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 对表 tableName 插入对应的值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableNmae <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;aidou&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,to_date(<span class="string">&#x27;2020-02-20&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>));</span><br></pre></td></tr></table></figure><h4 id="表名更新"><a href="#表名更新" class="headerlink" title="表名更新:"></a>表名更新:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> oldTableName rename <span class="keyword">to</span> newTableName;</span><br></pre></td></tr></table></figure><h4 id="字段名添加："><a href="#字段名添加：" class="headerlink" title="字段名添加："></a>字段名添加：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tableNmae <span class="keyword">add</span>(字段名 数据类型);</span><br></pre></td></tr></table></figure><h4 id="连接-："><a href="#连接-：" class="headerlink" title="连接 ( || )："></a>连接 ( || )：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例: 编号是: <span class="number">7369</span> 的雇员，姓名是: Tom, 工作是: Clean;</span><br><span class="line">    <span class="keyword">select</span> <span class="string">&#x27;编号是: &#x27;</span> <span class="operator">||</span> empno <span class="operator">||</span> <span class="string">&#x27;的雇员,姓名是: &#x27;</span> <span class="operator">||</span> ename <span class="operator">||</span><span class="string">&#x27;, 工作是: &#x27;</span> <span class="operator">||</span> job <span class="keyword">from</span> emp;</span><br><span class="line">    编号是: <span class="number">7369</span> 的雇员，姓名是: , 工作是: ;</span><br></pre></td></tr></table></figure><blockquote><p>数据库不仅仅是存储数据，他还必须保证所有的数据的正确性，为了维护数据库中数据的完整性，在创建表的时候常常需要定义一些约束。</p></blockquote> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Oracle <span class="number">11</span>g 的六大约束:</span><br><span class="line">       <span class="operator">+</span> 非空约束 <span class="keyword">not</span> <span class="keyword">null</span> </span><br><span class="line">       <span class="operator">+</span> 主键约束 <span class="keyword">primary</span> key</span><br><span class="line">       <span class="operator">+</span> 唯一约束 <span class="keyword">unique</span></span><br><span class="line">       <span class="operator">+</span> 外键约束 <span class="keyword">foreign</span> key</span><br><span class="line">       <span class="operator">+</span> 检查约束 <span class="keyword">check</span></span><br><span class="line">       <span class="operator">+</span> 默认约束 <span class="keyword">default</span> </span><br></pre></td></tr></table></figure><h4 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束:"></a>非空约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">-- 非空约束</span></span><br><span class="line"> <span class="comment">-- 添加非空约束：</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段名 <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- 删除某字段的非空约束，其实就是允许字段为空</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> modify 字段名 <span class="keyword">null</span></span><br></pre></td></tr></table></figure><h4 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束:"></a>主键约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键约束</span></span><br><span class="line"><span class="comment">-- 添加主键约束：</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> PK_主键名 <span class="keyword">primary</span> key(字段名);</span><br><span class="line"><span class="comment">-- 删除主键约束:</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 主键名;</span><br></pre></td></tr></table></figure><h4 id="唯一性约束"><a href="#唯一性约束" class="headerlink" title="唯一性约束:"></a>唯一性约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加唯一性约束:</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 名_UK <span class="keyword">unique</span>(字段名);</span><br><span class="line"><span class="comment">-- 删除唯一性约束:</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 名_UK; </span><br></pre></td></tr></table></figure><h4 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束:"></a>外键约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 外键约束会使用两个表进行关联，外键是指 &quot;当前表&quot; 引用 &quot;另外一个表&quot;(即被引用表)的某个列，</span></span><br><span class="line"><span class="comment">-- 而被引用的列必须具有主键约束或唯一性约束 </span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 当前表 <span class="keyword">add</span> <span class="keyword">constraint</span> FK_名 <span class="keyword">foreign</span> key(引用字段名) <span class="keyword">references</span> 被引用表表名(被引用字段名);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表的时候创建约束:</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> xx表(</span><br><span class="line">    <span class="keyword">no</span> number <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    QQ varChar2(<span class="number">20</span>),</span><br><span class="line">    <span class="comment">-- 外键约束的添加</span></span><br><span class="line">    <span class="keyword">constraint</span> FK_名 <span class="keyword">foreign</span> key(引用字段名) <span class="keyword">references</span> 被引用表表名(引用的字段名) </span><br><span class="line">);</span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> key 外建名；</span><br></pre></td></tr></table></figure><h4 id="检查约束"><a href="#检查约束" class="headerlink" title="检查约束:"></a>检查约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">-- 创建一个书本信息表,给价格添加 check 约束</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> bookInfo(</span><br><span class="line">     bookId number,</span><br><span class="line">     nookName <span class="type">char</span>,</span><br><span class="line">     price number,</span><br><span class="line">     author <span class="type">char</span>,</span><br><span class="line">     <span class="comment">-- 添加检查约束:</span></span><br><span class="line">     <span class="keyword">constraint</span> ck_名 <span class="keyword">check</span>([检查约束表达式表达式] price<span class="operator">&gt;=</span><span class="number">10</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">100</span><span class="operator">&gt;</span>)</span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对表的某字段进行添加 check 约束</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> ck_名 <span class="keyword">check</span>( [检查约束表达式表达式] );</span><br><span class="line"><span class="comment">-- 删除 check 约束</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span>  ck_age;</span><br></pre></td></tr></table></figure><h4 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">        name varchar2(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">        id number(<span class="number">10</span>),</span><br><span class="line">        sex varchar2(<span class="number">10</span>),</span><br><span class="line">        age number(<span class="number">5</span>) <span class="keyword">default</span> <span class="number">18</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">-- 对 xx表 的字段添加默认约束</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 <span class="keyword">default</span> <span class="string">&#x27;默认条件&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="查询表中的约束"><a href="#查询表中的约束" class="headerlink" title="查询表中的约束:"></a>查询表中的约束:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询整张表的约束:</span></span><br><span class="line">    <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> user_constraints <span class="keyword">where</span> table_name <span class="operator">=</span> <span class="string">&#x27;要查询表的表名&#x27;</span></span><br><span class="line"><span class="comment">-- 单一字段的约束查询:</span></span><br><span class="line">    <span class="keyword">select</span> constraint_name <span class="keyword">from</span> user_cons_columns <span class="keyword">where</span> table_name <span class="operator">=</span> <span class="string">&#x27;要查询表表名&#x27;</span> <span class="keyword">and</span> column_name <span class="operator">=</span> <span class="string">&#x27;要查询列的字段名&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询:"></a>模糊查询:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">like</span> </span><br><span class="line"><span class="keyword">between</span> <span class="keyword">and</span> </span><br><span class="line"><span class="keyword">in</span> </span><br><span class="line"><span class="keyword">is</span> <span class="keyword">null</span> <span class="operator">|</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><ul><li><p>like 一般与通配符连用(%查询内容%) 任意多个字符，包含 0 个字符.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- scott表中查询</span></span><br><span class="line"><span class="comment">-- 案例一:</span></span><br><span class="line">查询员工名中包含字符A的员工信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">LIKE</span> <span class="string">&#x27;%A%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>通配符 _ 的使用:(下划线占位，位置后放要查询包含的字符)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 emp 表中ename 中第一个字符包含A,第三个字符包含 L的人员和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">LIKE</span> <span class="string">&#x27;A_L%&#x27;</span> <span class="keyword">AND</span> SAL<span class="operator">&gt;</span><span class="number">200</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询员工命中第二个字符为 _ 的员工名(转义字符的使用)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> ENAME <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">LIKE</span> <span class="string">&#x27;_\_%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ESCAPE 的用法</span></span><br><span class="line"> <span class="keyword">SELECT</span> ENAME <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">LIKE</span> <span class="string">&#x27;_$_%&#x27;</span> <span class="keyword">ESCAPE</span> <span class="string">&#x27;$&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>between and 优点:</p><ul><li>提高语句可读性</li><li>临界值包含且不能颠倒 </li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询员工姓名,员工工资在 1500 ~ 5000的人员信息</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL<span class="operator">&gt;=</span><span class="number">1500</span> <span class="keyword">AND</span> SAL <span class="operator">&lt;=</span><span class="number">5000</span>;</span><br><span class="line"><span class="comment">-- between and 简介优化语句</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL <span class="keyword">BETWEEN</span> <span class="number">1500</span> <span class="keyword">AND</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure><ul><li>关键字 in</li><li>含义: 判断某字段的值是否属于 in 列表中的某一项</li><li>特点:  使用 in 提高语句简洁度</li><li>in 列表的值类型必须一致(不支持通配符使用)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询员工姓名，以及员工工资在 1600 2450 3000 的人员信息</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL <span class="operator">=</span> <span class="number">1600</span> <span class="keyword">OR</span> SAL <span class="operator">=</span> <span class="number">2450</span> <span class="keyword">OR</span> SAL <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="comment">-- in  语句优化</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL <span class="keyword">IN</span>(<span class="string">&#x27;1600&#x27;</span>,<span class="string">&#x27;2450&#x27;</span>,<span class="string">&#x27;3000&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>IS NULL 的使用:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 emp 表中comm 为 null 的人员信息</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,COMM <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> COMM <span class="keyword">IS</span> <span class="keyword">NULL</span>;  </span><br></pre></td></tr></table></figure><ul><li>IS NOT NULL 的使用:</li><li>= 或 &lt;&gt; 不能判断 NULL<h4 id="初见case："><a href="#初见case：" class="headerlink" title="初见case："></a>初见case：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">-- 类似于 SWITCH CASE </span></span><br><span class="line"> <span class="comment">-- ORACLE : </span></span><br><span class="line"> <span class="comment">-- CASE 要判断的字段或表达式</span></span><br><span class="line"> <span class="comment">-- WHEN 常量1 THEN 要显示的值 1或语句1；</span></span><br><span class="line"> <span class="comment">-- WHEN 常量2 THEN 要显示的值 2或语句2</span></span><br><span class="line"> <span class="comment">-- ELSE 要显示的值 N 或语句 N;</span></span><br><span class="line"> <span class="comment">-- END</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">--  查询 员工的工资，要求:</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> 部门号 = ，显示的工资为1.1 倍</span></span><br><span class="line"><span class="comment"> 部门号 = ，显示的工资为1.2 倍</span></span><br><span class="line"><span class="comment"> 部门号 = ，显示的工资为1.3 倍</span></span><br><span class="line"><span class="comment"> 其他部门，显示的工资为原工资</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"> <span class="keyword">SELECT</span> SAL 原始工资,EMPNO,<span class="keyword">CASE</span> EMPNO  </span><br><span class="line"> <span class="keyword">WHEN</span> <span class="number">7369</span> <span class="keyword">THEN</span> SAL<span class="operator">*</span><span class="number">1.1</span></span><br><span class="line"> <span class="keyword">WHEN</span> <span class="number">7521</span> <span class="keyword">THEN</span> SAL<span class="operator">*</span><span class="number">1.2</span></span><br><span class="line"> <span class="keyword">WHEN</span> <span class="number">7654</span> <span class="keyword">THEN</span> SAL<span class="operator">*</span><span class="number">1.3</span></span><br><span class="line"> <span class="keyword">ELSE</span> SAL</span><br><span class="line"> <span class="keyword">END</span> <span class="keyword">AS</span></span><br><span class="line"> <span class="keyword">FROM</span> EMP;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">--case 函数的使用二: 类似于 多重 if</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> case </span></span><br><span class="line"><span class="comment">     when 条件1 then 要显示的值 1 或语句 1 </span></span><br><span class="line"><span class="comment">     when 条件2 then 要显示的值 1 或语句 2</span></span><br><span class="line"><span class="comment">    else  要显示的值 n 或 语句 m</span></span><br><span class="line"><span class="comment"> end</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">````</span><br><span class="line">```<span class="keyword">sql</span></span><br><span class="line"> <span class="comment">--   案例</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">  如果工资 &gt; 1300,显示 A 级别</span></span><br><span class="line"><span class="comment">  如果工资 &gt; 1500,显示 B 级别</span></span><br><span class="line"><span class="comment">  如果工资 &gt; 1900,显示 C 级别</span></span><br><span class="line"><span class="comment">  否则 ，显示 D 级别</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">SELECT</span> ENAME,SAL,<span class="keyword">CASE</span> </span><br><span class="line"> <span class="keyword">WHEN</span> SAL <span class="operator">&gt;</span> <span class="number">1300</span> <span class="keyword">THEN</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line"> <span class="keyword">WHEN</span> SAL <span class="operator">&gt;</span> <span class="number">1600</span> <span class="keyword">THEN</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line"> <span class="keyword">WHEN</span> SAL <span class="operator">&gt;</span> <span class="number">3000</span> <span class="keyword">THEN</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line"> <span class="keyword">ELSE</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line"> <span class="keyword">END</span> <span class="keyword">AS</span> 工资级别</span><br><span class="line"> <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"> <span class="comment">-- 查询员工工号，姓名，工资，以及工资提高20%后的结果(NEW SALARY)</span></span><br><span class="line"> <span class="keyword">SELECT</span> ENAME,EMPNO,SAL <span class="operator">*</span><span class="number">1.2</span> &quot;NEW SALARY&quot; <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"> <span class="comment">-- 将员工的姓名按首字母排序，并写出姓名的长度(length)</span></span><br><span class="line"> <span class="keyword">SELECT</span> LENGTH(ENAME) 姓名长度,SUBSTR(ENAME,<span class="number">1</span>,<span class="number">1</span>) 姓名首字符,ENAME <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SUBSTR(ENAME,<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">ASC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串拼接 做一个查询，产生下面的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(ENAME,<span class="string">&#x27; earns  &#x27;</span>,SAL,<span class="string">&#x27;  monthly but wants &#x27;</span>,SAL<span class="operator">*</span><span class="number">3</span>) <span class="keyword">AS</span> &quot;Dream Sal&quot; <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL<span class="operator">=</span><span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用case -- when 按照下面的条件</span></span><br><span class="line"><span class="keyword">SELECT</span> EMPNO <span class="keyword">AS</span> JOB ,</span><br><span class="line"><span class="keyword">CASE</span> EMPNO</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">7369</span> <span class="keyword">THEN</span>  <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">7499</span> <span class="keyword">THEN</span>  <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">7566</span> <span class="keyword">THEN</span>  <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> GRADE</span><br><span class="line"><span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">WHERE</span> EMPNO<span class="operator">=</span><span class="string">&#x27;7369&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 检查表结构</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">DESC</span> SCORE;</span><br><span class="line"></span><br><span class="line"><span class="comment">---- 创建Score 表</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SCORE(</span><br><span class="line">  NAME <span class="type">VARCHAR</span>(<span class="number">50</span>)  <span class="keyword">PRIMARY</span> KEY DISABLE,</span><br><span class="line">  DEGREE  <span class="type">INT</span> ,</span><br><span class="line">  SEX  <span class="type">VARCHAR</span>(<span class="number">10</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询表 score </span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCORE;</span><br><span class="line"><span class="comment">-- 添加信息 insert into 表名 values()</span></span><br><span class="line"> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> SCORE <span class="keyword">VALUES</span>(<span class="string">&#x27;aidou&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="comment">-- 查询 Score 表</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCORE;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在表Score 中插入 85 86 88 的成绩；</span></span><br><span class="line">  <span class="keyword">INSERT</span> <span class="keyword">INTO</span> SCORE <span class="keyword">VALUES</span>(<span class="string">&#x27;菠萝&#x27;</span>,<span class="number">85</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line">  <span class="keyword">INSERT</span> <span class="keyword">INTO</span> SCORE <span class="keyword">VALUES</span>(<span class="string">&#x27;水蜜桃&#x27;</span>,<span class="number">88</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line">  <span class="keyword">INSERT</span> <span class="keyword">INTO</span> SCORE <span class="keyword">VALUES</span>(<span class="string">&#x27;苹果&#x27;</span>,<span class="number">86</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表Score 再次添加的结果;</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCORE;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 由于误操作，多插入一条记录，删除记录；</span></span><br><span class="line"> <span class="keyword">DELETE</span> <span class="keyword">FROM</span> SCORE <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;苹果&#x27;</span> <span class="keyword">AND</span> SEX<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--再次查看 Score 结构;</span></span><br><span class="line"> <span class="keyword">SELECT</span>  <span class="operator">*</span>  <span class="keyword">FROM</span> SCORE;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次插入 86分的记录</span></span><br><span class="line"> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> SCORE <span class="keyword">VALUES</span>(<span class="string">&#x27;苹果&#x27;</span>,<span class="number">86</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--  查看</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCORE;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定记录</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCORE <span class="keyword">WHERE</span> DEGREE <span class="keyword">IN</span>( <span class="string">&#x27;85&#x27;</span>,<span class="string">&#x27;86&#x27;</span>,<span class="string">&#x27;88&#x27;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">Desc</span> Help;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建 STDUENT 表</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> STUDENT</span><br><span class="line">  (</span><br><span class="line">    SNO <span class="type">CHAR</span>(<span class="number">6</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    SNAME VARCHAR2(<span class="number">12</span>),</span><br><span class="line">    DEPT VARCHAR2(<span class="number">20</span>),</span><br><span class="line">    SEX VARCHAR2(<span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 STDUENT 表</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STDUENT;</span><br><span class="line">  </span><br><span class="line"><span class="comment">-- 向 STDUENT 表中插入记录</span></span><br><span class="line"> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> STDUENT(SNO,SNAME,DEPT,SEX)  <span class="keyword">VALUES</span>(<span class="string">&#x27;293261&#x27;</span>,<span class="string">&#x27;aidou&#x27;</span>,<span class="string">&#x27;计算机信息管理&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line">   </span><br><span class="line"><span class="comment">-- 插入记录成功后再次查询表结构</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STDUENT;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除记录</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> STUDENT <span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;193161&#x27;</span> <span class="keyword">AND</span> SNAME<span class="operator">=</span><span class="string">&#x27;王宏斌&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询已经删除后表的结构</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO,SNAME,SEX <span class="keyword">FROM</span> STDUENT <span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;193161&#x27;</span> <span class="keyword">AND</span> SEX<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">AND</span> SNAME<span class="operator">=</span><span class="string">&#x27;王宏斌&#x27;</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDENT;</span><br></pre></td></tr></table></figure><h4 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数:"></a>常见函数:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询 EMP 表 所有人的工资总和以及最高和最低以及平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(SAL) 求和,ROUND(<span class="built_in">AVG</span>(SAL),<span class="number">2</span>) 平均工资,<span class="built_in">MAX</span>(SAL) 最大工资,<span class="built_in">MIN</span>(SAL) 最低工资,<span class="built_in">COUNT</span>(SAL)  领取工资人数 <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 参数支持那些类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 是否忽略 NULL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(COMM) 求和,ROUND(<span class="built_in">AVG</span>(COMM),<span class="number">2</span>) 平均工资,<span class="built_in">MAX</span>(COMM) 最大工资,<span class="built_in">MIN</span>(COMM) 最低工资,<span class="built_in">COUNT</span>(COMM)  领取工资人数 <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 和 DISTINCT 搭配</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">DISTINCT</span> SAL),<span class="built_in">SUM</span>(SAL) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> SAL),<span class="built_in">COUNT</span>(SAL) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- COUNT 函数的详细介绍</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(SAL) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">-- 统计个数 COUNT(*)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 和分组函数一同查询的字段有限制</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询员工工资的最大值，最小值，平均值，总和</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) 最大工资,<span class="built_in">MIN</span>(SAL) 最小工资,ROUND(<span class="built_in">AVG</span>(SAL),<span class="number">2</span>) 平均工资,<span class="built_in">SUM</span>(SAL) 总工资 <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询部门编号为 7369 的员工个数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> EMPNO<span class="operator">=</span><span class="string">&#x27;7369&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="限制行数查看"><a href="#限制行数查看" class="headerlink" title="限制行数查看:"></a><font color='red'>限制行数查看:</font></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Eg. 显示 Oracle 数据库 EMP表的前三行数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> EMP  <span class="keyword">where</span> rownum<span class="operator">&lt;</span><span class="number">4</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="2020/10/13/Java/"/>
      <url>2020/10/13/Java/</url>
      
        <content type="html"><![CDATA[<h3 id="Java-变量"><a href="#Java-变量" class="headerlink" title="Java 变量:"></a>Java 变量:</h3><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeodData</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 变量的定义格式</span></span><br><span class="line">        <span class="comment">// 数据类型 变量名 = 变量值;</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;变量的使用: &quot;</span>+a);</span><br><span class="line">        <span class="comment">// 变量就是内存中的空间，内部存储着不断发生变化的数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="键盘录入"><a href="#键盘录入" class="headerlink" title="键盘录入:"></a>键盘录入:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">// 键盘录入</span></span><br><span class="line">      Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">      <span class="keyword">int</span> num = scan.nextInt();</span><br><span class="line">      System.out.println(num);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数值拆分"><a href="#数值拆分" class="headerlink" title="数值拆分:"></a>数值拆分:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">// 键盘录入</span></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">// 123</span></span><br><span class="line"><span class="keyword">int</span> num = scan.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b = num % <span class="number">10</span>; <span class="comment">// 123 除以 10 为商 12 余 3，%--&gt; 只取余数</span></span><br><span class="line"><span class="keyword">int</span> c = num / <span class="number">10</span> % <span class="number">10</span>; <span class="comment">// 123 除以 10 为 12 12%10 商 1 余 2</span></span><br><span class="line"><span class="keyword">int</span> d = num / <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(b); <span class="comment">// 3</span></span><br><span class="line">System.out.println(c); <span class="comment">// 2</span></span><br><span class="line">System.out.println(d); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符:"></a>自增自减运算符:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeodData</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>,b = <span class="number">0</span>;</span><br><span class="line">        b = a--;</span><br><span class="line">        System.out.println(b); <span class="comment">// 1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 单独使用 a++</span></span><br><span class="line">        a++;</span><br><span class="line">        System.out.println(a); <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    ++ / -- 单独使用: 效果一致</span><br><span class="line"></span><br><span class="line">    参与操作:</span><br><span class="line"></span><br><span class="line">        ++ 在前: 先对该变量做自增(++) 或者自减(--),然后在拿变量参与操作</span><br><span class="line"></span><br><span class="line">        ++ 在后: 先将该变量原本的值，取出来参与操作，随后再进行自增(++),自减(--)</span><br><span class="line"></span><br><span class="line">       只允许操作变量(++/--)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符:"></a>三元运算符:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 求两个数中的最大值 </span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> max = a&gt;b ? a : b;</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制:"></a>流程控制:</h3><ul><li><p><code>if</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关系表达式为 true 执行 语句体</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(关系表达式)&#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>switch</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> age = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span>(age)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: System.out.println(<span class="string">&quot;1&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: System.out.println(<span class="string">&quot;1&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>for</code> 循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化语句;条件判断语句;条件控制语句)&#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水仙花数的求取</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 水仙花数的求取</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = i % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> b = i / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> c = i / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span> (a * a * a + b * b * b + c * c * c == i) &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水仙花数换行输出</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeodData</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 水仙花数的求取</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = i % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> b = i / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> c = i / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span> ((a * a * a + b * b * b + c * c * c) == i) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环:"></a><code>while</code>循环:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">while</span>(条件判断语句)&#123;</span><br><span class="line">           循环体;</span><br><span class="line">         条件控制语句;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求取珠穆朗玛峰在 0.1 毫米的纸张需要折叠的次数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeodData</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义纸张的厚度</span></span><br><span class="line">        <span class="keyword">double</span> paper = <span class="number">0.1</span>;</span><br><span class="line">        <span class="comment">// 定义珠穆朗玛峰的高度 (毫米)</span></span><br><span class="line">        <span class="keyword">int</span> zl = <span class="number">8844430</span>;</span><br><span class="line">        <span class="comment">// 定义计数器</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 当纸张小于或等于 珠穆朗玛峰的高度时</span></span><br><span class="line">        <span class="keyword">while</span> (paper &lt;= zl) &#123;</span><br><span class="line">            <span class="comment">// 纸张折叠</span></span><br><span class="line">            paper *= <span class="number">2</span>;</span><br><span class="line">            <span class="comment">// 计数器累加</span></span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// count = 27</span></span><br></pre></td></tr></table></figure><h3 id="do-while-循环"><a href="#do-while-循环" class="headerlink" title="do  while 循环:"></a><code>do  while</code> 循环:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">      循环体;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(条件语句)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="for-和-while之间的区别"><a href="#for-和-while之间的区别" class="headerlink" title="for 和 while之间的区别:"></a><code>for </code>和 <code>while</code>之间的区别:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件控制语句所控制的自增变量因为归属 for 循环的语法结构中，在 for 循环结束后，就不能再次被访问到了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件控制语句所控制的自增变量对于 while 循环来说不归属其语法结构中，在 while 循环结束后，该变量还可以继续使用</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Random"><a href="#Random" class="headerlink" title="Random:"></a><code>Random:</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 1 ~ 10之间的随机数打印 10 次</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeodData</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = r.nextInt(<span class="number">10</span>)+<span class="number">1</span>;</span><br><span class="line">            System.out.println(num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组:"></a>数组:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据类型[] 变量名</span></span><br><span class="line">    </span><br><span class="line">   <span class="keyword">int</span>[] array =  &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态初始化</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[数组长度];</span><br></pre></td></tr></table></figure><h3 id="求数组中的最大值"><a href="#求数组中的最大值" class="headerlink" title="求数组中的最大值:"></a>求数组中的最大值:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] aray = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>&#125;;</span><br><span class="line">      <span class="keyword">int</span> max = aray[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; aray.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (aray[i] &gt; max) &#123;</span><br><span class="line">              max = aray[i];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(max);</span><br></pre></td></tr></table></figure><h3 id="求数组的最小值"><a href="#求数组的最小值" class="headerlink" title="求数组的最小值:"></a>求数组的最小值:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] aray = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>&#125;;</span><br><span class="line">      <span class="keyword">int</span> min = aray[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; aray.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (aray[i] &lt; min) &#123;</span><br><span class="line">              min = aray[i];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(min);</span><br></pre></td></tr></table></figure><h3 id="数组元素的反转-只能使用原数组"><a href="#数组元素的反转-只能使用原数组" class="headerlink" title="数组元素的反转(只能使用原数组):"></a>数组元素的反转(只能使用原数组):</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] aray = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="comment">// 对称位置的交换 min = left(索引位置 0 ),max = right(位置 aray.length)</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> min = <span class="number">0</span>, max = aray.length - <span class="number">1</span>; min &lt; max; min++, max--) &#123;</span><br><span class="line">          <span class="keyword">int</span> temp = aray[min];</span><br><span class="line">          aray[min] = aray[max];</span><br><span class="line">          aray[max] = temp;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; aray.length; i++) &#123;</span><br><span class="line">          System.out.println(aray[i]);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 优化 </span></span><br><span class="line"><span class="keyword">int</span>[] aray = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> min = <span class="number">0</span>, max = aray.length - <span class="number">1</span>; min &lt; max; min++, max--) &#123;</span><br><span class="line">          <span class="keyword">int</span> temp = aray[min];</span><br><span class="line">          aray[min] = aray[max];</span><br><span class="line">          aray[max] = temp;</span><br><span class="line">          &#125;  </span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">// 将数组作为参数传入</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] aray)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; aray.length; i++) &#123;</span><br><span class="line">              System.out.println(aray[i]);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="方法的定义和使用"><a href="#方法的定义和使用" class="headerlink" title="方法的定义和使用:"></a>方法的定义和使用:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主方法之外定义</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eat····&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">eat();</span><br></pre></td></tr></table></figure><h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载:"></a>方法的重载:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">methods</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">methods</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    System.out.println(a+b);</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象:"></a>面向对象:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">面向过程: 当需要实现一个功能的时候，每一个步骤都需要亲力亲为，详细处理每一个细节</span><br><span class="line">    </span><br><span class="line">面向对象: 当需要实现一个功能的时候，不关心具体的步骤，而是找一个已经具有该功能的人，来帮我作事</span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类:"></a>类:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类：是一组相关属性和行为的集合，可以看成是一类事物的模板，使用事务的属性特征和行为特征来描述该类事物</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">  <span class="comment">// 成员变量</span></span><br><span class="line">    <span class="keyword">int</span> age = <span class="number">12</span>;</span><br><span class="line">   String name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">  <span class="comment">// 成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">learn</span><span class="params">()</span></span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;learn·····&quot;</span>);;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 类的使用</span></span><br><span class="line"> Student student = <span class="keyword">new</span> Student();</span><br><span class="line"> System.out.println(student.name);</span><br><span class="line"></span><br><span class="line"> student.learn();</span><br></pre></td></tr></table></figure><h3 id="this"><a href="#this" class="headerlink" title="this:"></a><code>this</code>:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过谁调用的 <span class="keyword">this</span>，谁就是 <span class="keyword">this</span></span><br></pre></td></tr></table></figure><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法:"></a>构造方法:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 无参构造</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.aidou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Random_demo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法执行·········&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random_demo r = <span class="keyword">new</span> Random_demo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.aidou;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student[] students = <span class="keyword">new</span> Student[<span class="number">3</span>];</span><br><span class="line">        Student student = <span class="keyword">new</span> Student(<span class="number">12</span>,<span class="string">&quot;as&quot;</span>);</span><br><span class="line">        Student student2 = <span class="keyword">new</span> Student(<span class="number">22</span>,<span class="string">&quot;ss&quot;</span>);</span><br><span class="line">        Student student3 = <span class="keyword">new</span> Student(<span class="number">32</span>,<span class="string">&quot;sass&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        students[<span class="number">0</span>] = student;</span><br><span class="line">        System.out.println(students[<span class="number">0</span>].getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.aidou;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="集合"><a href="#集合" class="headerlink" title="集合:"></a>集合:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对于 ArrayList 来说，有一个尖括号 &lt;E&gt; 代表泛型</span><br><span class="line">    </span><br><span class="line">泛型: 也就是装在集合中的所有元素,全部是统一的什么类型</span><br><span class="line"></span><br><span class="line">注意: 泛型只能是引用类型,不能是基本类型</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      list.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">      list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">      list.add(<span class="string">&quot;王麻子&quot;</span>);</span><br><span class="line">      System.out.println(list); <span class="comment">// [张三, 李四, 王麻子]</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add(); <span class="comment">// 添加</span></span><br><span class="line">    </span><br><span class="line">remove(); <span class="comment">// 被删除的索引</span></span><br><span class="line"></span><br><span class="line">size(); <span class="comment">// 获取长度</span></span><br><span class="line"></span><br><span class="line">get(); <span class="comment">// 通过索引获取想要的位置</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 集合的遍历</span></span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">       list.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">       list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">       list.add(<span class="string">&quot;王麻子&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">           System.out.println(list.get(i));</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 优化 for 循环</span></span><br><span class="line">       <span class="keyword">for</span>(String item:list)&#123;</span><br><span class="line">           System.out.println(item);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成 6 个 1 ~ 33 之间的随机数，添加到 集中并遍历集合</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line">      <span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      Random r = <span class="keyword">new</span> Random();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">int</span> num = r.nextInt(<span class="number">32</span>) + <span class="number">1</span>;</span><br><span class="line">          list.add(num);</span><br><span class="line">          System.out.println(list.get(i));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建 4 个学生对象,并将学生添加在集合中，之后遍历集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ltd.aidou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student one = <span class="keyword">new</span> Student(<span class="number">12</span>, <span class="string">&quot;张三12&quot;</span>);</span><br><span class="line">        Student two = <span class="keyword">new</span> Student(<span class="number">13</span>, <span class="string">&quot;张三13&quot;</span>);</span><br><span class="line">        Student three = <span class="keyword">new</span> Student(<span class="number">14</span>, <span class="string">&quot;张三14&quot;</span>);</span><br><span class="line">        Student four = <span class="keyword">new</span> Student(<span class="number">15</span>, <span class="string">&quot;张三15&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 添加</span></span><br><span class="line">        list.add(one);</span><br><span class="line">        list.add(two);</span><br><span class="line">        list.add(three);</span><br><span class="line">        list.add(four);</span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            Student s = list.get(i);</span><br><span class="line">            System.out.println(s.getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 集合也可以作为方法的参数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ltd.aidou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student one = <span class="keyword">new</span> Student(<span class="number">12</span>, <span class="string">&quot;张三12&quot;</span>);</span><br><span class="line">        Student two = <span class="keyword">new</span> Student(<span class="number">13</span>, <span class="string">&quot;张三13&quot;</span>);</span><br><span class="line">        Student three = <span class="keyword">new</span> Student(<span class="number">14</span>, <span class="string">&quot;张三14&quot;</span>);</span><br><span class="line">        Student four = <span class="keyword">new</span> Student(<span class="number">15</span>, <span class="string">&quot;张三15&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 添加</span></span><br><span class="line">        list.add(one);</span><br><span class="line">        list.add(two);</span><br><span class="line">        list.add(three);</span><br><span class="line">        list.add(four);</span><br><span class="line">        printArrlist(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrlist</span><span class="params">(ArrayList&lt;Student&gt; list)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            Student name = list.get(i);</span><br><span class="line">            <span class="comment">// list.size() -1  拿到最后一个值</span></span><br><span class="line">            <span class="keyword">if</span> (i == list.size() - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(name.getName() + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(name.getName() + <span class="string">&quot;@&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果: &#123;张三12@张三13@张三14@张三15&#125;</span></span><br></pre></td></tr></table></figure><h3 id="字符串的概述和特点"><a href="#字符串的概述和特点" class="headerlink" title="字符串的概述和特点:"></a>字符串的概述和特点:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">** 字符串的内容不可变</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字符串的截取:</span><br><span class="line"></span><br><span class="line">substring(<span class="keyword">int</span> index,<span class="keyword">int</span> end); <span class="comment">// 起始位置</span></span><br></pre></td></tr></table></figure><h3 id="数组工具类；"><a href="#数组工具类；" class="headerlink" title="数组工具类；"></a>数组工具类；</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为字符串数组</span></span><br><span class="line"><span class="comment">// Arrays.tostring(); </span></span><br><span class="line">      <span class="keyword">int</span>[] array = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;; </span><br><span class="line">        String newArray = Arrays.toString(array);</span><br><span class="line">        System.out.println(newArray); <span class="comment">// [10, 20, 30]</span></span><br><span class="line"></span><br><span class="line">sort(); <span class="comment">// 排序</span></span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承:"></a>继承:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要解决 共性抽取</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="抽象的概念"><a href="#抽象的概念" class="headerlink" title="抽象的概念:"></a>抽象的概念:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ 抽象类不能被实例化。</span><br><span class="line">    </span><br><span class="line">+ 有抽象方法的类，一定是抽象类，但是抽象类可以没有抽象方法。</span><br><span class="line">    </span><br><span class="line">+ 当一个类继承的父类是抽象类的话，需要我们把抽象类中的所有抽象方法全部实现。</span><br><span class="line">    </span><br><span class="line">+ 抽象方法不能有方法体。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.abStract;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">abStract_demo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义抽象方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">cat</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         Animail animail = <span class="keyword">new</span> Animail();</span><br><span class="line">         animail.cat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltd.abStract;</span><br><span class="line"><span class="comment">// 继承之后使用抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animail</span> <span class="keyword">extends</span> <span class="title">abStract_demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;say Aniamail··········&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法重写</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;猫吃鱼············&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="接口"><a href="#接口" class="headerlink" title="接口:"></a>接口:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> 返回值类型(参数列表);</span><br><span class="line"></span><br><span class="line">** 注意事项:</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 接口当中的抽象方法，修饰符必须是两个固定的关键字: <span class="keyword">public</span> <span class="keyword">abstract</span></span><br><span class="line">        </span><br><span class="line">    <span class="number">2.</span> 这两个关键字可以选择性的省略</span><br><span class="line">        </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">接口的使用步骤:</span><br><span class="line"></span><br><span class="line"> <span class="number">1.</span> 接口不能直接使用，必须有一个 “实现类” 来“实现” 该接口</span><br><span class="line">     </span><br><span class="line"> <span class="number">2.</span> 接口的实现类必须覆盖重写(实现)接口中所有的抽象方法</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">左 父 右 子 为多态 (<span class="class"><span class="keyword">class</span> <span class="title">Fu</span>,<span class="title">class</span> <span class="title">Zi</span>)</span></span><br><span class="line"><span class="class">   </span></span><br><span class="line"><span class="class">   <span class="title">Fu</span> <span class="title">obj</span> </span>= <span class="keyword">new</span> Zi();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
